{
    "total_number_of_samples": 45,
    "timestamp": "08/10/2024 15:29:40",
    "errors": 2,
    "equal": 9,
    "accuracy_overall": 20.0,
    "accuracy_CWE": 31.11111111111111,
    "accuracy_severity": 37.77777777777778,
    "CWE_identical": 14,
    "CWE_gt_subset_of_pr": 4,
    "CWE_pr_subset_of_gt": 0,
    "CWE_empty_pr": 3,
    "CWE_non_overlapped": 22,
    "CWE_overlapped": 0,
    "equal_severities": 17,
    "invalid_inferences": 0,
    "cwe_evaluations": [
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Allocation of Resources Without Limits or Throttling in GitHub repository ikus060/rdiffweb prior to 2.5.0a4.\nFile: rdiffweb/controller/__init__.py\nContent: \n<Code>\n# -*- coding: utf-8 -*-\r\n# rdiffweb, A web interface to rdiff-backup repositories\r\n# Copyright (C) 2012-2021 rdiffweb contributors\r\n#\r\n# This program is free software: you can redistribute it and/or modify\r\n# it under the terms of the GNU General Public License as published by\r\n# the Free Software Foundation, either version 3 of the License, or\r\n# (at your option) any later version.\r\n#\r\n# This program is distributed in the hope that it will be useful,\r\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n# GNU General Public License for more details.\r\n#\r\n# You should have received a copy of the GNU General Public License\r\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport logging\r\nimport os\r\nfrom collections import namedtuple\r\n\r\nimport cherrypy\r\nimport pkg_resources\r\n\r\nfrom rdiffweb.core.config import Option\r\nfrom rdiffweb.core.librdiff import RdiffTime\r\nfrom rdiffweb.tools.i18n import ugettext as _\r\n\r\n# Define the logger\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\ndef validate(value, message=None):\r\n    \"\"\"Raise HTTP error if value is not true.\"\"\"\r\n    if not value:\r\n        raise cherrypy.HTTPError(400, message)\r\n\r\n\r\ndef validate_int(value, message=None):\r\n    \"\"\"Raise HTTP Error if the value is not an integer\"\"\"\r\n    try:\r\n        return int(value)\r\n    except ValueError:\r\n        raise cherrypy.HTTPError(400, message)\r\n\r\n\r\ndef validate_isinstance(value, cls, message=None):\r\n    \"\"\"Raise HTTP error if value is not cls.\"\"\"\r\n    if not isinstance(value, cls):\r\n        raise cherrypy.HTTPError(400, message)\r\n\r\n\r\ndef validate_date(value, message=None):\r\n    try:\r\n        return RdiffTime(int(value))\r\n    except ValueError:\r\n        logger.warning(\"invalid date %s\", value)\r\n        raise cherrypy.HTTPError(400, message or _('Invalid date.'))\r\n\r\n\r\nFlashMessage = namedtuple('FlashMessage', ['message', 'level'])\r\n\r\n\r\ndef flash(message, level='info'):\r\n    \"\"\"\r\n    Add a flashin message to the session.\r\n    \"\"\"\r\n    assert message\r\n    assert level in ['info', 'error', 'warning', 'success']\r\n    if 'flash' not in cherrypy.session:  # @UndefinedVariable\r\n        cherrypy.session['flash'] = []  # @UndefinedVariable\r\n    flash_message = FlashMessage(message, level)\r\n    cherrypy.session['flash'].append(flash_message)\r\n\r\n\r\ndef get_flashed_messages():\r\n    if 'flash' in cherrypy.session:  # @UndefinedVariable\r\n        messages = cherrypy.session['flash']  # @UndefinedVariable\r\n        del cherrypy.session['flash']  # @UndefinedVariable\r\n        return messages\r\n    return []\r\n\r\n\r\nclass Controller(object):\r\n\r\n    _header_name = Option(\"header_name\")\r\n\r\n    _footername = Option(\"footer_name\")\r\n\r\n    _footerurl = Option(\"footer_url\")\r\n\r\n    _default_theme = Option(\"default_theme\")\r\n\r\n    @property\r\n    def app(self):\r\n        return cherrypy.request.app\r\n\r\n    def _compile_template(self, template_name, **kwargs):\r\n        \"\"\"\r\n        Used to generate a standard HTML page using the given template.\r\n        This method should be used by subclasses to provide default template\r\n        value.\r\n        \"\"\"\r\n        loc = cherrypy.response.i18n.locale\r\n        parms = {\r\n            \"lang\": loc.language,\r\n            \"header_name\": self._header_name,\r\n            \"theme\": self._default_theme,\r\n            \"footername\": self._footername,\r\n            \"footerurl\": self._footerurl,\r\n            \"get_flashed_messages\": get_flashed_messages,\r\n        }\r\n        if self.app.currentuser:\r\n            parms.update(\r\n                {\r\n                    'username': self.app.currentuser.username,\r\n                    'fullname': self.app.currentuser.fullname,\r\n                    'is_admin': self.app.currentuser.is_admin,\r\n                    'is_maintainer': self.app.currentuser.is_maintainer,\r\n                }\r\n            )\r\n        elif getattr(cherrypy.serving.request, 'login', None):\r\n            parms.update(\r\n                {\r\n                    'username': cherrypy.serving.request.login,\r\n                }\r\n            )\r\n\r\n        # Append custom branding\r\n        if hasattr(self.app.root, \"header_logo\"):\r\n            parms[\"header_logo\"] = '/header_logo'\r\n\r\n        # Check if theme exists.\r\n        default_theme_css = pkg_resources.resource_filename('rdiffweb', 'static/%s.css' % self._default_theme)\r\n        if not os.access(default_theme_css, os.F_OK):\r\n            logger.warning(\"invalid DefaultTheme value, %s doesn't exists\" % default_theme_css)\r\n\r\n        # Append template parameters.\r\n        parms.update(kwargs)\r\n\r\n        return self.app.templates.compile_template(template_name, **parms)\n</Code>\n\nFile: rdiffweb/controller/page_admin_users.py\nContent: \n<Code>\n# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport logging\n\nimport cherrypy\nimport humanfriendly\nfrom wtforms import validators, widgets\nfrom wtforms.fields import Field, HiddenField, PasswordField, SelectField, StringField\nfrom wtforms.fields.html5 import EmailField\n\nfrom rdiffweb.controller import Controller, flash\nfrom rdiffweb.controller.form import CherryForm\nfrom rdiffweb.core.model import UserObject\nfrom rdiffweb.tools.i18n import gettext_lazy as _\n\n# Define the logger\nlogger = logging.getLogger(__name__)\n\n# Max root directory path length\nMAX_PATH = 260\n\n\nclass SizeField(Field):\n    \"\"\"\n    A text field which stores a file size as GiB or GB format.\n    \"\"\"\n\n    widget = widgets.TextInput()\n\n    def __init__(self, label=None, validators=None, **kwargs):\n        super(SizeField, self).__init__(label, validators, **kwargs)\n\n    def _value(self):\n        if self.raw_data:\n            return ' '.join(self.raw_data)\n        else:\n            return self.data and humanfriendly.format_size(self.data, binary=True) or ''\n\n    def process_formdata(self, valuelist):\n        if valuelist:\n            value_str = ''.join(valuelist)\n            # parse_size doesn't handle locales.this mean we need to\n            # replace ',' by '.' to get parse and prefix number with 0\n            value_str = value_str.replace(',', '.').strip()\n            # a value must start with a number.\n            if value_str.startswith('.'):\n                value_str = '0' + value_str\n            try:\n                self.data = humanfriendly.parse_size(value_str)\n            except humanfriendly.InvalidSize:\n                self.data = None\n                raise ValueError(self.gettext('Not a valid file size value'))\n\n\nclass UserForm(CherryForm):\n    userid = HiddenField(_('UserID'))\n    username = StringField(\n        _('Username'),\n        validators=[\n            validators.data_required(),\n            validators.length(max=256, message=_('Username too long.')),\n            validators.length(min=3, message=_('Username too short.')),\n            validators.regexp(UserObject.PATTERN_USERNAME, message=_('Must not contain any special characters.')),\n        ],\n    )\n    fullname = StringField(\n        _('Fullname'),\n        validators=[\n            validators.optional(),\n            validators.length(max=256, message=_('Fullname too long.')),\n            validators.regexp(UserObject.PATTERN_FULLNAME, message=_('Must not contain any special characters.')),\n        ],\n    )\n    email = EmailField(\n        _('Email'),\n        validators=[\n            validators.optional(),\n            validators.length(max=256, message=_('Email too long.')),\n            validators.regexp(UserObject.PATTERN_EMAIL, message=_('Must be a valid email address.')),\n        ],\n    )\n    password = PasswordField(\n        _('Password'),\n        validators=[validators.optional()],\n        description=_('To create an LDAP user, you must leave the password empty.'),\n    )\n    mfa = SelectField(\n        _('Two-Factor Authentication (2FA)'),\n        coerce=int,\n        choices=[\n            (UserObject.DISABLED_MFA, _(\"Disabled\")),\n            (UserObject.ENABLED_MFA, _(\"Enabled\")),\n        ],\n        default=UserObject.DISABLED_MFA,\n        description=_(\n            \"When Two-Factor Authentication (2FA) is enabled for a user, a verification code get sent by email when user login from a new location.\"\n        ),\n        render_kw={'data-beta': 1},\n    )\n    user_root = StringField(\n        _('Root directory'),\n        description=_(\"Absolute path defining the location of the repositories for this user.\"),\n        validators=[\n            validators.length(max=MAX_PATH, message=_('Root directory too long.')),\n        ],\n    )\n    role = SelectField(\n        _('User Role'),\n        coerce=int,\n        choices=[\n            (UserObject.ADMIN_ROLE, _(\"Admin\")),\n            (UserObject.MAINTAINER_ROLE, _(\"Maintainer\")),\n            (UserObject.USER_ROLE, _(\"User\")),\n        ],\n        default=UserObject.USER_ROLE,\n        description=_(\n            \"Admin: may browse and delete everything. Maintainer: may browse and delete their own repo. User: may only browser their own repo.\"\n        ),\n    )\n    disk_quota = SizeField(\n        _('Disk space'),\n        validators=[validators.optional()],\n        description=_(\"Users disk spaces (in bytes). Set to 0 to remove quota (unlimited).\"),\n    )\n    disk_usage = SizeField(\n        _('Quota Used'),\n        validators=[validators.optional()],\n        description=_(\"Disk spaces (in bytes) used by this user.\"),\n        widget=widgets.HiddenInput(),\n    )\n\n    def validate_role(self, field):\n        # Don't allow the user to changes it's \"role\" state.\n        currentuser = cherrypy.request.currentuser\n        if self.username.data == currentuser.username and self.role.data != currentuser.role:\n            raise ValueError(_('Cannot edit your own role.'))\n\n    def validate_mfa(self, field):\n        # Don't allow the user to changes it's \"mfa\" state.\n        currentuser = cherrypy.request.currentuser\n        if self.username.data == currentuser.username and self.mfa.data != currentuser.mfa:\n            raise ValueError(_('Cannot change your own two-factor authentication settings.'))\n\n    def populate_obj(self, userobj):\n        # Save password if defined\n        if self.password.data:\n            userobj.set_password(self.password.data, old_password=None)\n        userobj.role = self.role.data\n        userobj.fullname = self.fullname.data or ''\n        userobj.email = self.email.data or ''\n        userobj.user_root = self.user_root.data\n        if self.mfa.data and not userobj.email:\n            flash(_(\"User email is required to enabled Two-Factor Authentication\"), level='error')\n        else:\n            userobj.mfa = self.mfa.data\n        if not userobj.valid_user_root():\n            flash(_(\"User's root directory %s is not accessible!\") % userobj.user_root, level='error')\n            logger.warning(\"user's root directory %s is not accessible\" % userobj.user_root)\n        else:\n            userobj.refresh_repos(delete=True)\n        # Try to update disk quota if the human readable value changed.\n        # Report error using flash.\n        new_quota = self.disk_quota.data or 0\n        old_quota = humanfriendly.parse_size(humanfriendly.format_size(self.disk_quota.object_data or 0, binary=True))\n        if old_quota != new_quota:\n            userobj.disk_quota = new_quota\n            # Setting quota will silently fail. Check if quota was updated.\n            if userobj.disk_quota != new_quota:\n                flash(_(\"Setting user's quota is not supported\"), level='warning')\n\n\nclass EditUserForm(UserForm):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        # Make username field read-only\n        self.username.render_kw = {'readonly': True}\n        self.username.populate_obj = lambda *args, **kwargs: None\n\n\nclass DeleteUserForm(CherryForm):\n    username = StringField(_('Username'), validators=[validators.data_required()])\n\n\n@cherrypy.tools.is_admin()\nclass AdminUsersPage(Controller):\n    \"\"\"Administration pages. Allow to manage users database.\"\"\"\n\n    def _delete_user(self, action, form):\n        assert action == 'delete'\n        assert form\n        # Validate form.\n        if not form.validate():\n            flash(form.error_message, level='error')\n            return\n        if form.username.data == self.app.currentuser.username:\n            flash(_(\"You cannot remove your own account!\"), level='error')\n        else:\n            try:\n                user = UserObject.get_user(form.username.data)\n                if user:\n                    user.delete()\n                    flash(_(\"User account removed.\"))\n                else:\n                    flash(_(\"User doesn't exists!\"), level='warning')\n            except ValueError as e:\n                flash(e, level='error')\n\n    @cherrypy.expose\n    def default(self, username=None, action=u\"\", **kwargs):\n\n        # If we're just showing the initial page, just do that\n        if action == \"add\":\n            form = UserForm()\n            if form.validate_on_submit():\n                try:\n                    user = UserObject.add_user(username)\n                    form.populate_obj(user)\n                    flash(_(\"User added successfully.\"))\n                except Exception as e:\n                    flash(str(e), level='error')\n            else:\n                flash(form.error_message, level='error')\n        elif action == \"edit\":\n            user = UserObject.get_user(username)\n            if user:\n                form = EditUserForm(obj=user)\n                if form.validate_on_submit():\n                    try:\n                        form.populate_obj(user)\n                        flash(_(\"User information modified successfully.\"))\n                    except Exception as e:\n                        flash(str(e), level='error')\n                else:\n                    flash(form.error_message, level='error')\n            else:\n                flash(_(\"Cannot edit user `%s`: user doesn't exists\") % username, level='error')\n        elif action == 'delete':\n            form = DeleteUserForm()\n            if form.validate_on_submit():\n                self._delete_user(action, form)\n\n        params = {\n            \"add_form\": UserForm(formdata=None),\n            \"edit_form\": EditUserForm(formdata=None),\n            \"users\": UserObject.query.all(),\n        }\n\n        # Build users page\n        return self._compile_template(\"admin_users.html\", **params)\n</Code>\n\nFile: rdiffweb/controller/page_pref_general.py\nContent: \n<Code>\n# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\"\"\"\nDefault preference page to show general user information. It allows user\nto change password ans refresh it's repository view.\n\"\"\"\n\nimport cherrypy\nfrom wtforms.fields import HiddenField, PasswordField, StringField, SubmitField\nfrom wtforms.fields.html5 import EmailField\nfrom wtforms.validators import DataRequired, EqualTo, InputRequired, Length, Optional, Regexp\n\nfrom rdiffweb.controller import Controller, flash\nfrom rdiffweb.controller.form import CherryForm\nfrom rdiffweb.core.model import UserObject\nfrom rdiffweb.tools.i18n import gettext_lazy as _\n\n\nclass UserProfileForm(CherryForm):\n    action = HiddenField(default='set_profile_info')\n    username = StringField(_('Username'), render_kw={'readonly': True})\n    fullname = StringField(\n        _('Fullname'),\n        validators=[\n            Optional(),\n            Length(max=256, message=_('Fullname too long.')),\n            Regexp(UserObject.PATTERN_FULLNAME, message=_('Must not contain any special characters.')),\n        ],\n    )\n    email = EmailField(\n        _('Email'),\n        validators=[\n            DataRequired(),\n            Length(max=256, message=_(\"Email too long.\")),\n            Regexp(UserObject.PATTERN_EMAIL, message=_(\"Must be a valid email address.\")),\n        ],\n    )\n    set_profile_info = SubmitField(_('Save changes'))\n\n    def is_submitted(self):\n        # Validate only if action is set_profile_info\n        return super().is_submitted() and self.action.data == 'set_profile_info'\n\n    def populate_obj(self, user):\n        user.fullname = self.fullname.data\n        user.email = self.email.data\n        user.add()\n\n\nclass UserPasswordForm(CherryForm):\n    action = HiddenField(default='set_password')\n    current = PasswordField(\n        _('Current password'),\n        validators=[InputRequired(_(\"Current password is missing.\"))],\n        description=_(\"You must provide your current password in order to change it.\"),\n    )\n    new = PasswordField(\n        _('New password'),\n        validators=[\n            InputRequired(_(\"New password is missing.\")),\n            EqualTo('confirm', message=_(\"The new password and its confirmation do not match.\")),\n        ],\n    )\n    confirm = PasswordField(\n        _('Confirm new password'), validators=[InputRequired(_(\"Confirmation password is missing.\"))]\n    )\n    set_password = SubmitField(_('Update password'))\n\n    def is_submitted(self):\n        # Validate only if action is set_profile_info\n        return super().is_submitted() and self.action.data == 'set_password'\n\n    def populate_obj(self, user):\n        try:\n            user.set_password(self.new.data, old_password=self.current.data)\n            flash(_(\"Password updated successfully.\"), level='success')\n        except ValueError as e:\n            flash(str(e), level='warning')\n\n\nclass RefreshForm(CherryForm):\n    action = HiddenField(default='update_repos')\n    update_repos = SubmitField(\n        _('Refresh repositories'),\n        description=_(\n            \"Refresh the list of repositories associated to your account. If you recently add a new repository and it doesn't show, you may try to refresh the list.\"\n        ),\n    )\n\n    def is_submitted(self):\n        # Validate only if action is set_profile_info\n        return super().is_submitted() and self.action.data == 'update_repos'\n\n    def populate_obj(self, user):\n        try:\n            user.refresh_repos(delete=True)\n            flash(_(\"Repositories successfully updated\"), level='success')\n        except ValueError as e:\n            flash(str(e), level='warning')\n\n\nclass PagePrefsGeneral(Controller):\n    \"\"\"\n    Plugin to change user profile and password.\n    \"\"\"\n\n    @cherrypy.expose\n    def default(self, **kwargs):\n        # Process the parameters.\n        profile_form = UserProfileForm(obj=self.app.currentuser)\n        password_form = UserPasswordForm()\n        refresh_form = RefreshForm()\n        if profile_form.is_submitted():\n            if profile_form.validate():\n                profile_form.populate_obj(self.app.currentuser)\n                flash(_(\"Profile updated successfully.\"), level='success')\n            else:\n                flash(profile_form.error_message, level='error')\n        elif password_form.is_submitted():\n            if password_form.validate():\n                password_form.populate_obj(self.app.currentuser)\n            else:\n                flash(password_form.error_message, level='error')\n        elif refresh_form.is_submitted():\n            if refresh_form.validate():\n                refresh_form.populate_obj(self.app.currentuser)\n            else:\n                flash(refresh_form.error_message, level='error')\n        params = {\n            'profile_form': profile_form,\n            'password_form': password_form,\n            'refresh_form': refresh_form,\n        }\n        return self._compile_template(\"prefs_general.html\", **params)\n</Code>\n\nFile: rdiffweb/controller/tests/test_page_prefs_general.py\nContent: \n<Code>\n# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\"\"\"\nCreated on Dec 26, 2015\n\n@author: Patrik Dufresne\n\"\"\"\n\nfrom unittest.mock import MagicMock\n\nimport cherrypy\nfrom parameterized import parameterized\n\nimport rdiffweb.test\nfrom rdiffweb.core.model import RepoObject, UserObject\n\n\nclass PagePrefGeneralTest(rdiffweb.test.WebCase):\n\n    PREFS = \"/prefs/general\"\n\n    login = True\n\n    def setUp(self):\n        self.listener = MagicMock()\n        cherrypy.engine.subscribe('user_password_changed', self.listener.user_password_changed, priority=50)\n        return super().setUp()\n\n    def tearDown(self):\n        cherrypy.engine.unsubscribe('user_password_changed', self.listener.user_password_changed)\n        return super().tearDown()\n\n    def _set_password(\n        self,\n        current,\n        new_password,\n        confirm,\n    ):\n        b = {\n            'action': 'set_password',\n            'current': current,\n            'new': new_password,\n            'confirm': confirm,\n        }\n        return self.getPage(self.PREFS, method='POST', body=b)\n\n    def _set_profile_info(self, email, fullname=None):\n        b = {\n            'action': 'set_profile_info',\n            'email': email,\n        }\n        if fullname:\n            b['fullname'] = fullname\n        return self.getPage(self.PREFS, method='POST', body=b)\n\n    def test_get_page(self):\n        # When querying the page\n        self.getPage(self.PREFS)\n        # Then the page is returned\n        self.assertStatus(200)\n        self.assertInBody('User profile')\n\n    def test_change_username_noop(self):\n        # Given an authenticated user\n        # When updating the username\n        self.getPage(\n            self.PREFS,\n            method='POST',\n            body={'action': 'set_profile_info', 'email': 'test@test.com', 'username': 'test'},\n        )\n        self.assertStatus(200)\n        self.assertInBody(\"Profile updated successfully.\")\n        # Then database is updated with fullname\n        user = UserObject.query.filter(UserObject.username == self.USERNAME).first()\n        self.assertIsNotNone(user)\n        self.assertEqual(\"test@test.com\", user.email)\n\n    @parameterized.expand(\n        [\n            # Invalid\n            ('@test.com', False),\n            ('test.com', False),\n            ('test@te_st.com', False),\n            ('test@test.com, test2@test.com', False),\n            # Valid\n            ('test', True),\n            ('My Fullname', True),\n        ]\n    )\n    def test_change_fullname(self, new_fullname, expected_valid):\n        # Given an authenticated user\n        # When update the fullname\n        self._set_profile_info(\"test@test.com\", new_fullname)\n        self.assertStatus(200)\n        if expected_valid:\n            self.assertInBody(\"Profile updated successfully.\")\n            # Then database is updated with fullname\n            self.assertInBody(new_fullname)\n            user = UserObject.query.filter(UserObject.username == self.USERNAME).first()\n            self.assertEqual(new_fullname, user.fullname)\n        else:\n            self.assertNotInBody(\"Profile updated successfully.\")\n\n    def test_change_fullname_method_get(self):\n        # Given an authenticated user\n        # When trying to update full name using GET method\n        self.getPage(self.PREFS + '?action=set_profile_info&email=test@test.com')\n        # Then nothing happen\n        self.assertStatus(200)\n        self.assertNotInBody(\"Profile updated successfully.\")\n        user = UserObject.query.filter(UserObject.username == self.USERNAME).first()\n        self.assertEqual(\"\", user.fullname)\n\n    def test_change_fullname_too_long(self):\n        # Given an authenticated user\n        # When update the fullname\n        self._set_profile_info(\"test@test.com\", \"Fullname\" * 50)\n        # Then page return with error message\n        self.assertStatus(200)\n        self.assertNotInBody(\"Profile updated successfully.\")\n        self.assertInBody(\"Fullname too long.\")\n        # Then database is not updated\n        user = UserObject.query.filter(UserObject.username == self.USERNAME).first()\n        self.assertEqual(\"\", user.fullname)\n\n    def test_change_email(self):\n        self._set_profile_info(\"test@test.com\")\n        self.assertStatus(200)\n        self.assertInBody(\"Profile updated successfully.\")\n\n    @parameterized.expand(\n        [\n            # Invalid\n            ('@test.com', False),\n            ('test.com', False),\n            ('test', False),\n            ('test@te_st.com', False),\n            ('test@test.com, test2@test.com', False),\n            # Valid\n            ('test@test.com', True),\n        ]\n    )\n    def test_change_email_with_invalid_email(self, new_email, expected_valid):\n        self._set_profile_info(new_email)\n        self.assertStatus(200)\n        if expected_valid:\n            self.assertInBody(\"Profile updated successfully.\")\n            self.assertNotInBody(\"Must be a valid email address.\")\n        else:\n            self.assertNotInBody(\"Profile updated successfully.\")\n            self.assertInBody(\"Must be a valid email address.\")\n\n    def test_change_email_with_too_long(self):\n        self._set_profile_info((\"test1\" * 50) + \"@test.com\")\n        self.assertInBody(\"Email too long.\")\n\n    def test_change_password(self):\n        self.listener.user_password_changed.reset_mock()\n        # When udating user's password\n        self._set_password(self.PASSWORD, \"pr3j5Dwi\", \"pr3j5Dwi\")\n        self.assertInBody(\"Password updated successfully.\")\n        # Then a notification is raised\n        self.listener.user_password_changed.assert_called_once()\n\n    def test_change_password_with_wrong_confirmation(self):\n        self._set_password(self.PASSWORD, \"t\", \"a\")\n        self.assertInBody(\"The new password and its confirmation do not match.\")\n\n    def test_change_password_with_wrong_password(self):\n        self._set_password(\"oups\", \"pr3j5Dwi\", \"pr3j5Dwi\")\n        self.assertInBody(\"Wrong password\")\n\n    def test_change_password_with_too_short(self):\n        self._set_password(self.PASSWORD, \"short\", \"short\")\n        self.assertInBody(\"Password must have between 8 and 128 characters.\")\n\n    def test_change_password_with_too_long(self):\n        new_password = 'a' * 129\n        self._set_password(self.PASSWORD, new_password, new_password)\n        self.assertInBody(\"Password must have between 8 and 128 characters.\")\n\n    def test_change_password_method_get(self):\n        # Given an authenticated user\n        # Trying to update password with GET method\n        self.getPage(self.PREFS + '?action=set_password&new=pr3j5Dwi&confirm=pr3j5Dwi&current=' + self.PASSWORD)\n        # Then nothing happen\n        self.assertStatus(200)\n        self.assertNotInBody(\"Password updated successfully.\")\n\n    def test_invalid_pref(self):\n        \"\"\"\n        Check if invalid prefs url is 404 Not Found.\n        \"\"\"\n        self.getPage(\"/prefs/invalid/\")\n        self.assertStatus(404)\n\n    def test_update_repos(self):\n        # Given a user with invalid repositories\n        userobj = UserObject.get_user(self.USERNAME)\n        RepoObject(userid=userobj.userid, repopath='invalid').add()\n        self.assertEqual(['broker-repo', 'invalid', 'testcases'], sorted([r.name for r in userobj.repo_objs]))\n        # When updating the repository list\n        self.getPage(self.PREFS, method='POST', body={'action': 'update_repos'})\n        self.assertStatus(200)\n        # Then a success message is displayed\n        self.assertInBody('Repositories successfully updated')\n        # Then the list is free of inexisting repos.\n        userobj.expire()\n        self.assertEqual(['broker-repo', 'testcases'], sorted([r.name for r in userobj.repo_objs]))\n</Code>\n\nFile: rdiffweb/core/login.py\nContent: \n<Code>\n# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport logging\n\nimport cherrypy\nfrom cherrypy.process.plugins import SimplePlugin\n\nfrom rdiffweb.core.model import UserObject\nfrom rdiffweb.core.passwd import check_password\n\nlogger = logging.getLogger(__name__)\n\n\nclass LoginPlugin(SimplePlugin):\n    \"\"\"\n    This plugins register an \"authenticate\" listener to validate\n    username and password of users. In addition, it provide a \"login\"\n    listener to authenticate and possibly create the user in database.\n    \"\"\"\n\n    add_missing_user = False\n    add_user_default_role = UserObject.USER_ROLE\n    add_user_default_userroot = None\n\n    def start(self):\n        self.bus.log('Start Login plugin')\n        self.bus.subscribe(\"authenticate\", self.authenticate)\n        self.bus.subscribe(\"login\", self.login)\n\n    def stop(self):\n        self.bus.log('Stop Login plugin')\n        self.bus.unsubscribe(\"authenticate\", self.authenticate)\n        self.bus.unsubscribe(\"login\", self.login)\n\n    def authenticate(self, username, password):\n        \"\"\"\n        Only verify the user's credentials using the database store.\n        \"\"\"\n        user = UserObject.query.filter_by(username=username).first()\n        if user and check_password(password, user.hash_password):\n            return username, {}\n        return False\n\n    def login(self, username, password):\n        \"\"\"\n        Validate username password using database and LDAP.\n        \"\"\"\n        # Validate credentials.\n        authenticates = self.bus.publish('authenticate', username, password)\n        authenticates = [a for a in authenticates if a]\n        if not authenticates:\n            return None\n        real_username = authenticates[0][0]\n        extra_attrs = authenticates[0][1]\n        fullname = extra_attrs.get('_fullname', None)\n        email = extra_attrs.get('_email', None)\n        # When enabled, create missing userobj in database.\n        userobj = UserObject.query.filter_by(username=username).first()\n        if userobj is None and self.add_missing_user:\n            try:\n                # At this point, we need to create a new user in database.\n                # In case default values are invalid, let evaluate them\n                # before creating the user in database.\n                default_user_root = self.add_user_default_userroot and self.add_user_default_userroot.format(\n                    **extra_attrs\n                )\n                default_role = UserObject.ROLES.get(self.add_user_default_role)\n                userobj = UserObject.add_user(\n                    username=real_username,\n                    fullname=fullname,\n                    email=email,\n                    role=default_role,\n                    user_root=default_user_root,\n                ).add()\n            except Exception:\n                logger.error('fail to create new user', exc_info=1)\n        if userobj is None:\n            # User doesn't exists in database\n            return None\n\n        # Update user attributes\n        dirty = False\n        if fullname:\n            userobj.fullname = fullname\n            dirty = True\n        if email:\n            userobj.email = email\n            dirty = True\n        if dirty:\n            userobj.add()\n        self.bus.publish('user_login', userobj)\n        return userobj\n\n\ncherrypy.login = LoginPlugin(cherrypy.engine)\ncherrypy.login.subscribe()\n\ncherrypy.config.namespaces['login'] = lambda key, value: setattr(cherrypy.login, key, value)\n</Code>\n\nFile: rdiffweb/core/model/_user.py\nContent: \n<Code>\n# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport datetime\nimport logging\nimport os\nimport secrets\nimport string\n\nimport cherrypy\nfrom sqlalchemy import Column, Integer, SmallInteger, String, and_, event, inspect, or_\nfrom sqlalchemy.exc import IntegrityError\nfrom sqlalchemy.ext.hybrid import hybrid_property\nfrom sqlalchemy.orm import deferred, relationship\nfrom zxcvbn import zxcvbn\n\nimport rdiffweb.tools.db  # noqa\nfrom rdiffweb.core import authorizedkeys\nfrom rdiffweb.core.passwd import check_password, hash_password\nfrom rdiffweb.tools.i18n import ugettext as _\n\nfrom ._repo import RepoObject\nfrom ._sshkey import SshKey\nfrom ._token import Token\n\nlogger = logging.getLogger(__name__)\n\nBase = cherrypy.tools.db.get_base()\n\nSEP = b'/'\n\n\nclass DuplicateSSHKeyError(Exception):\n    \"\"\"\n    Raised by add_authorizedkey when trying to add the same SSH Key twice.\n    \"\"\"\n\n    pass\n\n\nclass UserObject(Base):\n    __tablename__ = 'users'\n    __table_args__ = {'sqlite_autoincrement': True}\n\n    # Value for role.\n    ADMIN_ROLE = 0\n    MAINTAINER_ROLE = 5\n    USER_ROLE = 10\n    ROLES = {\n        'admin': ADMIN_ROLE,\n        'maintainer': MAINTAINER_ROLE,\n        'user': USER_ROLE,\n    }\n    # Value for mfa field\n    DISABLED_MFA = 0\n    ENABLED_MFA = 1\n\n    # Regex pattern to be used for validation.\n    PATTERN_EMAIL = r\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n    PATTERN_FULLNAME = r\"\"\"[^!\"#$%&()*+,./:;<=>?@[\\]_{|}~]+$\"\"\"\n    PATTERN_USERNAME = r\"[a-zA-Z0-9_.\\-]+$\"\n\n    userid = Column('UserID', Integer, primary_key=True)\n    _username = Column('Username', String, nullable=False, unique=True)\n    hash_password = Column('Password', String, nullable=False, default=\"\")\n    _user_root = Column('UserRoot', String, nullable=False, default=\"\")\n    _is_admin = deferred(\n        Column(\n            'IsAdmin',\n            SmallInteger,\n            nullable=False,\n            server_default=\"0\",\n            doc=\"DEPRECATED This column is replaced by 'role'\",\n        )\n    )\n    _email = Column('UserEmail', String, nullable=False, default=\"\")\n    restore_format = deferred(\n        Column(\n            'RestoreFormat',\n            SmallInteger,\n            nullable=False,\n            server_default=\"1\",\n            doc=\"DEPRECATED This column is not used anymore\",\n        )\n    )\n    _role = Column('role', SmallInteger, nullable=False, server_default=str(USER_ROLE))\n    fullname = Column('fullname', String, nullable=False, default=\"\")\n    mfa = Column('mfa', SmallInteger, nullable=False, default=DISABLED_MFA)\n    repo_objs = relationship(\n        'RepoObject',\n        foreign_keys='UserObject.userid',\n        primaryjoin='UserObject.userid == RepoObject.userid',\n        uselist=True,\n        lazy=True,\n        order_by=lambda: RepoObject.repopath,\n    )\n\n    @classmethod\n    def get_user(cls, user):\n        \"\"\"Return a user object.\"\"\"\n        return UserObject.query.filter(UserObject.username == user).first()\n\n    @classmethod\n    def create_admin_user(cls, default_username, default_password):\n        # Check if admin user exists. If not, created it.\n        userobj = UserObject.get_user(default_username)\n        if not userobj:\n            userobj = cls.add_user(default_username, role=UserObject.ADMIN_ROLE, user_root='/backups')\n        # Also make sure to update the password with latest value from config file.\n        if default_password and default_password.startswith('{SSHA}'):\n            userobj.hash_password = default_password\n        elif default_password:\n            userobj.hash_password = hash_password(default_password)\n        else:\n            userobj.hash_password = hash_password('admin123')\n        userobj.add()\n\n    @classmethod\n    def add_user(cls, username, password=None, **attrs):\n        \"\"\"\n        Used to add a new user with an optional password.\n        \"\"\"\n        assert password is None or isinstance(password, str)\n        # Check if user already exists.\n        if UserObject.get_user(username):\n            raise ValueError(_(\"User %s already exists.\" % (username,)))\n\n        # Find a database where to add the user\n        logger.info(\"adding new user [%s]\", username)\n        userobj = UserObject(\n            username=username,\n            hash_password=hash_password(password) if password else '',\n            **attrs,\n        ).add()\n        # Raise event\n        cherrypy.engine.publish('user_added', userobj)\n        # Return user object\n        return userobj\n\n    def add_authorizedkey(self, key, comment=None):\n        \"\"\"\n        Add the given key to the user. Adding the key to his `authorized_keys`\n        file if it exists and adding it to database.\n        \"\"\"\n        # Parse and validate ssh key\n        assert key\n        key = authorizedkeys.check_publickey(key)\n\n        # Remove option, replace comments.\n        key = authorizedkeys.AuthorizedKey(\n            options=None, keytype=key.keytype, key=key.key, comment=comment or key.comment\n        )\n\n        # If a filename exists, use it by default.\n        filename = os.path.join(self.user_root, '.ssh', 'authorized_keys')\n        if os.path.isfile(filename):\n            with open(filename, mode=\"r+\", encoding='utf-8') as fh:\n                if authorizedkeys.exists(fh, key):\n                    raise DuplicateSSHKeyError(_(\"SSH key already exists\"))\n                logger.info(\"add key [%s] to [%s] authorized_keys\", key, self.username)\n                authorizedkeys.add(fh, key)\n        else:\n            # Also look in database.\n            logger.info(\"add key [%s] to [%s] database\", key, self.username)\n            try:\n                SshKey(userid=self.userid, fingerprint=key.fingerprint, key=key.getvalue()).add()\n            except IntegrityError:\n                SshKey.session.rollback()\n                raise DuplicateSSHKeyError(\n                    _(\"Duplicate key. This key already exists or is associated to another user.\")\n                )\n        cherrypy.engine.publish('user_attr_changed', self, {'authorizedkeys': True})\n\n    def add_access_token(self, name, expiration_time=None, length=16):\n        \"\"\"\n        Create a new access token. Return the un-encrypted value of the token.\n        \"\"\"\n        assert name\n        assert length >= 8\n        # Generate a random token\n        token = ''.join(secrets.choice(string.ascii_lowercase) for i in range(length))\n        # Store hash token\n        try:\n            obj = Token(userid=self.userid, name=name, hash_token=hash_password(token), expiration_time=expiration_time)\n            obj.add()\n        except IntegrityError:\n            Token.session.rollback()\n            raise ValueError(_(\"Duplicate token name: %s\") % name)\n        cherrypy.engine.publish('access_token_added', self, name)\n        return token\n\n    def valid_user_root(self):\n        \"\"\"\n        Check if the current user_root is valid and readable\n        \"\"\"\n        try:\n            return os.access(self.user_root, os.F_OK) and os.path.isdir(self.user_root)\n        except Exception:\n            return False\n\n    def delete(self, *args, **kwargs):\n        cfg = cherrypy.tree.apps[''].cfg\n        if self.username == cfg.admin_user:\n            raise ValueError(_(\"can't delete admin user\"))\n        # FIXME This should be deleted by cascade\n        SshKey.query.filter(SshKey.userid == self.userid).delete()\n        RepoObject.query.filter(RepoObject.userid == self.userid).delete()\n        Token.query.filter(Token.userid == self.userid).delete()\n        # Delete ourself\n        Base.delete(self)\n\n    def delete_authorizedkey(self, fingerprint):\n        \"\"\"\n        Remove the given key from the user. Remove the key from his\n        `authorized_keys` file if it exists and from database database.\n        \"\"\"\n        # If a filename exists, use it by default.\n        filename = os.path.join(self.user_root, '.ssh', 'authorized_keys')\n        if os.path.isfile(filename):\n            with open(filename, mode='r+', encoding='utf-8') as fh:\n                logger.info(\"removing key [%s] from [%s] authorized_keys\", fingerprint, self.username)\n                authorizedkeys.remove(fh, fingerprint)\n        else:\n            # Also look in database.\n            logger.info(\"removing key [%s] from [%s] database\", fingerprint, self.username)\n            SshKey.query.filter(and_(SshKey.userid == self.userid, SshKey.fingerprint == fingerprint)).delete()\n        cherrypy.engine.publish('user_attr_changed', self, {'authorizedkeys': True})\n\n    def delete_access_token(self, name):\n        assert name\n        if not Token.query.filter(Token.userid == self.userid, Token.name == name).delete():\n            raise ValueError(_(\"token name doesn't exists: %s\") % name)\n\n    @property\n    def disk_usage(self):\n        # Skip if user_root is invalid.\n        if not self.user_root or not os.path.exists(self.user_root):\n            return 0\n        values = cherrypy.engine.publish('get_disk_usage', self)\n        # Return the first not None value\n        return next((v for v in values if v is not None), 0)\n\n    @property\n    def disk_quota(self):\n        # Skip if user_root is invalid.\n        if not self.user_root or not os.path.exists(self.user_root):\n            return 0\n        values = cherrypy.engine.publish('get_disk_quota', self)\n        # Return the first not None value\n        return next((v for v in values if v is not None), 0)\n\n    @disk_quota.setter\n    def disk_quota(self, value):\n        # Skip if user_root is invalid.\n        if not self.user_root or not os.path.exists(self.user_root):\n            return\n        cherrypy.engine.publish('set_disk_quota', self, value)\n\n    @property\n    def authorizedkeys(self):\n        \"\"\"\n        Return an iterator on the authorized key. Either from his\n        `authorized_keys` file if it exists or from database.\n        \"\"\"\n        # If a filename exists, use it by default.\n        filename = os.path.join(self.user_root, '.ssh', 'authorized_keys')\n        if os.path.isfile(filename):\n            for k in authorizedkeys.read(filename):\n                yield k\n\n        # Also look in database.\n        for record in SshKey.query.filter(SshKey.userid == self.userid).all():\n            yield authorizedkeys.check_publickey(record.key)\n\n    def refresh_repos(self, delete=False):\n        \"\"\"\n        Return list of repositories object to reflect the filesystem folders.\n\n        Return a RepoObject for each sub directories under `user_root` with `rdiff-backup-data`.\n        \"\"\"\n        # Update the repositories by walking in the directory tree.\n        def _onerror(unused):\n            logger.error('error updating user [%s] repos' % self.username, exc_info=1)\n\n        # Get application config\n        cfg = cherrypy.tree.apps[''].cfg\n\n        dirty = False\n        records = RepoObject.query.filter(RepoObject.userid == self.userid).order_by(RepoObject.repopath).all()\n        user_root = os.fsencode(self.user_root)\n        for root, dirs, unused_files in os.walk(user_root, _onerror):\n            for name in dirs.copy():\n                if name.startswith(b'.'):\n                    dirs.remove(name)\n            if b'rdiff-backup-data' in dirs:\n                repopath = os.path.relpath(root, start=user_root)\n                del dirs[:]\n                # Handle special scenario when the repo is the\n                # user_root\n                repopath = b'' if repopath == b'.' else repopath\n\n                # Check if repo path exists.\n                record_match = next((record for record in records if record.repopath == os.fsdecode(repopath)), None)\n                if not record_match:\n                    # Add repository to database.\n                    RepoObject(user=self, repopath=os.fsdecode(repopath)).add()\n                    dirty = True\n                else:\n                    records.remove(record_match)\n            if root.count(SEP) - user_root.count(SEP) >= cfg.max_depth:\n                del dirs[:]\n        # If enabled, remove entried from database\n        if delete:\n            for record in records:\n                RepoObject.query.filter(RepoObject.repoid == record.repoid).delete()\n        return dirty\n\n    @hybrid_property\n    def is_admin(self):\n        return self.role <= self.ADMIN_ROLE\n\n    @hybrid_property\n    def is_ldap(self):\n        return self.hash_password is None or self.hash_password == ''\n\n    @is_ldap.expression\n    def is_ldap(cls):\n        return or_(cls.hash_password.is_(None), cls.hash_password == '')\n\n    @hybrid_property\n    def is_maintainer(self):\n        return self.role <= self.MAINTAINER_ROLE\n\n    def set_password(self, password, old_password=None):\n        \"\"\"\n        Change the user's password. Raise a ValueError if the username or\n        the password are invalid.\n        \"\"\"\n        assert isinstance(password, str)\n        assert old_password is None or isinstance(old_password, str)\n        if not password:\n            raise ValueError(\"password can't be empty\")\n        cfg = cherrypy.tree.apps[''].cfg\n\n        # Cannot update admin-password if defined\n        if self.username == cfg.admin_user and cfg.admin_password:\n            raise ValueError(_(\"can't update admin-password defined in configuration file\"))\n\n        if old_password and not check_password(old_password, self.hash_password):\n            raise ValueError(_(\"Wrong password\"))\n\n        # Check password length\n        if cfg.password_min_length > len(password) or len(password) > cfg.password_max_length:\n            raise ValueError(\n                _('Password must have between %(min)d and %(max)d characters.')\n                % {'min': cfg.password_min_length, 'max': cfg.password_max_length}\n            )\n\n        # Verify password score using zxcvbn\n        stats = zxcvbn(password)\n        if stats.get('score') < cfg.password_score:\n            msg = _('Password too weak.')\n            warning = stats.get('feedback', {}).get('warning')\n            suggestions = stats.get('feedback', {}).get('suggestions')\n            if warning:\n                msg += ' ' + warning\n            if suggestions:\n                msg += ' ' + ' '.join(suggestions)\n            raise ValueError(msg)\n\n        logger.info(\"updating user password [%s]\", self.username)\n        self.hash_password = hash_password(password)\n\n    def __eq__(self, other):\n        return type(self) == type(other) and inspect(self).key == inspect(other).key\n\n    @hybrid_property\n    def username(self):\n        return self._username\n\n    @username.setter\n    def username(self, value):\n        oldvalue = self._username\n        self._username = value\n        if oldvalue != value:\n            cherrypy.engine.publish('user_attr_changed', self, {'username': (oldvalue, value)})\n\n    @hybrid_property\n    def role(self):\n        if self._role is None:\n            return self.USER_ROLE\n        return self._role\n\n    @role.setter\n    def role(self, value):\n        oldvalue = self._role\n        self._role = value\n        if oldvalue != value:\n            cherrypy.engine.publish('user_attr_changed', self, {'role': (oldvalue, value)})\n\n    @hybrid_property\n    def email(self):\n        return self._email\n\n    @email.setter\n    def email(self, value):\n        oldvalue = self._email\n        self._email = value\n        if oldvalue != value:\n            cherrypy.engine.publish('user_attr_changed', self, {'email': (oldvalue, value)})\n\n    @hybrid_property\n    def user_root(self):\n        return self._user_root\n\n    @user_root.setter\n    def user_root(self, value):\n        oldvalue = self._user_root\n        self._user_root = value\n        if oldvalue != value:\n            cherrypy.engine.publish('user_attr_changed', self, {'user_root': (oldvalue, value)})\n\n    def validate_access_token(self, token):\n        \"\"\"\n        Check if the given token matches.\n        \"\"\"\n        for access_token in Token.query.all():\n            # If token expired. Let delete it.\n            if access_token.is_expired:\n                access_token.delete()\n                continue\n            if check_password(token, access_token.hash_token):\n                # When it matches, let update the record.\n                access_token.access_time = datetime.datetime.utcnow\n                return True\n        return False\n\n\n@event.listens_for(UserObject.hash_password, \"set\")\ndef hash_password_set(target, value, oldvalue, initiator):\n    if value and value != oldvalue:\n        cherrypy.engine.publish('user_password_changed', target)\n\n\n@event.listens_for(UserObject, 'after_delete')\ndef user_after_delete(mapper, connection, target):\n    \"\"\"\n    Publish event when user is deleted.\n    \"\"\"\n    cherrypy.engine.publish('user_deleted', target.username)\n</Code>\n\nFile: rdiffweb/core/model/tests/test_user.py\nContent: \n<Code>\n# -*- coding: utf-8 -*-\n# rdiffweb, A web interface to rdiff-backup repositories\n# Copyright (C) 2012-2021 rdiffweb contributors\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\"\"\"\nCreated on June 30, 2022\n\nModule to test `user` model.\n\n@author: Patrik Dufresne <patrik@ikus-soft.com>\n\"\"\"\nimport datetime\nimport os\nfrom io import StringIO, open\nfrom unittest.mock import MagicMock\n\nimport cherrypy\nimport pkg_resources\n\nimport rdiffweb.test\nfrom rdiffweb.core import authorizedkeys\nfrom rdiffweb.core.model import DuplicateSSHKeyError, RepoObject, Token, UserObject\nfrom rdiffweb.core.passwd import check_password\n\n\nclass UserObjectTest(rdiffweb.test.WebCase):\n\n    default_config = {\n        'email-send-changed-notification': True,\n    }\n\n    def _read_ssh_key(self):\n        \"\"\"Readthe pub key from test packages\"\"\"\n        filename = pkg_resources.resource_filename('rdiffweb.core.tests', 'test_publickey_ssh_rsa.pub')\n        with open(filename, 'r', encoding='utf8') as f:\n            return f.readline()\n\n    def _read_authorized_keys(self):\n        \"\"\"Read the content of test_authorized_keys\"\"\"\n        filename = pkg_resources.resource_filename('rdiffweb.core.tests', 'test_authorized_keys')\n        with open(filename, 'r', encoding='utf8') as f:\n            return f.read()\n\n    def setUp(self):\n        super().setUp()\n        self.listener = MagicMock()\n        cherrypy.engine.subscribe('access_token_added', self.listener.access_token_added, priority=50)\n        cherrypy.engine.subscribe('queue_mail', self.listener.queue_mail, priority=50)\n        cherrypy.engine.subscribe('user_added', self.listener.user_added, priority=50)\n        cherrypy.engine.subscribe('user_attr_changed', self.listener.user_attr_changed, priority=50)\n        cherrypy.engine.subscribe('user_deleted', self.listener.user_deleted, priority=50)\n        cherrypy.engine.subscribe('user_login', self.listener.user_login, priority=50)\n        cherrypy.engine.subscribe('user_password_changed', self.listener.user_password_changed, priority=50)\n\n    def tearDown(self):\n        cherrypy.engine.unsubscribe('access_token_added', self.listener.access_token_added)\n        cherrypy.engine.unsubscribe('queue_mail', self.listener.queue_mail)\n        cherrypy.engine.unsubscribe('user_added', self.listener.user_added)\n        cherrypy.engine.unsubscribe('user_attr_changed', self.listener.user_attr_changed)\n        cherrypy.engine.unsubscribe('user_deleted', self.listener.user_deleted)\n        cherrypy.engine.unsubscribe('user_login', self.listener.user_login)\n        cherrypy.engine.unsubscribe('user_password_changed', self.listener.user_password_changed)\n        return super().tearDown()\n\n    def test_add_user(self):\n        \"\"\"Add user to database.\"\"\"\n        userobj = UserObject.add_user('joe')\n        self.assertIsNotNone(userobj)\n        self.assertIsNotNone(UserObject.get_user('joe'))\n        # Check if listener called\n        self.listener.user_added.assert_called_once_with(userobj)\n\n    def test_add_user_updated_by_listener(self):\n        \"\"\"Add user to database.\"\"\"\n        # Given a listener with side effet\n        def change_user_obj(userobj):\n            userobj.user_root = '/new/value'\n\n        self.listener.user_added.side_effect = change_user_obj\n        # When adding user\n        userobj = UserObject.add_user('joe')\n        self.assertIsNotNone(userobj)\n        self.assertIsNotNone(UserObject.get_user('joe'))\n        # Then lister get called\n        self.listener.user_added.assert_called_once_with(userobj)\n        # Then object was updated by listener\n        self.assertEqual('/new/value', userobj.user_root)\n\n    def test_add_user_with_duplicate(self):\n        \"\"\"Add user to database.\"\"\"\n        UserObject.add_user('denise')\n        self.listener.user_added.reset_mock()\n        with self.assertRaises(ValueError):\n            UserObject.add_user('denise')\n        # Check if listener called\n        self.listener.user_added.assert_not_called()\n\n    def test_add_user_with_password(self):\n        \"\"\"Add user to database with password.\"\"\"\n        userobj = UserObject.add_user('jo', 'password')\n        self.assertIsNotNone(UserObject.get_user('jo'))\n        # Check if listener called\n        self.listener.user_added.assert_called_once_with(userobj)\n\n    def test_delete_admin_user(self):\n        # Trying to delete admin user should raise an error.\n        userobj = UserObject.get_user('admin')\n        with self.assertRaises(ValueError):\n            userobj.delete()\n\n    def test_users(self):\n        # Check admin exists\n        self.assertEqual(1, UserObject.query.count())\n        # Create user.\n        UserObject.add_user('annik')\n        users = UserObject.query.all()\n        self.assertEqual(2, len(users))\n        self.assertEqual('annik', users[1].username)\n        # Then 2 user exists\n        self.assertEqual(2, UserObject.query.count())\n\n    def test_get_user(self):\n        # Create new user\n        user = UserObject.add_user('bernie', 'my-password')\n        user.user_root = self.testcases\n        user.role = UserObject.ADMIN_ROLE\n        user.email = 'bernie@gmail.com'\n        user.refresh_repos()\n        self.assertEqual(['broker-repo', 'testcases'], sorted([r.name for r in user.repo_objs]))\n        user.repo_objs[0].maxage = -1\n        user.repo_objs[1].maxage = 3\n\n        # Get user record.\n        obj = UserObject.get_user('bernie')\n        self.assertIsNotNone(obj)\n        self.assertEqual('bernie', obj.username)\n        self.assertEqual('bernie@gmail.com', obj.email)\n        self.assertEqual(['broker-repo', 'testcases'], sorted([r.name for r in obj.repo_objs]))\n        self.assertEqual(self.testcases, obj.user_root)\n        self.assertEqual(True, obj.is_admin)\n        self.assertEqual(UserObject.ADMIN_ROLE, obj.role)\n\n        # Get repo object\n        self.assertEqual('broker-repo', obj.repo_objs[0].name)\n        self.assertEqual(-1, obj.repo_objs[0].maxage)\n        self.assertEqual('testcases', obj.repo_objs[1].name)\n        self.assertEqual(3, obj.repo_objs[1].maxage)\n\n    def test_get_user_with_invalid_user(self):\n        self.assertIsNone(UserObject.get_user('invalid'))\n\n    def test_get_set(self):\n        user = UserObject.add_user('larry', 'password')\n\n        self.assertEqual('', user.email)\n        self.assertEqual([], user.repo_objs)\n        self.assertEqual('', user.user_root)\n        self.assertEqual(False, user.is_admin)\n        self.assertEqual(UserObject.USER_ROLE, user.role)\n\n        user.user_root = self.testcases\n        user.refresh_repos()\n        self.listener.user_attr_changed.assert_called_with(user, {'user_root': ('', self.testcases)})\n        self.listener.user_attr_changed.reset_mock()\n        user.role = UserObject.ADMIN_ROLE\n        self.listener.user_attr_changed.assert_called_with(\n            user, {'role': (UserObject.USER_ROLE, UserObject.ADMIN_ROLE)}\n        )\n        self.listener.user_attr_changed.reset_mock()\n        user.email = 'larry@gmail.com'\n        self.listener.user_attr_changed.assert_called_with(user, {'email': ('', 'larry@gmail.com')})\n        self.listener.user_attr_changed.reset_mock()\n\n        self.assertEqual('larry@gmail.com', user.email)\n        self.assertEqual(['broker-repo', 'testcases'], sorted([r.name for r in user.repo_objs]))\n        self.assertEqual(self.testcases, user.user_root)\n        self.assertEqual(True, user.is_admin)\n        self.assertEqual(UserObject.ADMIN_ROLE, user.role)\n\n    def test_set_password_update(self):\n        # Given a user in database with a password\n        userobj = UserObject.add_user('annik', 'password')\n        self.listener.user_password_changed.reset_mock()\n        # When updating the user's password\n        userobj.set_password('new_password')\n        # Then password is SSHA\n        self.assertTrue(check_password('new_password', userobj.hash_password))\n        # Check if listener called\n        self.listener.user_password_changed.assert_called_once_with(userobj)\n\n    def test_set_password_with_old_password(self):\n        # Given a user in drabase with a password\n        userobj = UserObject.add_user('john', 'password')\n        self.listener.user_password_changed.reset_mock()\n        # When updating the user's password with old_password\n        userobj.set_password('new_password', old_password='password')\n        # Then password is SSHA\n        self.assertTrue(check_password('new_password', userobj.hash_password))\n        # Check if listener called\n        self.listener.user_password_changed.assert_called_once_with(userobj)\n\n    def test_set_password_with_invalid_old_password(self):\n        # Given a user in drabase with a password\n        userobj = UserObject.add_user('foo', 'password')\n        self.listener.user_password_changed.reset_mock()\n        # When updating the user's password with wrong old_password\n        # Then an exception is raised\n        with self.assertRaises(ValueError):\n            userobj.set_password('new_password', old_password='invalid')\n        # Check if listener called\n        self.listener.user_password_changed.assert_not_called()\n\n    def test_delete_user(self):\n        # Given an existing user in database\n        userobj = UserObject.add_user('vicky')\n        self.assertIsNotNone(UserObject.get_user('vicky'))\n        # When deleting that user\n        userobj.delete()\n        # Then user it no longer in database\n        self.assertIsNone(UserObject.get_user('vicky'))\n        # Then listner was called\n        self.listener.user_deleted.assert_called_once_with('vicky')\n\n    def test_set_password_empty(self):\n        \"\"\"Expect error when trying to update password of invalid user.\"\"\"\n        userobj = UserObject.add_user('john')\n        with self.assertRaises(ValueError):\n            self.assertFalse(userobj.set_password(''))\n\n    def test_disk_quota(self):\n        \"\"\"\n        Just make a call to the function.\n        \"\"\"\n        userobj = UserObject.get_user(self.USERNAME)\n        userobj.disk_quota\n\n    def test_disk_usage(self):\n        \"\"\"\n        Just make a call to the function.\n        \"\"\"\n        userobj = UserObject.get_user(self.USERNAME)\n        disk_usage = userobj.disk_usage\n        self.assertIsInstance(disk_usage, int)\n\n    def test_add_authorizedkey_without_file(self):\n        \"\"\"\n        Add an ssh key for a user without an authorizedkey file.\n        \"\"\"\n        # Read the pub key\n        key = self._read_ssh_key()\n        # Add the key to the user\n        userobj = UserObject.get_user(self.USERNAME)\n        userobj.add_authorizedkey(key)\n\n        # validate\n        keys = list(userobj.authorizedkeys)\n        self.assertEqual(1, len(keys), \"expecting one key\")\n        self.assertEqual(\"3c:99:ed:a7:82:a8:71:09:2c:15:3d:78:4a:8c:11:99\", keys[0].fingerprint)\n\n    def test_add_authorizedkey_duplicate(self):\n        # Read the pub key\n        key = self._read_ssh_key()\n        # Add the key to the user\n        userobj = UserObject.get_user(self.USERNAME)\n        userobj.add_authorizedkey(key)\n        # Add the same key\n        with self.assertRaises(DuplicateSSHKeyError):\n            userobj.add_authorizedkey(key)\n\n    def test_add_authorizedkey_with_file(self):\n        \"\"\"\n        Add an ssh key for a user with an authorizedkey file.\n        \"\"\"\n        userobj = UserObject.get_user(self.USERNAME)\n\n        # Create empty authorized_keys file\n        os.mkdir(os.path.join(userobj.user_root, '.ssh'))\n        filename = os.path.join(userobj.user_root, '.ssh', 'authorized_keys')\n        open(filename, 'a').close()\n\n        # Read the pub key\n        key = self._read_ssh_key()\n        userobj.add_authorizedkey(key)\n\n        # Validate\n        with open(filename, 'r') as fh:\n            self.assertEqual(key, fh.read())\n\n    def test_delete_authorizedkey_without_file(self):\n        \"\"\"\n        Remove an ssh key for a user without authorizedkey file.\n        \"\"\"\n        # Update user with ssh keys.\n        data = self._read_authorized_keys()\n        userobj = UserObject.get_user(self.USERNAME)\n        for k in authorizedkeys.read(StringIO(data)):\n            try:\n                userobj.add_authorizedkey(k.getvalue())\n            except ValueError:\n                # Some ssh key in the testing file are not valid.\n                pass\n\n        # Get the keys\n        keys = list(userobj.authorizedkeys)\n        self.assertEqual(2, len(keys))\n\n        # Remove a key\n        userobj.delete_authorizedkey(\"9a:f1:69:3c:bc:5a:cd:02:5e:33:bc:cd:c0:01:eb:4c\")\n\n        # Validate\n        keys = list(userobj.authorizedkeys)\n        self.assertEqual(1, len(keys))\n\n    def test_delete_authorizedkey_with_file(self):\n        \"\"\"\n        Remove an ssh key for a user with authorizedkey file.\n        \"\"\"\n        # Create authorized_keys file\n        data = self._read_authorized_keys()\n        userobj = UserObject.get_user(self.USERNAME)\n        os.mkdir(os.path.join(userobj.user_root, '.ssh'))\n        filename = os.path.join(userobj.user_root, '.ssh', 'authorized_keys')\n        with open(filename, 'w') as f:\n            f.write(data)\n\n        # Get the keys\n        keys = list(userobj.authorizedkeys)\n        self.assertEqual(5, len(keys))\n\n        # Remove a key\n        userobj.delete_authorizedkey(\"9a:f1:69:3c:bc:5a:cd:02:5e:33:bc:cd:c0:01:eb:4c\")\n\n        # Validate\n        keys = list(userobj.authorizedkeys)\n        self.assertEqual(4, len(keys))\n\n    def test_repo_objs(self):\n        # Given a user with a list of repositories\n        userobj = UserObject.get_user(self.USERNAME)\n        repos = sorted(userobj.repo_objs, key=lambda r: r.name)\n        self.assertEqual(['broker-repo', 'testcases'], [r.name for r in repos])\n        # When deleting a repository empty list\n        repos[1].delete()\n        # Then the repository is removed from the list.\n        self.assertEqual(['broker-repo'], sorted([r.name for r in userobj.repo_objs]))\n\n    def test_refresh_repos_without_delete(self):\n        # Given a user with invalid repositories\n        userobj = UserObject.get_user(self.USERNAME)\n        RepoObject.query.delete()\n        RepoObject(userid=userobj.userid, repopath='invalid').add()\n        self.assertEqual(['invalid'], sorted([r.name for r in userobj.repo_objs]))\n        # When updating the repository list without deletion\n        userobj.refresh_repos()\n        # Then the list invlaid the invalid repo and new repos\n        self.assertEqual(['broker-repo', 'invalid', 'testcases'], sorted([r.name for r in userobj.repo_objs]))\n\n    def test_refresh_repos_with_delete(self):\n        # Given a user with invalid repositories\n        userobj = UserObject.get_user(self.USERNAME)\n        RepoObject.query.delete()\n        RepoObject(userid=userobj.userid, repopath='invalid').add()\n        self.assertEqual(['invalid'], sorted([r.name for r in userobj.repo_objs]))\n        # When updating the repository list without deletion\n        userobj.refresh_repos(delete=True)\n        # Then the list invlaid the invalid repo and new repos\n        userobj.expire()\n        self.assertEqual(['broker-repo', 'testcases'], sorted([r.name for r in userobj.repo_objs]))\n\n    def test_refresh_repos_with_single_repo(self):\n        # Given a user with invalid repositories\n        userobj = UserObject.get_user(self.USERNAME)\n        userobj.user_root = os.path.join(self.testcases, 'testcases')\n        # When updating the repository list without deletion\n        userobj.refresh_repos(delete=True)\n        # Then the list invlaid the invalid repo and new repos\n        userobj.expire()\n        self.assertEqual([''], sorted([r.name for r in userobj.repo_objs]))\n\n    def test_add_access_token(self):\n        # Given a user with an email\n        userobj = UserObject.get_user(self.USERNAME)\n        userobj.email = 'test@examples.com'\n        userobj.add()\n        # When adding a new token\n        token = userobj.add_access_token('test')\n        # Then a new token get created\n        self.assertTrue(token)\n        tokenobj = Token.query.filter(Token.userid == userobj.userid).first()\n        self.assertTrue(tokenobj)\n        self.assertEqual(None, tokenobj.expiration_time)\n        self.assertEqual(None, tokenobj.access_time)\n        # Then an email is sent to the user.\n        self.listener.access_token_added.assert_called_once_with(userobj, 'test')\n        self.listener.queue_mail.assert_called_once()\n\n    def test_add_access_token_duplicate_name(self):\n        # Given a user with an existing token\n        userobj = UserObject.get_user(self.USERNAME)\n        userobj.add_access_token('test')\n        self.assertEqual(1, Token.query.filter(Token.userid == userobj.userid).count())\n        # When adding a new token with the same name\n        with self.assertRaises(ValueError):\n            userobj.add_access_token('test')\n        # Then token is not created\n        self.assertEqual(1, Token.query.filter(Token.userid == userobj.userid).count())\n        # Then an email is not sent.\n        self.listener.access_token_added.assert_called_once_with(userobj, 'test')\n\n    def test_delete_access_token(self):\n        # Given a user with an existing token\n        userobj = UserObject.get_user(self.USERNAME)\n        userobj.add_access_token('test')\n        self.assertEqual(1, Token.query.filter(Token.userid == userobj.userid).count())\n        # When deleting an access token\n        userobj.delete_access_token('test')\n        # Then Token get deleted\n        self.assertEqual(0, Token.query.filter(Token.userid == userobj.userid).count())\n\n    def test_delete_access_token_invalid(self):\n        # Given a user with an existing token\n        userobj = UserObject.get_user(self.USERNAME)\n        userobj.add_access_token('test')\n        self.assertEqual(1, Token.query.filter(Token.userid == userobj.userid).count())\n        # When deleting an invalid access token\n        with self.assertRaises(ValueError):\n            userobj.delete_access_token('invalid')\n        # Then Token not deleted\n        self.assertEqual(1, Token.query.filter(Token.userid == userobj.userid).count())\n\n    def test_delete_user_remove_access_tokens(self):\n        # Given a user with an existing token\n        userobj = UserObject.add_user('testuser', 'password')\n        userobj.add_access_token('test')\n        self.assertEqual(1, Token.query.filter(Token.userid == userobj.userid).count())\n        # When deleting the user\n        userobj.delete()\n        # Then Token get deleted\n        self.assertEqual(0, Token.query.filter(Token.userid == userobj.userid).count())\n\n    def test_verify_access_token(self):\n        # Given a user with an existing token\n        userobj = UserObject.get_user(self.USERNAME)\n        token = userobj.add_access_token('test')\n        self.assertEqual(1, Token.query.filter(Token.userid == userobj.userid).count())\n        # When validating the token\n        # Then token is valid\n        self.assertTrue(userobj.validate_access_token(token))\n\n    def test_verify_access_token_with_expired(self):\n        # Given a user with an existing token\n        userobj = UserObject.get_user(self.USERNAME)\n        token = userobj.add_access_token(\n            'test', expiration_time=datetime.datetime.now() - datetime.timedelta(seconds=1)\n        )\n        self.assertEqual(1, Token.query.filter(Token.userid == userobj.userid).count())\n        # When validating the token\n        # Then token is invalid\n        self.assertFalse(userobj.validate_access_token(token))\n        # Then token get removed\n        self.assertEqual(0, Token.query.filter(Token.userid == userobj.userid).count())\n\n    def test_verify_access_token_with_invalid(self):\n        # Given a user with an existing token\n        userobj = UserObject.get_user(self.USERNAME)\n        userobj.add_access_token('test', expiration_time=datetime.datetime.now())\n        self.assertEqual(1, Token.query.filter(Token.userid == userobj.userid).count())\n        # When validating the token\n        # Then token is invalid\n        self.assertFalse(userobj.validate_access_token('invalid'))\n\n\nclass UserObjectWithAdminPassword(rdiffweb.test.WebCase):\n\n    # password: test\n    default_config = {'admin-password': '{SSHA}wbSK4hlEX7mtGJplFi2oN6ABm6Y3Bo1e'}\n\n    def setUp(self):\n        # Do nothing - We need to skip the default setup to avoid deleting the records.\n        pass\n\n    def test_create_admin_user(self):\n        # Given admin-password is configure\n        # When database get created\n        # Then admin user get created with 'test' password\n        userobj = UserObject.get_user(self.USERNAME)\n        self.assertIsNotNone(userobj)\n        self.assertEqual('{SSHA}wbSK4hlEX7mtGJplFi2oN6ABm6Y3Bo1e', userobj.hash_password)\n        self.assertTrue(check_password('test', userobj.hash_password))\n\n    def test_set_password(self):\n        # Given admin-password is configure\n        # When trying to update admin password\n        # Then an exception is raised\n        userobj = UserObject.get_user(self.USERNAME)\n        with self.assertRaises(ValueError):\n            userobj.set_password('newpassword')\n</Code>"
                }
            ],
            "url": "https://github.com/ikus060/rdiffweb/commit/b5e3bb0a98268d18ceead36ab9b2b7eaacd659a8",
            "description": "Allocation of Resources Without Limits or Throttling in GitHub repository ikus060/rdiffweb prior to 2.5.0a4.",
            "date": "2022-10-06",
            "github_description": "No descriptions found.",
            "llm_raw_output": null,
            "llm_output": null,
            "ground_truth_CVE": "CVE-2022-3273",
            "ground_truth_CWEs": [
                "CWE-326"
            ],
            "ground_truth_severities": {
                "V3.1": "CRITICAL"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": "LLM OUTPUT IS NONE, POTENTIALLY BECAUSE TOKENS EXCEED",
            "equal_severity": null,
            "cwe_evaluation": "None"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows an unprivileged local attacker to unmount FUSE filesystems that belong to certain other users who have a UID that is a prefix of the UID of the attacker in its string form. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.\nFile: libmount/src/context_umount.c\nContent: \n<Code>\n/* SPDX-License-Identifier: LGPL-2.1-or-later */\n/*\n * This file is part of libmount from util-linux project.\n *\n * Copyright (C) 2010-2018 Karel Zak <kzak@redhat.com>\n *\n * libmount is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n */\n\n/**\n * SECTION: context-umount\n * @title: Umount context\n * @short_description: high-level API to umount operation.\n */\n\n#include <sys/wait.h>\n#include <sys/mount.h>\n\n#include \"pathnames.h\"\n#include \"loopdev.h\"\n#include \"strutils.h\"\n#include \"mountP.h\"\n\n/*\n * umount2 flags\n */\n#ifndef MNT_FORCE\n# define MNT_FORCE        0x00000001\t/* Attempt to forcibly umount */\n#endif\n\n#ifndef MNT_DETACH\n# define MNT_DETACH       0x00000002\t/* Just detach from the tree */\n#endif\n\n#ifndef UMOUNT_NOFOLLOW\n# define UMOUNT_NOFOLLOW  0x00000008\t/* Don't follow symlink on umount */\n#endif\n\n#ifndef UMOUNT_UNUSED\n# define UMOUNT_UNUSED    0x80000000\t/* Flag guaranteed to be unused */\n#endif\n\n/* search in mountinfo/mtab */\nstatic int __mtab_find_umount_fs(struct libmnt_context *cxt,\n\t\t\t    const char *tgt,\n\t\t\t    struct libmnt_fs **pfs)\n{\n\tint rc;\n\tstruct libmnt_ns *ns_old;\n\tstruct libmnt_table *mtab = NULL;\n\tstruct libmnt_fs *fs;\n\tchar *loopdev = NULL;\n\n\tassert(cxt);\n\tassert(tgt);\n\tassert(pfs);\n\n\t*pfs = NULL;\n\tDBG(CXT, ul_debugobj(cxt, \" search %s in mountinfo\", tgt));\n\n\t/*\n\t * The mount table may be huge, and on systems with utab we have to\n\t * merge userspace mount options into /proc/self/mountinfo. This all is\n\t * expensive. The tab filter can be used to filter out entries, then a mount\n\t * table and utab are very tiny files.\n\t *\n\t * The filter uses mnt_fs_streq_{target,srcpath} function where all\n\t * paths should be absolute and canonicalized. This is done within\n\t * mnt_context_get_mtab_for_target() where LABEL, UUID or symlinks are\n\t * canonicalized. If --no-canonicalize is enabled than the target path\n\t * is expected already canonical.\n\t *\n\t * Anyway it's better to read huge mount table than canonicalize target\n\t * paths. It means we use the filter only if --no-canonicalize enabled.\n\t *\n\t * It also means that we have to read mount table from kernel\n\t * (non-writable mtab).\n\t */\n\tif (mnt_context_is_nocanonicalize(cxt) &&\n\t    !mnt_context_mtab_writable(cxt) && *tgt == '/')\n\t\trc = mnt_context_get_mtab_for_target(cxt, &mtab, tgt);\n\telse\n\t\trc = mnt_context_get_mtab(cxt, &mtab);\n\n\tif (rc) {\n\t\tDBG(CXT, ul_debugobj(cxt, \"umount: failed to read mtab\"));\n\t\treturn rc;\n\t}\n\n\tif (mnt_table_get_nents(mtab) == 0) {\n\t\tDBG(CXT, ul_debugobj(cxt, \"umount: mtab empty\"));\n\t\treturn 1;\n\t}\n\n\tns_old = mnt_context_switch_target_ns(cxt);\n\tif (!ns_old)\n\t\treturn -MNT_ERR_NAMESPACE;\n\ntry_loopdev:\n\tfs = mnt_table_find_target(mtab, tgt, MNT_ITER_BACKWARD);\n\tif (!fs && mnt_context_is_swapmatch(cxt)) {\n\t\t/*\n\t\t * Maybe the option is source rather than target (sometimes\n\t\t * people use e.g. \"umount /dev/sda1\")\n\t\t */\n\t\tfs = mnt_table_find_source(mtab, tgt, MNT_ITER_BACKWARD);\n\n\t\tif (fs) {\n\t\t\tstruct libmnt_fs *fs1 = mnt_table_find_target(mtab,\n\t\t\t\t\t\t\tmnt_fs_get_target(fs),\n\t\t\t\t\t\t\tMNT_ITER_BACKWARD);\n\t\t\tif (!fs1) {\n\t\t\t\tDBG(CXT, ul_debugobj(cxt, \"mtab is broken?!?!\"));\n\t\t\t\trc = -EINVAL;\n\t\t\t\tgoto err;\n\t\t\t}\n\t\t\tif (fs != fs1) {\n\t\t\t\t/* Something was stacked over `file' on the\n\t\t\t\t * same mount point. */\n\t\t\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\t\t\t\"umount: %s: %s is mounted \"\n\t\t\t\t\t\t\"over it on the same point\",\n\t\t\t\t\t\ttgt, mnt_fs_get_source(fs1)));\n\t\t\t\trc = -EINVAL;\n\t\t\t\tgoto err;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!fs && !loopdev && mnt_context_is_swapmatch(cxt)) {\n\t\t/*\n\t\t * Maybe the option is /path/file.img, try to convert to /dev/loopN\n\t\t */\n\t\tstruct stat st;\n\n\t\tif (mnt_stat_mountpoint(tgt, &st) == 0 && S_ISREG(st.st_mode)) {\n\t\t\tint count;\n\t\t\tstruct libmnt_cache *cache = mnt_context_get_cache(cxt);\n\t\t\tconst char *bf = cache ? mnt_resolve_path(tgt, cache) : tgt;\n\n\t\t\tcount = loopdev_count_by_backing_file(bf, &loopdev);\n\t\t\tif (count == 1) {\n\t\t\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\t\t\"umount: %s --> %s (retry)\", tgt, loopdev));\n\t\t\t\ttgt = loopdev;\n\t\t\t\tgoto try_loopdev;\n\n\t\t\t} else if (count > 1)\n\t\t\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\t\t\"umount: warning: %s is associated \"\n\t\t\t\t\t\"with more than one loopdev\", tgt));\n\t\t}\n\t}\n\n\t*pfs = fs;\n\tfree(loopdev);\n\tif (!mnt_context_switch_ns(cxt, ns_old))\n\t\treturn -MNT_ERR_NAMESPACE;\n\n\tDBG(CXT, ul_debugobj(cxt, \"umount fs: %s\", fs ? mnt_fs_get_target(fs) :\n\t\t\t\t\t\t\t\"<not found>\"));\n\treturn fs ? 0 : 1;\nerr:\n\tfree(loopdev);\n\tif (!mnt_context_switch_ns(cxt, ns_old))\n\t\treturn -MNT_ERR_NAMESPACE;\n\treturn rc;\n}\n\n/**\n * mnt_context_find_umount_fs:\n * @cxt: mount context\n * @tgt: mountpoint, device, ...\n * @pfs: returns point to filesystem\n *\n * Returns: 0 on success, <0 on error, 1 if target filesystem not found\n */\nint mnt_context_find_umount_fs(struct libmnt_context *cxt,\n\t\t\t       const char *tgt,\n\t\t\t       struct libmnt_fs **pfs)\n{\n\tif (pfs)\n\t\t*pfs = NULL;\n\n\tif (!cxt || !tgt || !pfs)\n\t\treturn -EINVAL;\n\n\tDBG(CXT, ul_debugobj(cxt, \"umount: lookup FS for '%s'\", tgt));\n\n\tif (!*tgt)\n\t\treturn 1; /* empty string is not an error */\n\n\t/* In future this function should be extended to support for example\n\t * fsinfo() (or another cheap way kernel will support), for now the\n\t * default is expensive mountinfo/mtab.\n\t */\n\treturn __mtab_find_umount_fs(cxt, tgt, pfs);\n}\n\n/* Check if there is something important in the utab file. The parsed utab is\n * stored in context->utab and deallocated by mnt_free_context().\n *\n * This function exists to avoid (if possible) /proc/self/mountinfo usage, so\n * don't use things like mnt_resolve_target(), mnt_context_get_mtab() etc here.\n * See lookup_umount_fs() for more details.\n */\nstatic int has_utab_entry(struct libmnt_context *cxt, const char *target)\n{\n\tstruct libmnt_cache *cache = NULL;\n\tstruct libmnt_fs *fs;\n\tstruct libmnt_iter itr;\n\tchar *cn = NULL;\n\tint rc = 0;\n\n\tassert(cxt);\n\n\tif (!cxt->utab) {\n\t\tconst char *path = mnt_get_utab_path();\n\n\t\tif (!path || is_file_empty(path))\n\t\t\treturn 0;\n\t\tcxt->utab = mnt_new_table();\n\t\tif (!cxt->utab)\n\t\t\treturn 0;\n\t\tcxt->utab->fmt = MNT_FMT_UTAB;\n\t\tif (mnt_table_parse_file(cxt->utab, path))\n\t\t\treturn 0;\n\t}\n\n\t/* paths in utab are canonicalized */\n\tcache = mnt_context_get_cache(cxt);\n\tcn = mnt_resolve_path(target, cache);\n\tmnt_reset_iter(&itr, MNT_ITER_BACKWARD);\n\n\twhile (mnt_table_next_fs(cxt->utab, &itr, &fs) == 0) {\n\t\tif (mnt_fs_streq_target(fs, cn)) {\n\t\t\trc = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!cache)\n\t\tfree(cn);\n\treturn rc;\n}\n\n/* returns: 1 not found; <0 on error; 1 success */\nstatic int lookup_umount_fs_by_statfs(struct libmnt_context *cxt, const char *tgt)\n{\n\tstruct stat st;\n\tconst char *type;\n\n\tassert(cxt);\n\tassert(cxt->fs);\n\n\tDBG(CXT, ul_debugobj(cxt, \" lookup by statfs\"));\n\n\t/*\n\t * Let's try to avoid mountinfo usage at all to minimize performance\n\t * degradation. Don't forget that kernel has to compose *whole*\n\t * mountinfo about all mountpoints although we look for only one entry.\n\t *\n\t * All we need is fstype and to check if there is no userspace mount\n\t * options for the target (e.g. helper=udisks to call /sbin/umount.udisks).\n\t *\n\t * So, let's use statfs() if possible (it's bad idea for --lazy/--force\n\t * umounts as target is probably unreachable NFS, also for --detach-loop\n\t * as this additionally needs to know the name of the loop device).\n\t */\n\tif (mnt_context_is_restricted(cxt)\n\t    || *tgt != '/'\n\t    || (cxt->flags & MNT_FL_HELPER)\n\t    || mnt_context_mtab_writable(cxt)\n\t    || mnt_context_is_force(cxt)\n\t    || mnt_context_is_lazy(cxt)\n\t    || mnt_context_is_nocanonicalize(cxt)\n\t    || mnt_context_is_loopdel(cxt)\n\t    || mnt_stat_mountpoint(tgt, &st) != 0 || !S_ISDIR(st.st_mode)\n\t    || has_utab_entry(cxt, tgt))\n\t\treturn 1; /* not found */\n\n\ttype = mnt_fs_get_fstype(cxt->fs);\n\tif (!type) {\n\t\tstruct statfs vfs;\n\t\tint fd;\n\n\t\tDBG(CXT, ul_debugobj(cxt, \"  trying fstatfs()\"));\n\n\t\t/* O_PATH avoids triggering automount points. */\n\t\tfd = open(tgt, O_PATH);\n\t\tif (fd >= 0) {\n\t\t\tif (fstatfs(fd, &vfs) == 0)\n\t\t\t\ttype = mnt_statfs_get_fstype(&vfs);\n\t\t\tclose(fd);\n\t\t}\n\t\tif (type) {\n\t\t\tint rc = mnt_fs_set_fstype(cxt->fs, type);\n\t\t\tif (rc)\n\t\t\t\treturn rc;\n\t\t}\n\t}\n\tif (type) {\n\t\tDBG(CXT, ul_debugobj(cxt, \"  umount: disabling mtab\"));\n\t\tmnt_context_disable_mtab(cxt, TRUE);\n\n\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\"  mountinfo unnecessary [type=%s]\", type));\n\t\treturn 0;\n\t}\n\n\treturn 1; /* not found */\n}\n\n/* returns: 1 not found; <0 on error; 1 success */\nstatic int lookup_umount_fs_by_mountinfo(struct libmnt_context *cxt, const char *tgt)\n{\n\tstruct libmnt_fs *fs = NULL;\n\tint rc;\n\n\tassert(cxt);\n\tassert(cxt->fs);\n\n\tDBG(CXT, ul_debugobj(cxt, \" lookup by mountinfo\"));\n\n\t/* search */\n\trc = __mtab_find_umount_fs(cxt, tgt, &fs);\n\tif (rc != 0)\n\t\treturn rc;\n\n\t/* apply result */\n\tif (fs != cxt->fs) {\n\t\tmnt_fs_set_source(cxt->fs, NULL);\n\t\tmnt_fs_set_target(cxt->fs, NULL);\n\n\t\tif (!mnt_copy_fs(cxt->fs, fs)) {\n\t\t\tDBG(CXT, ul_debugobj(cxt, \"  failed to copy FS\"));\n\t\t\treturn -errno;\n\t\t}\n\t\tDBG(CXT, ul_debugobj(cxt, \"  mtab applied\"));\n\t}\n\n\tcxt->flags |= MNT_FL_TAB_APPLIED;\n\treturn 0;\n}\n\n/* This finction search for FS according to cxt->fs->target,\n * apply result to cxt->fs and it's umount replacement to\n * mnt_context_apply_fstab(), use mnt_context_tab_applied()\n * to check result.\n *\n * The goal is to minimize situations when we need to parse\n * /proc/self/mountinfo.\n */\nstatic int lookup_umount_fs(struct libmnt_context *cxt)\n{\n\tconst char *tgt;\n\tint rc = 0;\n\n\tassert(cxt);\n\tassert(cxt->fs);\n\n\tDBG(CXT, ul_debugobj(cxt, \"umount: lookup FS\"));\n\n\ttgt = mnt_fs_get_target(cxt->fs);\n\tif (!tgt) {\n\t\tDBG(CXT, ul_debugobj(cxt, \" undefined target\"));\n\t\treturn -EINVAL;\n\t}\n\n\t/* try get fs type by statfs() */\n\trc = lookup_umount_fs_by_statfs(cxt, tgt);\n\tif (rc <= 0)\n\t\treturn rc;\n\n\t/* get complete fs from fs entry from mountinfo */\n\trc = lookup_umount_fs_by_mountinfo(cxt, tgt);\n\tif (rc <= 0)\n\t\treturn rc;\n\n\tDBG(CXT, ul_debugobj(cxt, \" cannot find '%s'\", tgt));\n\treturn 0;\t/* this is correct! */\n}\n\n/* check if @devname is loopdev and if the device is associated\n * with a source from @fstab_fs\n */\nstatic int is_associated_fs(const char *devname, struct libmnt_fs *fs)\n{\n\tuintmax_t offset = 0;\n\tconst char *src, *optstr;\n\tchar *val;\n\tsize_t valsz;\n\tint flags = 0;\n\n\t/* check if it begins with /dev/loop */\n\tif (strncmp(devname, _PATH_DEV_LOOP, sizeof(_PATH_DEV_LOOP) - 1) != 0)\n\t\treturn 0;\n\n\tsrc = mnt_fs_get_srcpath(fs);\n\tif (!src)\n\t\treturn 0;\n\n\t/* check for the offset option in @fs */\n\toptstr = mnt_fs_get_user_options(fs);\n\n\tif (optstr &&\n\t    mnt_optstr_get_option(optstr, \"offset\", &val, &valsz) == 0) {\n\t\tflags |= LOOPDEV_FL_OFFSET;\n\n\t\tif (mnt_parse_offset(val, valsz, &offset) != 0)\n\t\t\treturn 0;\n\t}\n\n\treturn loopdev_is_used(devname, src, offset, 0, flags);\n}\n\nstatic int prepare_helper_from_options(struct libmnt_context *cxt,\n\t\t\t\t       const char *name)\n{\n\tchar *suffix = NULL;\n\tconst char *opts;\n\tsize_t valsz;\n\tint rc;\n\n\tif (mnt_context_is_nohelpers(cxt))\n\t\treturn 0;\n\n\topts = mnt_fs_get_user_options(cxt->fs);\n\tif (!opts)\n\t\treturn 0;\n\n\tif (mnt_optstr_get_option(opts, name, &suffix, &valsz))\n\t\treturn 0;\n\n\tsuffix = strndup(suffix, valsz);\n\tif (!suffix)\n\t\treturn -ENOMEM;\n\n\tDBG(CXT, ul_debugobj(cxt, \"umount: umount.%s %s requested\", suffix, name));\n\n\trc = mnt_context_prepare_helper(cxt, \"umount\", suffix);\n\tfree(suffix);\n\n\treturn rc;\n}\n\nstatic int is_fuse_usermount(struct libmnt_context *cxt, int *errsv)\n{\n\tstruct libmnt_ns *ns_old;\n\tconst char *type = mnt_fs_get_fstype(cxt->fs);\n\tconst char *optstr;\n\tchar *user_id = NULL;\n\tsize_t sz;\n\tuid_t uid;\n\tchar uidstr[sizeof(stringify_value(ULONG_MAX))];\n\n\t*errsv = 0;\n\n\tif (!type)\n\t\treturn 0;\n\n\tif (strcmp(type, \"fuse\") != 0 &&\n\t    strcmp(type, \"fuseblk\") != 0 &&\n\t    strncmp(type, \"fuse.\", 5) != 0 &&\n\t    strncmp(type, \"fuseblk.\", 8) != 0)\n\t\treturn 0;\n\n\t/* get user_id= from mount table */\n\toptstr = mnt_fs_get_fs_options(cxt->fs);\n\tif (!optstr)\n\t\treturn 0;\n\n\tif (mnt_optstr_get_option(optstr, \"user_id\", &user_id, &sz) != 0)\n\t\treturn 0;\n\n\tif (sz == 0 || user_id == NULL)\n\t\treturn 0;\n\n\t/* get current user */\n\tns_old = mnt_context_switch_origin_ns(cxt);\n\tif (!ns_old) {\n\t\t*errsv = -MNT_ERR_NAMESPACE;\n\t\treturn 0;\n\t}\n\n\tuid = getuid();\n\n\tif (!mnt_context_switch_ns(cxt, ns_old)) {\n\t\t*errsv = -MNT_ERR_NAMESPACE;\n\t\treturn 0;\n\t}\n\n\tsnprintf(uidstr, sizeof(uidstr), \"%lu\", (unsigned long) uid);\n\treturn strncmp(user_id, uidstr, sz) == 0;\n}\n\n/*\n * Note that cxt->fs contains relevant mtab entry!\n */\nstatic int evaluate_permissions(struct libmnt_context *cxt)\n{\n\tstruct libmnt_table *fstab;\n\tunsigned long u_flags = 0;\n\tconst char *tgt, *src, *optstr;\n\tint rc = 0, ok = 0;\n\tstruct libmnt_fs *fs;\n\n\tassert(cxt);\n\tassert(cxt->fs);\n\tassert((cxt->flags & MNT_FL_MOUNTFLAGS_MERGED));\n\n\tif (!mnt_context_is_restricted(cxt))\n\t\t return 0;\t\t/* superuser mount */\n\n\tDBG(CXT, ul_debugobj(cxt, \"umount: evaluating permissions\"));\n\n\tif (!mnt_context_tab_applied(cxt)) {\n\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\t\"cannot find %s in mtab and you are not root\",\n\t\t\t\tmnt_fs_get_target(cxt->fs)));\n\t\tgoto eperm;\n\t}\n\n\tif (cxt->user_mountflags & MNT_MS_UHELPER) {\n\t\t/* on uhelper= mount option based helper */\n\t\trc = prepare_helper_from_options(cxt, \"uhelper\");\n\t\tif (rc)\n\t\t\treturn rc;\n\t\tif (cxt->helper)\n\t\t\treturn 0;\t/* we'll call /sbin/umount.<uhelper> */\n\t}\n\n\t/*\n\t * Check if this is a fuse mount for the current user,\n\t * if so then unmounting is allowed\n\t */\n\tif (is_fuse_usermount(cxt, &rc)) {\n\t\tDBG(CXT, ul_debugobj(cxt, \"fuse user mount, umount is allowed\"));\n\t\treturn 0;\n\t}\n\tif (rc)\n\t\treturn rc;\n\n\t/*\n\t * User mounts have to be in /etc/fstab\n\t */\n\trc = mnt_context_get_fstab(cxt, &fstab);\n\tif (rc)\n\t\treturn rc;\n\n\ttgt = mnt_fs_get_target(cxt->fs);\n\tsrc = mnt_fs_get_source(cxt->fs);\n\n\tif (mnt_fs_get_bindsrc(cxt->fs)) {\n\t\tsrc = mnt_fs_get_bindsrc(cxt->fs);\n\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\t\"umount: using bind source: %s\", src));\n\t}\n\n\t/* If fstab contains the two lines\n\t *\t/dev/sda1 /mnt/zip auto user,noauto  0 0\n\t *\t/dev/sda4 /mnt/zip auto user,noauto  0 0\n\t * then \"mount /dev/sda4\" followed by \"umount /mnt/zip\" used to fail.\n\t * So, we must not look for the file, but for the pair (dev,file) in fstab.\n\t  */\n\tfs = mnt_table_find_pair(fstab, src, tgt, MNT_ITER_FORWARD);\n\tif (!fs) {\n\t\t/*\n\t\t * It's possible that there is /path/file.img in fstab and\n\t\t * /dev/loop0 in mtab -- then we have to check the relation\n\t\t * between loopdev and the file.\n\t\t */\n\t\tfs = mnt_table_find_target(fstab, tgt, MNT_ITER_FORWARD);\n\t\tif (fs) {\n\t\t\tstruct libmnt_cache *cache = mnt_context_get_cache(cxt);\n\t\t\tconst char *sp = mnt_fs_get_srcpath(cxt->fs);\t\t/* devname from mtab */\n\t\t\tconst char *dev = sp && cache ? mnt_resolve_path(sp, cache) : sp;\n\n\t\t\tif (!dev || !is_associated_fs(dev, fs))\n\t\t\t\tfs = NULL;\n\t\t}\n\t\tif (!fs) {\n\t\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\t\t\"umount %s: mtab disagrees with fstab\",\n\t\t\t\t\ttgt));\n\t\t\tgoto eperm;\n\t\t}\n\t}\n\n\t/*\n\t * User mounting and unmounting is allowed only if fstab contains one\n\t * of the options `user', `users' or `owner' or `group'.\n\t *\n\t * The option `users' allows arbitrary users to mount and unmount -\n\t * this may be a security risk.\n\t *\n\t * The options `user', `owner' and `group' only allow unmounting by the\n\t * user that mounted (visible in mtab).\n\t */\n\toptstr = mnt_fs_get_user_options(fs);\t/* FSTAB mount options! */\n\tif (!optstr)\n\t\tgoto eperm;\n\n\tif (mnt_optstr_get_flags(optstr, &u_flags,\n\t\t\t\tmnt_get_builtin_optmap(MNT_USERSPACE_MAP)))\n\t\tgoto eperm;\n\n\tif (u_flags & MNT_MS_USERS) {\n\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\"umount: promiscuous setting ('users') in fstab\"));\n\t\treturn 0;\n\t}\n\t/*\n\t * Check user=<username> setting from mtab if there is a user, owner or\n\t * group option in /etc/fstab\n\t */\n\tif (u_flags & (MNT_MS_USER | MNT_MS_OWNER | MNT_MS_GROUP)) {\n\n\t\tchar *curr_user;\n\t\tchar *mtab_user = NULL;\n\t\tsize_t sz;\n\t\tstruct libmnt_ns *ns_old;\n\n\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\t\"umount: checking user=<username> from mtab\"));\n\n\t\tns_old = mnt_context_switch_origin_ns(cxt);\n\t\tif (!ns_old)\n\t\t\treturn -MNT_ERR_NAMESPACE;\n\n\t\tcurr_user = mnt_get_username(getuid());\n\n\t\tif (!mnt_context_switch_ns(cxt, ns_old)) {\n\t\t\tfree(curr_user);\n\t\t\treturn -MNT_ERR_NAMESPACE;\n\t\t}\n\t\tif (!curr_user) {\n\t\t\tDBG(CXT, ul_debugobj(cxt, \"umount %s: cannot \"\n\t\t\t\t\"convert %d to username\", tgt, getuid()));\n\t\t\tgoto eperm;\n\t\t}\n\n\t\t/* get options from mtab */\n\t\toptstr = mnt_fs_get_user_options(cxt->fs);\n\t\tif (optstr && !mnt_optstr_get_option(optstr,\n\t\t\t\t\t\"user\", &mtab_user, &sz) && sz)\n\t\t\tok = !strncmp(curr_user, mtab_user, sz);\n\n\t\tfree(curr_user);\n\t}\n\n\tif (ok) {\n\t\tDBG(CXT, ul_debugobj(cxt, \"umount %s is allowed\", tgt));\n\t\treturn 0;\n\t}\neperm:\n\tDBG(CXT, ul_debugobj(cxt, \"umount is not allowed for you\"));\n\treturn -EPERM;\n}\n\nstatic int exec_helper(struct libmnt_context *cxt)\n{\n\tchar *namespace = NULL;\n\tstruct libmnt_ns *ns_tgt = mnt_context_get_target_ns(cxt);\n\tint rc;\n\tpid_t pid;\n\n\tassert(cxt);\n\tassert(cxt->fs);\n\tassert(cxt->helper);\n\tassert((cxt->flags & MNT_FL_MOUNTFLAGS_MERGED));\n\tassert(cxt->helper_exec_status == 1);\n\n\tif (mnt_context_is_fake(cxt)) {\n\t\tDBG(CXT, ul_debugobj(cxt, \"fake mode: does not execute helper\"));\n\t\tcxt->helper_exec_status = rc = 0;\n\t\treturn rc;\n\t}\n\n\tif (ns_tgt->fd != -1\n\t    && asprintf(&namespace, \"/proc/%i/fd/%i\",\n\t\t\tgetpid(), ns_tgt->fd) == -1) {\n\t\treturn -ENOMEM;\n\t}\n\n\tDBG_FLUSH;\n\n\tpid = fork();\n\tswitch (pid) {\n\tcase 0:\n\t{\n\t\tconst char *args[12], *type;\n\t\tint i = 0;\n\n\t\tif (drop_permissions() != 0)\n\t\t\t_exit(EXIT_FAILURE);\n\n\t\tif (!mnt_context_switch_origin_ns(cxt))\n\t\t\t_exit(EXIT_FAILURE);\n\n\t\ttype = mnt_fs_get_fstype(cxt->fs);\n\n\t\targs[i++] = cxt->helper;\t\t\t/* 1 */\n\t\targs[i++] = mnt_fs_get_target(cxt->fs);\t\t/* 2 */\n\n\t\tif (mnt_context_is_nomtab(cxt))\n\t\t\targs[i++] = \"-n\";\t\t\t/* 3 */\n\t\tif (mnt_context_is_lazy(cxt))\n\t\t\targs[i++] = \"-l\";\t\t\t/* 4 */\n\t\tif (mnt_context_is_force(cxt))\n\t\t\targs[i++] = \"-f\";\t\t\t/* 5 */\n\t\tif (mnt_context_is_verbose(cxt))\n\t\t\targs[i++] = \"-v\";\t\t\t/* 6 */\n\t\tif (mnt_context_is_rdonly_umount(cxt))\n\t\t\targs[i++] = \"-r\";\t\t\t/* 7 */\n\t\tif (type\n\t\t    && strchr(type, '.')\n\t\t    && !endswith(cxt->helper, type)) {\n\t\t\targs[i++] = \"-t\";\t\t\t/* 8 */\n\t\t\targs[i++] = type;\t\t\t/* 9 */\n\t\t}\n\t\tif (namespace) {\n\t\t\targs[i++] = \"-N\";\t\t\t/* 10 */\n\t\t\targs[i++] = namespace;\t\t\t/* 11 */\n\t\t}\n\n\t\targs[i] = NULL;\t\t\t\t\t/* 12 */\n\t\tfor (i = 0; args[i]; i++)\n\t\t\tDBG(CXT, ul_debugobj(cxt, \"argv[%d] = \\\"%s\\\"\",\n\t\t\t\t\t\t\ti, args[i]));\n\t\tDBG_FLUSH;\n\t\texecv(cxt->helper, (char * const *) args);\n\t\t_exit(EXIT_FAILURE);\n\t}\n\tdefault:\n\t{\n\t\tint st;\n\n\t\tif (waitpid(pid, &st, 0) == (pid_t) -1) {\n\t\t\tcxt->helper_status = -1;\n\t\t\trc = -errno;\n\t\t} else {\n\t\t\tcxt->helper_status = WIFEXITED(st) ? WEXITSTATUS(st) : -1;\n\t\t\tcxt->helper_exec_status = rc = 0;\n\t\t}\n\t\tDBG(CXT, ul_debugobj(cxt, \"%s executed [status=%d, rc=%d%s]\",\n\t\t\t\tcxt->helper,\n\t\t\t\tcxt->helper_status, rc,\n\t\t\t\trc ? \" waitpid failed\" : \"\"));\n\t\tbreak;\n\t}\n\n\tcase -1:\n\t\tcxt->helper_exec_status = rc = -errno;\n\t\tDBG(CXT, ul_debugobj(cxt, \"fork() failed\"));\n\t\tbreak;\n\t}\n\n\tfree(namespace);\n\treturn rc;\n}\n\n/*\n * mnt_context_helper_setopt() backend.\n *\n * This function applies umount.type command line option (for example parsed\n * by getopt() or getopt_long()) to @cxt. All unknown options are ignored and\n * then 1 is returned.\n *\n * Returns: negative number on error, 1 if @c is unknown option, 0 on success.\n */\nint mnt_context_umount_setopt(struct libmnt_context *cxt, int c, char *arg)\n{\n\tint rc = -EINVAL;\n\n\tassert(cxt);\n\tassert(cxt->action == MNT_ACT_UMOUNT);\n\n\tswitch(c) {\n\tcase 'n':\n\t\trc = mnt_context_disable_mtab(cxt, TRUE);\n\t\tbreak;\n\tcase 'l':\n\t\trc = mnt_context_enable_lazy(cxt, TRUE);\n\t\tbreak;\n\tcase 'f':\n\t\trc = mnt_context_enable_force(cxt, TRUE);\n\t\tbreak;\n\tcase 'v':\n\t\trc = mnt_context_enable_verbose(cxt, TRUE);\n\t\tbreak;\n\tcase 'r':\n\t\trc = mnt_context_enable_rdonly_umount(cxt, TRUE);\n\t\tbreak;\n\tcase 't':\n\t\tif (arg)\n\t\t\trc = mnt_context_set_fstype(cxt, arg);\n\t\tbreak;\n\tcase 'N':\n\t\tif (arg)\n\t\t\trc = mnt_context_set_target_ns(cxt, arg);\n\t\tbreak;\n\tdefault:\n\t\treturn 1;\n\t}\n\n\treturn rc;\n}\n\n/* Check whether the kernel supports the UMOUNT_NOFOLLOW flag */\nstatic int umount_nofollow_support(void)\n{\n\tint res = umount2(\"\", UMOUNT_UNUSED);\n\tif (res != -1 || errno != EINVAL)\n\t\treturn 0;\n\n\tres = umount2(\"\", UMOUNT_NOFOLLOW);\n\tif (res != -1 || errno != ENOENT)\n\t\treturn 0;\n\n\treturn 1;\n}\n\nstatic int do_umount(struct libmnt_context *cxt)\n{\n\tint rc = 0, flags = 0;\n\tconst char *src, *target;\n\tchar *tgtbuf = NULL;\n\n\tassert(cxt);\n\tassert(cxt->fs);\n\tassert((cxt->flags & MNT_FL_MOUNTFLAGS_MERGED));\n\tassert(cxt->syscall_status == 1);\n\n\tif (cxt->helper)\n\t\treturn exec_helper(cxt);\n\n\tsrc = mnt_fs_get_srcpath(cxt->fs);\n\ttarget = mnt_fs_get_target(cxt->fs);\n\n\tif (!target)\n\t\treturn -EINVAL;\n\n\tDBG(CXT, ul_debugobj(cxt, \"do umount\"));\n\n\tif (mnt_context_is_restricted(cxt) && !mnt_context_is_fake(cxt)) {\n\t\t/*\n\t\t * extra paranoia for non-root users\n\t\t * -- chdir to the parent of the mountpoint and use NOFOLLOW\n\t\t *    flag to avoid races and symlink attacks.\n\t\t */\n\t\tif (umount_nofollow_support())\n\t\t\tflags |= UMOUNT_NOFOLLOW;\n\n\t\trc = mnt_chdir_to_parent(target, &tgtbuf);\n\t\tif (rc)\n\t\t\treturn rc;\n\t\ttarget = tgtbuf;\n\t}\n\n\tif (mnt_context_is_lazy(cxt))\n\t\tflags |= MNT_DETACH;\n\n\tif (mnt_context_is_force(cxt))\n\t\tflags |= MNT_FORCE;\n\n\tDBG(CXT, ul_debugobj(cxt, \"umount(2) [target='%s', flags=0x%08x]%s\",\n\t\t\t\ttarget, flags,\n\t\t\t\tmnt_context_is_fake(cxt) ? \" (FAKE)\" : \"\"));\n\n\tif (mnt_context_is_fake(cxt))\n\t\trc = 0;\n\telse {\n\t\trc = flags ? umount2(target, flags) : umount(target);\n\t\tif (rc < 0)\n\t\t\tcxt->syscall_status = -errno;\n\t\tfree(tgtbuf);\n\t}\n\n\t/*\n\t * try remount read-only\n\t */\n\tif (rc < 0\n\t    && cxt->syscall_status == -EBUSY\n\t    && mnt_context_is_rdonly_umount(cxt)\n\t    && src) {\n\n\t\tmnt_context_set_mflags(cxt, (cxt->mountflags |\n\t\t\t\t\t     MS_REMOUNT | MS_RDONLY));\n\t\tmnt_context_enable_loopdel(cxt, FALSE);\n\n\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\"umount(2) failed [errno=%d] -- trying to remount read-only\",\n\t\t\t-cxt->syscall_status));\n\n\t\trc = mount(src, mnt_fs_get_target(cxt->fs), NULL,\n\t\t\t    MS_REMOUNT | MS_RDONLY, NULL);\n\t\tif (rc < 0) {\n\t\t\tcxt->syscall_status = -errno;\n\t\t\tDBG(CXT, ul_debugobj(cxt,\n\t\t\t\t\"read-only re-mount(2) failed [errno=%d]\",\n\t\t\t\t-cxt->syscall_status));\n\n\t\t\treturn -cxt->syscall_status;\n\t\t}\n\t\tcxt->syscall_status = 0;\n\t\tDBG(CXT, ul_debugobj(cxt, \"read-only re-mount(2) success\"));\n\t\treturn 0;\n\t}\n\n\tif (rc < 0) {\n\t\tDBG(CXT, ul_debugobj(cxt, \"umount(2) failed [errno=%d]\",\n\t\t\t-cxt->syscall_status));\n\t\treturn -cxt->syscall_status;\n\t}\n\n\tcxt->syscall_status = 0;\n\tDBG(CXT, ul_debugobj(cxt, \"umount(2) success\"));\n\treturn 0;\n}\n\n/**\n * mnt_context_prepare_umount:\n * @cxt: mount context\n *\n * Prepare context for umounting, unnecessary for mnt_context_umount().\n *\n * Returns: 0 on success, and negative number in case of error.\n */\nint mnt_context_prepare_umount(struct libmnt_context *cxt)\n{\n\tint rc;\n\tstruct libmnt_ns *ns_old;\n\n\tif (!cxt || !cxt->fs || mnt_fs_is_swaparea(cxt->fs))\n\t\treturn -EINVAL;\n\tif (!mnt_context_get_source(cxt) && !mnt_context_get_target(cxt))\n\t\treturn -EINVAL;\n\tif (cxt->flags & MNT_FL_PREPARED)\n\t\treturn 0;\n\n\tassert(cxt->helper_exec_status == 1);\n\tassert(cxt->syscall_status == 1);\n\n\tfree(cxt->helper);\t/* be paranoid */\n\tcxt->helper = NULL;\n\tcxt->action = MNT_ACT_UMOUNT;\n\n\tns_old = mnt_context_switch_target_ns(cxt);\n\tif (!ns_old)\n\t\treturn -MNT_ERR_NAMESPACE;\n\n\trc = lookup_umount_fs(cxt);\n\tif (!rc)\n\t\trc = mnt_context_merge_mflags(cxt);\n\tif (!rc)\n\t\trc = evaluate_permissions(cxt);\n\n\tif (!rc && !cxt->helper) {\n\n\t\tif (cxt->user_mountflags & MNT_MS_HELPER)\n\t\t\t/* on helper= mount option based helper */\n\t\t\trc = prepare_helper_from_options(cxt, \"helper\");\n\n\t\tif (!rc && !cxt->helper)\n\t\t\t/* on fstype based helper */\n\t\t\trc = mnt_context_prepare_helper(cxt, \"umount\", NULL);\n\t}\n\n\tif (!rc && (cxt->user_mountflags & MNT_MS_LOOP))\n\t\t/* loop option explicitly specified in mtab, detach this loop */\n\t\tmnt_context_enable_loopdel(cxt, TRUE);\n\n\tif (!rc && mnt_context_is_loopdel(cxt) && cxt->fs) {\n\t\tconst char *src = mnt_fs_get_srcpath(cxt->fs);\n\n\t\tif (src && (!is_loopdev(src) || loopdev_is_autoclear(src)))\n\t\t\tmnt_context_enable_loopdel(cxt, FALSE);\n\t}\n\n\tif (rc) {\n\t\tDBG(CXT, ul_debugobj(cxt, \"umount: preparing failed\"));\n\t\treturn rc;\n\t}\n\tcxt->flags |= MNT_FL_PREPARED;\n\n\tif (!mnt_context_switch_ns(cxt, ns_old))\n\t\treturn -MNT_ERR_NAMESPACE;\n\n\treturn rc;\n}\n\n/**\n * mnt_context_do_umount:\n * @cxt: mount context\n *\n * Umount filesystem by umount(2) or fork()+exec(/sbin/umount.type).\n * Unnecessary for mnt_context_umount().\n *\n * See also mnt_context_disable_helpers().\n *\n * WARNING: non-zero return code does not mean that umount(2) syscall or\n *          umount.type helper wasn't successfully called.\n *\n *          Check mnt_context_get_status() after error!\n*\n * Returns: 0 on success;\n *         >0 in case of umount(2) error (returns syscall errno),\n *         <0 in case of other errors.\n */\nint mnt_context_do_umount(struct libmnt_context *cxt)\n{\n\tint rc;\n\tstruct libmnt_ns *ns_old;\n\n\tassert(cxt);\n\tassert(cxt->fs);\n\tassert(cxt->helper_exec_status == 1);\n\tassert(cxt->syscall_status == 1);\n\tassert((cxt->flags & MNT_FL_PREPARED));\n\tassert((cxt->action == MNT_ACT_UMOUNT));\n\tassert((cxt->flags & MNT_FL_MOUNTFLAGS_MERGED));\n\n\tns_old = mnt_context_switch_target_ns(cxt);\n\tif (!ns_old)\n\t\treturn -MNT_ERR_NAMESPACE;\n\n\trc = do_umount(cxt);\n\tif (rc)\n\t\tgoto end;\n\n\tif (mnt_context_get_status(cxt) && !mnt_context_is_fake(cxt)) {\n\t\t/*\n\t\t * Umounted, do some post-umount operations\n\t\t *\t- remove loopdev\n\t\t *\t- refresh in-memory mtab stuff if remount rather than\n\t\t *\t  umount has been performed\n\t\t */\n\t\tif (mnt_context_is_loopdel(cxt)\n\t\t    && !(cxt->mountflags & MS_REMOUNT))\n\t\t\trc = mnt_context_delete_loopdev(cxt);\n\n\t\tif (!mnt_context_is_nomtab(cxt)\n\t\t    && mnt_context_get_status(cxt)\n\t\t    && !cxt->helper\n\t\t    && mnt_context_is_rdonly_umount(cxt)\n\t\t    && (cxt->mountflags & MS_REMOUNT)) {\n\n\t\t\t/* use \"remount\" instead of \"umount\" in /etc/mtab */\n\t\t\tif (!rc && cxt->update && mnt_context_mtab_writable(cxt))\n\t\t\t\trc = mnt_update_set_fs(cxt->update,\n\t\t\t\t\t\t       cxt->mountflags, NULL, cxt->fs);\n\t\t}\n\t}\nend:\n\tif (!mnt_context_switch_ns(cxt, ns_old))\n\t\treturn -MNT_ERR_NAMESPACE;\n\n\treturn rc;\n}\n\n/**\n * mnt_context_finalize_umount:\n * @cxt: context\n *\n * Mtab update, etc. Unnecessary for mnt_context_umount(), but should be called\n * after mnt_context_do_umount(). See also mnt_context_set_syscall_status().\n *\n * Returns: negative number on error, 0 on success.\n */\nint mnt_context_finalize_umount(struct libmnt_context *cxt)\n{\n\tint rc;\n\n\tassert(cxt);\n\tassert(cxt->fs);\n\tassert((cxt->flags & MNT_FL_PREPARED));\n\tassert((cxt->flags & MNT_FL_MOUNTFLAGS_MERGED));\n\n\trc = mnt_context_prepare_update(cxt);\n\tif (!rc)\n\t\trc = mnt_context_update_tabs(cxt);\n\treturn rc;\n}\n\n\n/**\n * mnt_context_umount:\n * @cxt: umount context\n *\n * High-level, umounts filesystem by umount(2) or fork()+exec(/sbin/umount.type).\n *\n * This is similar to:\n *\n *\tmnt_context_prepare_umount(cxt);\n *\tmnt_context_do_umount(cxt);\n *\tmnt_context_finalize_umount(cxt);\n *\n * See also mnt_context_disable_helpers().\n *\n * WARNING: non-zero return code does not mean that umount(2) syscall or\n *          umount.type helper wasn't successfully called.\n *\n *          Check mnt_context_get_status() after error!\n *\n * Returns: 0 on success;\n *         >0 in case of umount(2) error (returns syscall errno),\n *         <0 in case of other errors.\n */\nint mnt_context_umount(struct libmnt_context *cxt)\n{\n\tint rc;\n\tstruct libmnt_ns *ns_old;\n\n\tassert(cxt);\n\tassert(cxt->fs);\n\tassert(cxt->helper_exec_status == 1);\n\tassert(cxt->syscall_status == 1);\n\n\tDBG(CXT, ul_debugobj(cxt, \"umount: %s\", mnt_context_get_target(cxt)));\n\n\tns_old = mnt_context_switch_target_ns(cxt);\n\tif (!ns_old)\n\t\treturn -MNT_ERR_NAMESPACE;\n\n\trc = mnt_context_prepare_umount(cxt);\n\tif (!rc)\n\t\trc = mnt_context_prepare_update(cxt);\n\tif (!rc)\n\t\trc = mnt_context_do_umount(cxt);\n\tif (!rc)\n\t\trc = mnt_context_update_tabs(cxt);\n\n\tif (!mnt_context_switch_ns(cxt, ns_old))\n\t\treturn -MNT_ERR_NAMESPACE;\n\n\treturn rc;\n}\n\n\n/**\n * mnt_context_next_umount:\n * @cxt: context\n * @itr: iterator\n * @fs: returns the current filesystem\n * @mntrc: returns the return code from mnt_context_umount()\n * @ignored: returns 1 for not matching\n *\n * This function tries to umount the next filesystem from mtab (as returned by\n * mnt_context_get_mtab()).\n *\n * You can filter out filesystems by:\n *\tmnt_context_set_options_pattern() to simulate umount -a -O pattern\n *\tmnt_context_set_fstype_pattern()  to simulate umount -a -t pattern\n *\n * If the filesystem is not mounted or does not match the defined criteria,\n * then the function mnt_context_next_umount() returns zero, but the @ignored is\n * non-zero. Note that the root filesystem is always ignored.\n *\n * If umount(2) syscall or umount.type helper failed, then the\n * mnt_context_next_umount() function returns zero, but the @mntrc is non-zero.\n * Use also mnt_context_get_status() to check if the filesystem was\n * successfully umounted.\n *\n * Returns: 0 on success,\n *         <0 in case of error (!= umount(2) errors)\n *          1 at the end of the list.\n */\nint mnt_context_next_umount(struct libmnt_context *cxt,\n\t\t\t   struct libmnt_iter *itr,\n\t\t\t   struct libmnt_fs **fs,\n\t\t\t   int *mntrc,\n\t\t\t   int *ignored)\n{\n\tstruct libmnt_table *mtab;\n\tconst char *tgt;\n\tint rc;\n\n\tif (ignored)\n\t\t*ignored = 0;\n\tif (mntrc)\n\t\t*mntrc = 0;\n\n\tif (!cxt || !fs || !itr)\n\t\treturn -EINVAL;\n\n\trc = mnt_context_get_mtab(cxt, &mtab);\n\tcxt->mtab = NULL;\t\t/* do not reset mtab */\n\tmnt_reset_context(cxt);\n\n\tif (rc)\n\t\treturn rc;\n\n\tcxt->mtab = mtab;\n\n\tdo {\n\t\trc = mnt_table_next_fs(mtab, itr, fs);\n\t\tif (rc != 0)\n\t\t\treturn rc;\t/* no more filesystems (or error) */\n\n\t\ttgt = mnt_fs_get_target(*fs);\n\t} while (!tgt);\n\n\tDBG(CXT, ul_debugobj(cxt, \"next-umount: trying %s [fstype: %s, t-pattern: %s, options: %s, O-pattern: %s]\", tgt,\n\t\t\t\t mnt_fs_get_fstype(*fs), cxt->fstype_pattern, mnt_fs_get_options(*fs), cxt->optstr_pattern));\n\n\t/* ignore filesystems which don't match options patterns */\n\tif ((cxt->fstype_pattern && !mnt_fs_match_fstype(*fs,\n\t\t\t\t\tcxt->fstype_pattern)) ||\n\n\t/* ignore filesystems which don't match type patterns */\n\t   (cxt->optstr_pattern && !mnt_fs_match_options(*fs,\n\t\t\t\t\tcxt->optstr_pattern))) {\n\t\tif (ignored)\n\t\t\t*ignored = 1;\n\n\t\tDBG(CXT, ul_debugobj(cxt, \"next-umount: not-match\"));\n\t\treturn 0;\n\t}\n\n\trc = mnt_context_set_fs(cxt, *fs);\n\tif (rc)\n\t\treturn rc;\n\trc = mnt_context_umount(cxt);\n\tif (mntrc)\n\t\t*mntrc = rc;\n\treturn 0;\n}\n\n\nint mnt_context_get_umount_excode(\n\t\t\tstruct libmnt_context *cxt,\n\t\t\tint rc,\n\t\t\tchar *buf,\n\t\t\tsize_t bufsz)\n{\n\tif (mnt_context_helper_executed(cxt))\n\t\t/*\n\t\t * /sbin/umount.<type> called, return status\n\t\t */\n\t\treturn mnt_context_get_helper_status(cxt);\n\n\tif (rc == 0 && mnt_context_get_status(cxt) == 1)\n\t\t/*\n\t\t * Libmount success && syscall success.\n\t\t */\n\t\treturn MNT_EX_SUCCESS;\n\n\tif (!mnt_context_syscall_called(cxt)) {\n\t\t/*\n\t\t * libmount errors (extra library checks)\n\t\t */\n\t\tif (rc == -EPERM && !mnt_context_tab_applied(cxt)) {\n\t\t\t/* failed to evaluate permissions because not found\n\t\t\t * relevant entry in mtab */\n\t\t\tif (buf)\n\t\t\t\tsnprintf(buf, bufsz, _(\"not mounted\"));\n\t\t\treturn MNT_EX_USAGE;\n\t\t}\n\n\t\tif (rc == -MNT_ERR_LOCK) {\n\t\t\tif (buf)\n\t\t\t\tsnprintf(buf, bufsz, _(\"locking failed\"));\n\t\t\treturn MNT_EX_FILEIO;\n\t\t}\n\n\t\tif (rc == -MNT_ERR_NAMESPACE) {\n\t\t\tif (buf)\n\t\t\t\tsnprintf(buf, bufsz, _(\"failed to switch namespace\"));\n\t\t\treturn MNT_EX_SYSERR;\n\t\t}\n\t\treturn mnt_context_get_generic_excode(rc, buf, bufsz,\n\t\t\t\t\t_(\"umount failed: %m\"));\n\n\t} if (mnt_context_get_syscall_errno(cxt) == 0) {\n\t\t/*\n\t\t * umount(2) syscall success, but something else failed\n\t\t * (probably error in mtab processing).\n\t\t */\n\t\tif (rc == -MNT_ERR_LOCK) {\n\t\t\tif (buf)\n\t\t\t\tsnprintf(buf, bufsz, _(\"filesystem was unmounted, but failed to update userspace mount table\"));\n\t\t\treturn MNT_EX_FILEIO;\n\t\t}\n\n\t\tif (rc == -MNT_ERR_NAMESPACE) {\n\t\t\tif (buf)\n\t\t\t\tsnprintf(buf, bufsz, _(\"filesystem was unmounted, but failed to switch namespace back\"));\n\t\t\treturn MNT_EX_SYSERR;\n\n\t\t}\n\n\t\tif (rc < 0)\n\t\t\treturn mnt_context_get_generic_excode(rc, buf, bufsz,\n\t\t\t\t_(\"filesystem was unmounted, but any subsequent operation failed: %m\"));\n\n\t\treturn MNT_EX_SOFTWARE;\t/* internal error */\n\t}\n\n\t/*\n\t * umount(2) errors\n\t */\n\tif (buf) {\n\t\tint syserr = mnt_context_get_syscall_errno(cxt);\n\n\t\tswitch (syserr) {\n\t\tcase ENXIO:\n\t\t\tsnprintf(buf, bufsz, _(\"invalid block device\"));\t/* ??? */\n\t\t\tbreak;\n\t\tcase EINVAL:\n\t\t\tsnprintf(buf, bufsz, _(\"not mounted\"));\n\t\t\tbreak;\n\t\tcase EIO:\n\t\t\tsnprintf(buf, bufsz, _(\"can't write superblock\"));\n\t\t\tbreak;\n\t\tcase EBUSY:\n\t\t\tsnprintf(buf, bufsz, _(\"target is busy\"));\n\t\t\tbreak;\n\t\tcase ENOENT:\n\t\t\tsnprintf(buf, bufsz, _(\"no mount point specified\"));\n\t\t\tbreak;\n\t\tcase EPERM:\n\t\t\tsnprintf(buf, bufsz, _(\"must be superuser to unmount\"));\n\t\t\tbreak;\n\t\tcase EACCES:\n\t\t\tsnprintf(buf, bufsz, _(\"block devices are not permitted on filesystem\"));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn mnt_context_get_generic_excode(syserr, buf, bufsz,_(\"umount(2) system call failed: %m\"));\n\t\t}\n\t}\n\treturn MNT_EX_FAIL;\n}\n</Code>"
                }
            ],
            "url": "https://github.com/util-linux/util-linux/commit/57202f5713afa2af20ffbb6ab5331481d0396f8d",
            "description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows an unprivileged local attacker to unmount FUSE filesystems that belong to certain other users who have a UID that is a prefix of the UID of the attacker in its string form. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.",
            "date": "2022-08-23",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-691\"],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-691"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2021-3995",
            "ground_truth_CWEs": [
                "CWE-552"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: undici is an HTTP/1.1 client, written from scratch for Node.js.`undici` is vulnerable to SSRF (Server-side Request Forgery) when an application takes in **user input** into the `path/pathname` option of `undici.request`. If a user specifies a URL such as `http://127.0.0.1` or `//127.0.0.1` ```js const undici = require(\"undici\") undici.request({origin: \"http://example.com\", pathname: \"//127.0.0.1\"}) ``` Instead of processing the request as `http://example.org//127.0.0.1` (or `http://example.org/http://127.0.0.1` when `http://127.0.0.1 is used`), it actually processes the request as `http://127.0.0.1/` and sends it to `http://127.0.0.1`. If a developer passes in user input into `path` parameter of `undici.request`, it can result in an _SSRF_ as they will assume that the hostname cannot change, when in actual fact it can change because the specified path parameter is combined with the base URL. This issue was fixed in `undici@5.8.1`. The best workaround is to validate user input before passing it to the `undici.request` call.\nFile: index.js\nContent: \n<Code>\n'use strict'\n\nconst Client = require('./lib/client')\nconst Dispatcher = require('./lib/dispatcher')\nconst errors = require('./lib/core/errors')\nconst Pool = require('./lib/pool')\nconst BalancedPool = require('./lib/balanced-pool')\nconst Agent = require('./lib/agent')\nconst util = require('./lib/core/util')\nconst { InvalidArgumentError } = errors\nconst api = require('./lib/api')\nconst buildConnector = require('./lib/core/connect')\nconst MockClient = require('./lib/mock/mock-client')\nconst MockAgent = require('./lib/mock/mock-agent')\nconst MockPool = require('./lib/mock/mock-pool')\nconst mockErrors = require('./lib/mock/mock-errors')\nconst ProxyAgent = require('./lib/proxy-agent')\nconst { getGlobalDispatcher, setGlobalDispatcher } = require('./lib/global')\n\nconst nodeVersion = process.versions.node.split('.')\nconst nodeMajor = Number(nodeVersion[0])\nconst nodeMinor = Number(nodeVersion[1])\n\nObject.assign(Dispatcher.prototype, api)\n\nmodule.exports.Dispatcher = Dispatcher\nmodule.exports.Client = Client\nmodule.exports.Pool = Pool\nmodule.exports.BalancedPool = BalancedPool\nmodule.exports.Agent = Agent\nmodule.exports.ProxyAgent = ProxyAgent\n\nmodule.exports.buildConnector = buildConnector\nmodule.exports.errors = errors\n\nfunction makeDispatcher (fn) {\n  return (url, opts, handler) => {\n    if (typeof opts === 'function') {\n      handler = opts\n      opts = null\n    }\n\n    if (!url || (typeof url !== 'string' && typeof url !== 'object' && !(url instanceof URL))) {\n      throw new InvalidArgumentError('invalid url')\n    }\n\n    if (opts != null && typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (opts && opts.path != null) {\n      if (typeof opts.path !== 'string') {\n        throw new InvalidArgumentError('invalid opts.path')\n      }\n\n      url = new URL(opts.path, util.parseOrigin(url))\n    } else {\n      if (!opts) {\n        opts = typeof url === 'object' ? url : {}\n      }\n\n      url = util.parseURL(url)\n    }\n\n    const { agent, dispatcher = getGlobalDispatcher() } = opts\n\n    if (agent) {\n      throw new InvalidArgumentError('unsupported opts.agent. Did you mean opts.client?')\n    }\n\n    return fn.call(dispatcher, {\n      ...opts,\n      origin: url.origin,\n      path: url.search ? `${url.pathname}${url.search}` : url.pathname,\n      method: opts.method || (opts.body ? 'PUT' : 'GET')\n    }, handler)\n  }\n}\n\nmodule.exports.setGlobalDispatcher = setGlobalDispatcher\nmodule.exports.getGlobalDispatcher = getGlobalDispatcher\n\nif (nodeMajor > 16 || (nodeMajor === 16 && nodeMinor >= 8)) {\n  let fetchImpl = null\n  module.exports.fetch = async function fetch (resource) {\n    if (!fetchImpl) {\n      fetchImpl = require('./lib/fetch')\n    }\n    const dispatcher = (arguments[1] && arguments[1].dispatcher) || getGlobalDispatcher()\n    return fetchImpl.apply(dispatcher, arguments)\n  }\n  module.exports.Headers = require('./lib/fetch/headers').Headers\n  module.exports.Response = require('./lib/fetch/response').Response\n  module.exports.Request = require('./lib/fetch/request').Request\n  module.exports.FormData = require('./lib/fetch/formdata').FormData\n  module.exports.File = require('./lib/fetch/file').File\n}\n\nmodule.exports.request = makeDispatcher(api.request)\nmodule.exports.stream = makeDispatcher(api.stream)\nmodule.exports.pipeline = makeDispatcher(api.pipeline)\nmodule.exports.connect = makeDispatcher(api.connect)\nmodule.exports.upgrade = makeDispatcher(api.upgrade)\n\nmodule.exports.MockClient = MockClient\nmodule.exports.MockPool = MockPool\nmodule.exports.MockAgent = MockAgent\nmodule.exports.mockErrors = mockErrors\n</Code>\n\nFile: lib/core/util.js\nContent: \n<Code>\n'use strict'\n\nconst assert = require('assert')\nconst { kDestroyed, kBodyUsed } = require('./symbols')\nconst { IncomingMessage } = require('http')\nconst stream = require('stream')\nconst net = require('net')\nconst { InvalidArgumentError } = require('./errors')\nconst { Blob } = require('buffer')\nconst nodeUtil = require('util')\n\nfunction nop () {}\n\nfunction isStream (obj) {\n  return obj && typeof obj.pipe === 'function'\n}\n\n// based on https://github.com/node-fetch/fetch-blob/blob/8ab587d34080de94140b54f07168451e7d0b655e/index.js#L229-L241 (MIT License)\nfunction isBlobLike (object) {\n  return (Blob && object instanceof Blob) || (\n    object &&\n    typeof object === 'object' &&\n    (typeof object.stream === 'function' ||\n      typeof object.arrayBuffer === 'function') &&\n    /^(Blob|File)$/.test(object[Symbol.toStringTag])\n  )\n}\n\nfunction isObject (val) {\n  return val !== null && typeof val === 'object'\n}\n\n// this escapes all non-uri friendly characters\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n// based on https://github.com/axios/axios/blob/63e559fa609c40a0a460ae5d5a18c3470ffc6c9e/lib/helpers/buildURL.js (MIT license)\nfunction buildURL (url, queryParams) {\n  if (url.includes('?') || url.includes('#')) {\n    throw new Error('Query params cannot be passed when url already contains \"?\" or \"#\".')\n  }\n  if (!isObject(queryParams)) {\n    throw new Error('Query params must be an object')\n  }\n\n  const parts = []\n  for (let [key, val] of Object.entries(queryParams)) {\n    if (val === null || typeof val === 'undefined') {\n      continue\n    }\n\n    if (!Array.isArray(val)) {\n      val = [val]\n    }\n\n    for (const v of val) {\n      if (isObject(v)) {\n        throw new Error('Passing object as a query param is not supported, please serialize to string up-front')\n      }\n      parts.push(encode(key) + '=' + encode(v))\n    }\n  }\n\n  const serializedParams = parts.join('&')\n\n  if (serializedParams) {\n    url += '?' + serializedParams\n  }\n\n  return url\n}\n\nfunction parseURL (url) {\n  if (typeof url === 'string') {\n    url = new URL(url)\n  }\n\n  if (!url || typeof url !== 'object') {\n    throw new InvalidArgumentError('invalid url')\n  }\n\n  if (url.port != null && url.port !== '' && !Number.isFinite(parseInt(url.port))) {\n    throw new InvalidArgumentError('invalid port')\n  }\n\n  if (url.path != null && typeof url.path !== 'string') {\n    throw new InvalidArgumentError('invalid path')\n  }\n\n  if (url.pathname != null && typeof url.pathname !== 'string') {\n    throw new InvalidArgumentError('invalid pathname')\n  }\n\n  if (url.hostname != null && typeof url.hostname !== 'string') {\n    throw new InvalidArgumentError('invalid hostname')\n  }\n\n  if (url.origin != null && typeof url.origin !== 'string') {\n    throw new InvalidArgumentError('invalid origin')\n  }\n\n  if (!/^https?:/.test(url.origin || url.protocol)) {\n    throw new InvalidArgumentError('invalid protocol')\n  }\n\n  if (!(url instanceof URL)) {\n    const port = url.port != null\n      ? url.port\n      : (url.protocol === 'https:' ? 443 : 80)\n    const origin = url.origin != null\n      ? url.origin\n      : `${url.protocol}//${url.hostname}:${port}`\n    const path = url.path != null\n      ? url.path\n      : `${url.pathname || ''}${url.search || ''}`\n\n    url = new URL(path, origin)\n  }\n\n  return url\n}\n\nfunction parseOrigin (url) {\n  url = parseURL(url)\n\n  if (url.pathname !== '/' || url.search || url.hash) {\n    throw new InvalidArgumentError('invalid url')\n  }\n\n  return url\n}\n\nfunction getHostname (host) {\n  if (host[0] === '[') {\n    const idx = host.indexOf(']')\n\n    assert(idx !== -1)\n    return host.substr(1, idx - 1)\n  }\n\n  const idx = host.indexOf(':')\n  if (idx === -1) return host\n\n  return host.substr(0, idx)\n}\n\n// IP addresses are not valid server names per RFC6066\n// > Currently, the only server names supported are DNS hostnames\nfunction getServerName (host) {\n  if (!host) {\n    return null\n  }\n\n  assert.strictEqual(typeof host, 'string')\n\n  const servername = getHostname(host)\n  if (net.isIP(servername)) {\n    return ''\n  }\n\n  return servername\n}\n\nfunction deepClone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nfunction isAsyncIterable (obj) {\n  return !!(obj != null && typeof obj[Symbol.asyncIterator] === 'function')\n}\n\nfunction isIterable (obj) {\n  return !!(obj != null && (typeof obj[Symbol.iterator] === 'function' || typeof obj[Symbol.asyncIterator] === 'function'))\n}\n\nfunction bodyLength (body) {\n  if (body == null) {\n    return 0\n  } else if (isStream(body)) {\n    const state = body._readableState\n    return state && state.ended === true && Number.isFinite(state.length)\n      ? state.length\n      : null\n  } else if (isBlobLike(body)) {\n    return body.size != null ? body.size : null\n  } else if (isBuffer(body)) {\n    return body.byteLength\n  }\n\n  return null\n}\n\nfunction isDestroyed (stream) {\n  return !stream || !!(stream.destroyed || stream[kDestroyed])\n}\n\nfunction isReadableAborted (stream) {\n  const state = stream && stream._readableState\n  return isDestroyed(stream) && state && !state.endEmitted\n}\n\nfunction destroy (stream, err) {\n  if (!isStream(stream) || isDestroyed(stream)) {\n    return\n  }\n\n  if (typeof stream.destroy === 'function') {\n    if (Object.getPrototypeOf(stream).constructor === IncomingMessage) {\n      // See: https://github.com/nodejs/node/pull/38505/files\n      stream.socket = null\n    }\n    stream.destroy(err)\n  } else if (err) {\n    process.nextTick((stream, err) => {\n      stream.emit('error', err)\n    }, stream, err)\n  }\n\n  if (stream.destroyed !== true) {\n    stream[kDestroyed] = true\n  }\n}\n\nconst KEEPALIVE_TIMEOUT_EXPR = /timeout=(\\d+)/\nfunction parseKeepAliveTimeout (val) {\n  const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR)\n  return m ? parseInt(m[1], 10) * 1000 : null\n}\n\nfunction parseHeaders (headers, obj = {}) {\n  for (let i = 0; i < headers.length; i += 2) {\n    const key = headers[i].toString().toLowerCase()\n    let val = obj[key]\n    if (!val) {\n      obj[key] = headers[i + 1].toString()\n    } else {\n      if (!Array.isArray(val)) {\n        val = [val]\n        obj[key] = val\n      }\n      val.push(headers[i + 1].toString())\n    }\n  }\n  return obj\n}\n\nfunction parseRawHeaders (headers) {\n  return headers.map(header => header.toString())\n}\n\nfunction isBuffer (buffer) {\n  // See, https://github.com/mcollina/undici/pull/319\n  return buffer instanceof Uint8Array || Buffer.isBuffer(buffer)\n}\n\nfunction validateHandler (handler, method, upgrade) {\n  if (!handler || typeof handler !== 'object') {\n    throw new InvalidArgumentError('handler must be an object')\n  }\n\n  if (typeof handler.onConnect !== 'function') {\n    throw new InvalidArgumentError('invalid onConnect method')\n  }\n\n  if (typeof handler.onError !== 'function') {\n    throw new InvalidArgumentError('invalid onError method')\n  }\n\n  if (typeof handler.onBodySent !== 'function' && handler.onBodySent !== undefined) {\n    throw new InvalidArgumentError('invalid onBodySent method')\n  }\n\n  if (upgrade || method === 'CONNECT') {\n    if (typeof handler.onUpgrade !== 'function') {\n      throw new InvalidArgumentError('invalid onUpgrade method')\n    }\n  } else {\n    if (typeof handler.onHeaders !== 'function') {\n      throw new InvalidArgumentError('invalid onHeaders method')\n    }\n\n    if (typeof handler.onData !== 'function') {\n      throw new InvalidArgumentError('invalid onData method')\n    }\n\n    if (typeof handler.onComplete !== 'function') {\n      throw new InvalidArgumentError('invalid onComplete method')\n    }\n  }\n}\n\n// A body is disturbed if it has been read from and it cannot\n// be re-used without losing state or data.\nfunction isDisturbed (body) {\n  return !!(body && (\n    stream.isDisturbed\n      ? stream.isDisturbed(body) || body[kBodyUsed] // TODO (fix): Why is body[kBodyUsed] needed?\n      : body[kBodyUsed] ||\n        body.readableDidRead ||\n        (body._readableState && body._readableState.dataEmitted) ||\n        isReadableAborted(body)\n  ))\n}\n\nfunction isErrored (body) {\n  return !!(body && (\n    stream.isErrored\n      ? stream.isErrored(body)\n      : /state: 'errored'/.test(nodeUtil.inspect(body)\n      )))\n}\n\nfunction isReadable (body) {\n  return !!(body && (\n    stream.isReadable\n      ? stream.isReadable(body)\n      : /state: 'readable'/.test(nodeUtil.inspect(body)\n      )))\n}\n\nfunction getSocketInfo (socket) {\n  return {\n    localAddress: socket.localAddress,\n    localPort: socket.localPort,\n    remoteAddress: socket.remoteAddress,\n    remotePort: socket.remotePort,\n    remoteFamily: socket.remoteFamily,\n    timeout: socket.timeout,\n    bytesWritten: socket.bytesWritten,\n    bytesRead: socket.bytesRead\n  }\n}\n\nlet ReadableStream\nfunction ReadableStreamFrom (iterable) {\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  if (ReadableStream.from) {\n    // https://github.com/whatwg/streams/pull/1083\n    return ReadableStream.from(iterable)\n  }\n\n  let iterator\n  return new ReadableStream(\n    {\n      async start () {\n        iterator = iterable[Symbol.asyncIterator]()\n      },\n      async pull (controller) {\n        const { done, value } = await iterator.next()\n        if (done) {\n          queueMicrotask(() => {\n            controller.close()\n          })\n        } else {\n          const buf = Buffer.isBuffer(value) ? value : Buffer.from(value)\n          controller.enqueue(new Uint8Array(buf))\n        }\n        return controller.desiredSize > 0\n      },\n      async cancel (reason) {\n        await iterator.return()\n      }\n    },\n    0\n  )\n}\n\nfunction isFormDataLike (chunk) {\n  return chunk && chunk.constructor && chunk.constructor.name === 'FormData'\n}\n\nconst kEnumerableProperty = Object.create(null)\nkEnumerableProperty.enumerable = true\n\nmodule.exports = {\n  kEnumerableProperty,\n  nop,\n  isDisturbed,\n  isErrored,\n  isReadable,\n  toUSVString: nodeUtil.toUSVString || ((val) => `${val}`),\n  isReadableAborted,\n  isBlobLike,\n  parseOrigin,\n  parseURL,\n  getServerName,\n  isStream,\n  isIterable,\n  isAsyncIterable,\n  isDestroyed,\n  parseRawHeaders,\n  parseHeaders,\n  parseKeepAliveTimeout,\n  destroy,\n  bodyLength,\n  deepClone,\n  ReadableStreamFrom,\n  isBuffer,\n  validateHandler,\n  getSocketInfo,\n  isFormDataLike,\n  buildURL\n}\n</Code>"
                }
            ],
            "url": "https://github.com/nodejs/undici/commit/124f7ebf705366b2e1844dff721928d270f87895",
            "description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`undici` is vulnerable to SSRF (Server-side Request Forgery) when an application takes in **user input** into the `path/pathname` option of `undici.request`. If a user specifies a URL such as `http://127.0.0.1` or `//127.0.0.1` ```js const undici = require(\"undici\") undici.request({origin: \"http://example.com\", pathname: \"//127.0.0.1\"}) ``` Instead of processing the request as `http://example.org//127.0.0.1` (or `http://example.org/http://127.0.0.1` when `http://127.0.0.1 is used`), it actually processes the request as `http://127.0.0.1/` and sends it to `http://127.0.0.1`. If a developer passes in user input into `path` parameter of `undici.request`, it can result in an _SSRF_ as they will assume that the hostname cannot change, when in actual fact it can change because the specified path parameter is combined with the base URL. This issue was fixed in `undici@5.8.1`. The best workaround is to validate user input before passing it to the `undici.request` call.",
            "date": "2022-08-12",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-918\"],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-918"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2022-35949",
            "ground_truth_CWEs": [
                "CWE-918"
            ],
            "ground_truth_severities": {
                "V3.1": "CRITICAL"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Cross-site Scripting (XSS) - Reflected in GitHub repository thorsten/phpmyfaq prior to 3.1.10.\nFile: phpmyfaq/admin/index.php\nContent: \n<Code>\n<?php\n\n/**\n * The main admin backend index file.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author Bastian Poettner <bastian@poettner.net>\n * @author Meikel Katzengreis <meikel@katzengreis.com>\n * @author Minoru TODA <todam@netjapan.co.jp>\n * @author Matteo Scaramuccia <matteo@phpmyfaq.de>\n * @copyright 2002-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2002-09-16\n */\n\nuse phpMyFAQ\\Attachment\\AttachmentFactory;\nuse phpMyFAQ\\Auth\\AuthLdap;\nuse phpMyFAQ\\Auth\\AuthSso;\nuse phpMyFAQ\\Faq;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\HttpHelper;\nuse phpMyFAQ\\Language;\nuse phpMyFAQ\\Language\\Plurals;\nuse phpMyFAQ\\Logging;\nuse phpMyFAQ\\Permission\\MediumPermission;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\System;\nuse phpMyFAQ\\Template;\nuse phpMyFAQ\\User\\CurrentUser;\n\ndefine('PMF_ROOT_DIR', dirname(__DIR__));\n\n//\n// Define the named constant used as a check by any included PHP file\n//\nconst IS_VALID_PHPMYFAQ = null;\n\n//\n// Bootstrapping\n//\nrequire PMF_ROOT_DIR . '/src/Bootstrap.php';\n\n// get language (default: english)\n$Language = new Language($faqConfig);\n$faqLangCode = $Language->setLanguage($faqConfig->get('main.languageDetection'), $faqConfig->get('main.language'));\n// Preload English strings\nrequire PMF_ROOT_DIR . '/lang/language_en.php';\n$faqConfig->setLanguage($Language);\n\nif (isset($faqLangCode) && Language::isASupportedLanguage($faqLangCode)) {\n    // Overwrite English strings with the ones we have in the current language\n    if (!file_exists(PMF_ROOT_DIR . '/lang/language_' . $faqLangCode . '.php')) {\n        $faqLangCode = 'en';\n    }\n    require PMF_ROOT_DIR . '/lang/language_' . $faqLangCode . '.php';\n} else {\n    $faqLangCode = 'en';\n}\n\n//\n// Load plurals support for selected language\n//\n$plr = new Plurals($PMF_LANG);\n\n//\n// Initializing static string wrapper\n//\nStrings::init($faqLangCode);\n\n//\n// Set actual template set name\n//\nTemplate::setTplSetName($faqConfig->get('main.templateSet'));\n\n//\n// Initialize attachment factory\n//\nAttachmentFactory::init(\n    $faqConfig->get('records.attachmentsStorageType'),\n    $faqConfig->get('records.defaultAttachmentEncKey'),\n    $faqConfig->get('records.enableAttachmentEncryption')\n);\n\n//\n// Create a new phpMyFAQ system object\n//\n$faqSystem = new System();\n\n//\n// Create a new HTTP Helper\n//\n$http = new HttpHelper();\n\n//\n// Create a new FAQ object\n//\n$faq = new Faq($faqConfig);\n\n//\n// use mbstring extension if available and when possible\n//\n$validMbStrings = array('ja', 'en', 'uni');\n$mbLanguage = ($PMF_LANG['metaLanguage'] != 'ja') ? 'uni' : $PMF_LANG['metaLanguage'];\nif (function_exists('mb_language') && in_array($mbLanguage, $validMbStrings)) {\n    mb_language($mbLanguage);\n    mb_internal_encoding('utf-8');\n}\n\n//\n// Get user action\n//\n$action = Filter::filterInput(INPUT_GET, 'action', FILTER_UNSAFE_RAW);\nif (is_null($action)) {\n    $action = Filter::filterInput(INPUT_POST, 'action', FILTER_UNSAFE_RAW);\n}\nif (!is_null($action)) {\n    $action = Strings::htmlentities($action);\n}\n\n//\n// Get CSRF Token\n//\n$csrfToken = Filter::filterInput(INPUT_GET, 'csrf', FILTER_UNSAFE_RAW);\nif (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n    $csrfChecked = false;\n} else {\n    $csrfChecked = true;\n}\n\n//\n// Get possible redirect action\n//\n$redirectAction = Filter::filterInput(INPUT_POST, 'redirect-action', FILTER_UNSAFE_RAW);\nif (is_null($action) && '' !== $redirectAction && 'logout' !== $redirectAction) {\n    $action = $redirectAction;\n}\n\n// authenticate current user\n$auth = null;\n$error = '';\n$faqusername = Filter::filterInput(INPUT_POST, 'faqusername', FILTER_UNSAFE_RAW);\n$faqpassword = Filter::filterInput(INPUT_POST, 'faqpassword', FILTER_UNSAFE_RAW, FILTER_FLAG_NO_ENCODE_QUOTES);\n$faqremember = Filter::filterInput(INPUT_POST, 'faqrememberme', FILTER_UNSAFE_RAW);\n\n// Set username via SSO\nif ($faqConfig->get('security.ssoSupport') && isset($_SERVER['REMOTE_USER'])) {\n    $faqusername = trim($_SERVER['REMOTE_USER']);\n    $faqpassword = '';\n}\n\n// Login via local DB or LDAP or SSO\nif (!is_null($faqusername) && !is_null($faqpassword)) {\n    $user = new CurrentUser($faqConfig);\n    if (!is_null($faqremember) && 'rememberMe' === $faqremember) {\n        $user->enableRememberMe();\n    }\n    if ($faqConfig->isLdapActive() && function_exists('ldap_connect')) {\n        try {\n            $authLdap = new AuthLdap($faqConfig);\n            $user->addAuth($authLdap, 'ldap');\n        } catch (Exception $e) {\n            $error = $e->getMessage() . '<br>';\n        }\n    }\n    if ($faqConfig->get('security.ssoSupport')) {\n        $authSso = new AuthSso($faqConfig);\n        $user->addAuth($authSso, 'sso');\n    }\n    if ($user->login($faqusername, $faqpassword)) {\n        // login, if user account is NOT blocked\n        if ($user->getStatus() != 'blocked') {\n            $auth = true;\n        } else {\n            $error = $error . $PMF_LANG['ad_auth_fail'];\n        }\n    } else {\n        // error\n        $logging = new Logging($faqConfig);\n        $logging->logAdmin($user, 'Loginerror\\nLogin: ' . $faqusername . '\\nErrors: ' . implode(', ', $user->errors));\n        $error = $error . $PMF_LANG['ad_auth_fail'];\n    }\n} else {\n    // Try to authenticate with cookie information\n    $user = CurrentUser::getFromCookie($faqConfig);\n    // authenticate with session information\n    if (!$user instanceof CurrentUser) {\n        $user = CurrentUser::getFromSession($faqConfig);\n    }\n    if ($user instanceof CurrentUser) {\n        $auth = true;\n    } else {\n        $user = new CurrentUser($faqConfig);\n    }\n}\n\n// logout\nif ($csrfChecked && $action === 'logout' && $auth) {\n    $user->deleteFromSession(true);\n    $auth = null;\n    $ssoLogout = $faqConfig->get('security.ssoLogoutRedirect');\n    if ($faqConfig->get('security.ssoSupport') && !empty($ssoLogout)) {\n        $http->redirect($ssoLogout);\n    }\n}\n\n//\n// Get current admin user and group id - default: -1\n//\nif (isset($user) && is_object($user)) {\n    $currentAdminUser = $user->getUserId();\n    if ($user->perm instanceof MediumPermission) {\n        $currentAdminGroups = $user->perm->getUserGroups($currentAdminUser);\n    } else {\n        $currentAdminGroups = [-1];\n    }\n    if (0 === count($currentAdminGroups)) {\n        $currentAdminGroups = [-1];\n    }\n}\n\n//\n// Get action from _GET and _POST first\n$ajax = Filter::filterInput(INPUT_GET, 'ajax', FILTER_UNSAFE_RAW);\nif (is_null($ajax)) {\n    $ajax = Filter::filterInput(INPUT_POST, 'ajax', FILTER_UNSAFE_RAW);\n}\n\n// if performing AJAX operation, needs to branch before header.php\nif (isset($auth) && (count($user->perm->getAllUserRights($user->getUserId())) > 0 || $user->isSuperAdmin())) {\n    if (isset($action) && isset($ajax)) {\n        if ('ajax' === $action) {\n            switch ($ajax) {\n                // Attachments\n                case 'att':\n                    require 'ajax.attachment.php';\n                    break;\n                // Dashboard\n                case 'dashboard':\n                    require 'ajax.dashboard.php';\n                    break;\n                // Link verification\n                case 'verifyURL':\n                    require 'ajax.verifyurl.php';\n                    break;\n                case 'onDemandURL':\n                    require 'ajax.ondemandurl.php';\n                    break;\n                // Categories\n                case 'categories':\n                    require 'ajax.category.php';\n                    break;\n                // Configuration management\n                case 'config_list':\n                    require 'ajax.config_list.php';\n                    break;\n                case 'config':\n                    require 'ajax.config.php';\n                    break;\n                case 'elasticsearch':\n                    require 'ajax.elasticsearch.php';\n                    break;\n                // Tags management\n                case 'tags':\n                    require 'ajax.tags.php';\n                    break;\n                // Comments\n                case 'comment':\n                    require 'ajax.comment.php';\n                    break;\n                // Records\n                case 'records':\n                    require 'ajax.records.php';\n                    break;\n                case 'recordSave':\n                    require 'record.save.php';\n                    break;\n                case 'recordAdd':\n                    require 'record.add.php';\n                    break;\n                case 'markdown':\n                    require 'ajax.markdown.php';\n                    break;\n                // Search\n                case 'search':\n                    require 'ajax.search.php';\n                    break;\n                // Users\n                case 'user':\n                    require 'ajax.user.php';\n                    break;\n                // Groups\n                case 'group':\n                    require 'ajax.group.php';\n                    break;\n                // Sections\n                case 'section':\n                    require 'ajax.section.php';\n                    break;\n                // Interface translation\n                case 'trans':\n                    require 'ajax.trans.php';\n                    break;\n                // Image upload\n                case 'image':\n                    require 'ajax.image.php';\n                    break;\n            }\n            exit();\n        }\n    }\n}\n\n// are we running a PMF export file request?\nswitch ($action) {\n    case 'exportfile':\n        require 'export.file.php';\n        exit();\n        break;\n    case 'reportexport':\n        require 'report.export.php';\n        exit();\n        break;\n}\n\n// Header of the admin page including the navigation\nrequire 'header.php';\n\n$numRights = count($user->perm->getAllUserRights($user->getUserId()));\n\n// User is authenticated\nif (isset($auth) && ($numRights > 0 || $user->isSuperAdmin())) {\n    if (!is_null($action)) {\n        // the various sections of the admin area\n        switch ($action) {\n            // functions for user administration\n            case 'user':\n                require 'user.php';\n                break;\n            case 'group':\n                require 'group.php';\n                break;\n            case 'section':\n                require 'section.php';\n                break;\n            // functions for content administration\n            case 'faqs-overview':\n                require 'faqs.overview.php';\n                break;\n            case 'viewinactive':\n            case 'viewactive':\n            case 'view':\n                require 'record.show.php';\n                break;\n            case 'searchfaqs':\n                require 'record.search.php';\n                break;\n            case 'takequestion':\n            case 'editentry':\n            case 'copyentry':\n            case 'editpreview':\n                require 'record.edit.php';\n                break;\n            case 'insertentry':\n                require 'record.add.php';\n                break;\n            case 'saveentry':\n                require 'record.save.php';\n                break;\n            case 'delatt':\n                require 'record.delatt.php';\n                break;\n            case 'question':\n                require 'record.questions.php';\n                break;\n            case 'comments':\n                require 'record.comments.php';\n                break;\n            // functions for tags\n            case 'tags':\n            case 'delete-tag':\n                require 'tags.php';\n                break;\n            // news administration\n            case 'news':\n            case 'add-news':\n            case 'edit-news':\n            case 'save-news':\n            case 'update-news':\n            case 'delete-news':\n                require 'news.php';\n                break;\n            // category administration\n            case 'content':\n            case 'category':\n            case 'savecategory':\n            case 'updatecategory':\n            case 'checkIfCategoryExists':\n            case 'removecategory':\n            case 'changecategory':\n            case 'pastecategory':\n                require 'category.main.php';\n                break;\n            case 'addcategory':\n                require 'category.add.php';\n                break;\n            case 'editcategory':\n                require 'category.edit.php';\n                break;\n            case 'translatecategory':\n                require 'category.translate.php';\n                break;\n            case 'deletecategory':\n                require 'category.delete.php';\n                break;\n            case 'cutcategory':\n                require 'category.cut.php';\n                break;\n            case 'movecategory':\n                require 'category.move.php';\n                break;\n            case 'showcategory':\n                require 'category.showstructure.php';\n                break;\n            // glossary\n            case 'glossary':\n            case 'saveglossary':\n            case 'updateglossary':\n            case 'deleteglossary':\n                require 'glossary.main.php';\n                break;\n            case 'addglossary':\n                require 'glossary.add.php';\n                break;\n            case 'editglossary':\n                require 'glossary.edit.php';\n                break;\n            // functions for password administration\n            case 'passwd':\n                require 'pwd.change.php';\n                break;\n            // functions for session administration\n            case 'adminlog':\n            case 'deleteadminlog':\n                require 'stat.adminlog.php';\n                break;\n            case 'viewsessions':\n            case 'clear-visits':\n                require 'stat.main.php';\n                break;\n            case 'sessionbrowse':\n                require 'stat.browser.php';\n                break;\n            case 'viewsession':\n                require 'statistics.show.php';\n                break;\n            case 'clear-statistics':\n            case 'statistics':\n                require 'stat.ratings.php';\n                break;\n            case 'truncatesearchterms':\n            case 'searchstats':\n                require 'stat.search.php';\n                break;\n            // Reports\n            case 'reports':\n                require 'report.main.php';\n                break;\n            case 'reportview':\n                require 'report.view.php';\n                break;\n            // Config administration\n            case 'config':\n                require 'configuration.php';\n                break;\n            case 'system':\n                require 'system.php';\n                break;\n            case 'updateinstance':\n            case 'instances':\n                require 'instances.php';\n                break;\n            case 'editinstance':\n                require 'instances.edit.php';\n                break;\n            case 'stopwordsconfig':\n                require 'stopwords.php';\n                break;\n            case 'elasticsearch':\n                require 'elasticsearch.php';\n                break;\n            case 'meta':\n            case 'meta.update';\n                require 'meta.php';\n                break;\n            case 'meta.edit':\n                require 'meta.edit.php';\n                break;\n            // functions for backup administration\n            case 'backup':\n                require 'backup.main.php';\n                break;\n            case 'restore':\n                require 'backup.import.php';\n                break;\n            // functions for FAQ export\n            case 'export':\n                require 'export.main.php';\n                break;\n            // attachment administration\n            case 'attachments':\n                require 'attachments.php';\n                break;\n\n            default:\n                echo 'Dave, this conversation can serve no purpose anymore. Goodbye.';\n                break;\n        }\n    } else {\n        require 'dashboard.php';\n    }\n// User is authenticated, but has no rights\n} elseif (isset($auth) && $numRights === 0) {\n    require 'noperm.php';\n// User is NOT authenticated\n} else {\n    require 'loginform.php';\n}\n\nrequire 'footer.php';\n\n$faqConfig->getDb()->close();\n</Code>"
                }
            ],
            "url": "https://github.com/thorsten/phpmyfaq/commit/3872e7eac2ddeac182fc1335cc312d1392d56f98",
            "description": "Cross-site Scripting (XSS) - Reflected in GitHub repository thorsten/phpmyfaq prior to 3.1.10.",
            "date": "2023-01-15",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\n    \"CWE-79\"\n  ],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-79"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2023-0314",
            "ground_truth_CWEs": [
                "CWE-79"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": true,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: No description provided.\nFile: web/src/labs/marked/parser/Bold.ts\nContent: \n<Code>\nimport { marked } from \"..\";\nimport Link from \"./Link\";\n\nexport const BOLD_REG = /\\*\\*(.+?)\\*\\*/;\n\nconst matcher = (rawStr: string) => {\n  const matchResult = rawStr.match(BOLD_REG);\n  return matchResult;\n};\n\nconst renderer = (rawStr: string): string => {\n  const matchResult = matcher(rawStr);\n  if (!matchResult) {\n    return rawStr;\n  }\n\n  const parsedContent = marked(matchResult[1], [], [Link]);\n  return `<strong>${parsedContent}</strong>`;\n};\n\nexport default {\n  name: \"bold\",\n  regex: BOLD_REG,\n  matcher,\n  renderer,\n};\n</Code>\n\nFile: web/src/labs/marked/parser/BoldEmphasis.ts\nContent: \n<Code>\nimport { marked } from \"..\";\nimport Link from \"./Link\";\n\nexport const BOLD_EMPHASIS_REG = /\\*\\*\\*(.+?)\\*\\*\\*/;\n\nconst matcher = (rawStr: string) => {\n  const matchResult = rawStr.match(BOLD_EMPHASIS_REG);\n  return matchResult;\n};\n\nconst renderer = (rawStr: string): string => {\n  const matchResult = matcher(rawStr);\n  if (!matchResult) {\n    return rawStr;\n  }\n\n  const parsedContent = marked(matchResult[1], [], [Link]);\n  return `<strong><em>${parsedContent}</em></strong>`;\n};\n\nexport default {\n  name: \"bold emphasis\",\n  regex: BOLD_EMPHASIS_REG,\n  matcher,\n  renderer,\n};\n</Code>\n\nFile: web/src/labs/marked/parser/Emphasis.ts\nContent: \n<Code>\nimport { marked } from \"..\";\nimport Link from \"./Link\";\n\nexport const EMPHASIS_REG = /\\*(.+?)\\*/;\n\nconst matcher = (rawStr: string) => {\n  const matchResult = rawStr.match(EMPHASIS_REG);\n  return matchResult;\n};\n\nconst renderer = (rawStr: string): string => {\n  const matchResult = matcher(rawStr);\n  if (!matchResult) {\n    return rawStr;\n  }\n\n  const parsedContent = marked(matchResult[1], [], [Link]);\n  return `<em>${parsedContent}</em>`;\n};\n\nexport default {\n  name: \"emphasis\",\n  regex: EMPHASIS_REG,\n  matcher,\n  renderer,\n};\n</Code>\n\nFile: web/src/labs/marked/parser/Link.ts\nContent: \n<Code>\nimport { escape } from \"lodash-es\";\nimport Emphasis from \"./Emphasis\";\nimport Bold from \"./Bold\";\nimport { marked } from \"..\";\nimport InlineCode from \"./InlineCode\";\nimport BoldEmphasis from \"./BoldEmphasis\";\n\nexport const LINK_REG = /\\[(.*?)\\]\\((.+?)\\)+/;\n\nconst matcher = (rawStr: string) => {\n  const matchResult = rawStr.match(LINK_REG);\n  return matchResult;\n};\n\nconst renderer = (rawStr: string): string => {\n  const matchResult = matcher(rawStr);\n  if (!matchResult) {\n    return rawStr;\n  }\n  const parsedContent = marked(matchResult[1], [], [InlineCode, BoldEmphasis, Emphasis, Bold]);\n  return `<a class='link' target='_blank' rel='noreferrer' href='${escape(matchResult[2])}'>${parsedContent}</a>`;\n};\n\nexport default {\n  name: \"link\",\n  regex: LINK_REG,\n  matcher,\n  renderer,\n};\n</Code>"
                }
            ],
            "url": "https://github.com/usememos/memos/commit/7670c9536000bb32c6345d4906a91268dcddd5fc",
            "description": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.1.",
            "date": "2022-12-31",
            "github_description": "No description provided.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [],\n  \"severity\": null\n}",
            "llm_output": {
                "CWE_IDS": [],
                "severity": null
            },
            "ground_truth_CVE": "CVE-2022-4866",
            "ground_truth_CWEs": [
                "CWE-79"
            ],
            "ground_truth_severities": {
                "V3.1": "CRITICAL"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "EMPTY_PR"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Cross-site Scripting (XSS) - Stored in GitHub repository cockpit-hq/cockpit prior to 2.6.3.\nFile: modules/Assets/bootstrap.php\nContent: \n<Code>\n<?php\n\n// Register Helpers\n$this->helpers['asset'] = 'Assets\\\\Helper\\\\Asset';\n\n// load admin related code\n$this->on('app.admin.init', function() {\n    include(__DIR__.'/admin.php');\n});\n\n// load api request related code\n$this->on('app.api.request', function() {\n    include(__DIR__.'/api.php');\n});\n\n// assets api\n$this->module('assets')->extend([\n\n    'assets' => function(array $options = []) {\n        $assets = $this->app->dataStorage->find('assets', $options)->toArray();\n        return $assets;\n    },\n\n    'update' => function($assets) {\n\n        $assets = isset($assets[0]) ? $assets : [$assets];\n        $by = $this->app->helper('auth')->getUser('_id', null);\n\n        foreach ($assets as &$asset) {\n\n            $_asset = $this->app->dataStorage->findOne('assets', ['_id' => $asset['_id']]);\n\n            if (!$_asset) continue;\n\n            $asset['_modified'] = time();\n            $asset['_mby'] = $by;\n\n            $this->app->trigger('assets.asset.update', [&$asset]);\n\n            $this->app->dataStorage->save('assets', $asset);\n\n        }\n\n        return $assets;\n    },\n\n    'folders' => function(array $options = []) {\n        return $this->app->dataStorage->find('assets/folders', $options)->toArray();\n    },\n\n    'upload' => function(string $param = 'files', array $meta = []) {\n\n        $files = [];\n\n        if (is_string($param) && isset($this->app->request->files[$param])) {\n            $files = $this->app->request->files[$param];\n        } elseif (is_array($param) && isset($param['name'], $param['error'], $param['tmp_name'])) {\n            $files = $param;\n        }\n\n        $uploaded  = [];\n        $failed    = [];\n        $_files    = [];\n        $assets    = [];\n\n        $allowed   = $this->app->retrieve('assets/allowed_uploads', '*');\n        $allowed   = $allowed == '*' ? true : str_replace([' ', ','], ['', '|'], preg_quote(is_array($allowed) ? implode(',', $allowed) : $allowed));\n        $max_size  = $this->app->retrieve('assets/max_upload_size', 0);\n\n        if (isset($files['name']) && is_array($files['name'])) {\n\n            $cnt = count($files['name']);\n\n            for ($i = 0; $i < $cnt; $i++) {\n\n                $_file  = $this->app->path('#tmp:').'/'.$files['name'][$i];\n                $_isAllowed = $allowed === true ? true : preg_match(\"/\\.({$allowed})$/i\", $_file);\n                $_sizeAllowed = $max_size ? filesize($files['tmp_name'][$i]) < $max_size : true;\n\n                // prevent uploading php files\n                if ($_isAllowed && in_array(strtolower(pathinfo($_file, PATHINFO_EXTENSION)), ['php', 'phar', 'phtml', 'phps'])) {\n                    $_isAllowed = false;\n                }\n\n                if (!$files['error'][$i] && $_isAllowed && $_sizeAllowed && move_uploaded_file($files['tmp_name'][$i], $_file)) {\n\n                    $_files[]   = $_file;\n                    $uploaded[] = $files['name'][$i];\n\n                    if (\\preg_match('/\\.(svg|xml)$/i', $_file)) {\n                        file_put_contents($_file, \\SVGSanitizer::clean(\\file_get_contents($_file)));\n                    }\n\n                } else {\n                    $failed[] = $files['name'][$i];\n                }\n            }\n        }\n\n        if (count($_files)) {\n\n            $assets = $this->add($_files, $meta, isset($meta['_id']));\n\n            foreach ($_files as $file) {\n                unlink($file);\n            }\n        }\n\n        return ['uploaded' => $uploaded, 'failed' => $failed, 'assets' => $assets];\n    },\n\n    'add' => function(array $files, array $meta = [], bool $update = false) {\n\n        $files     = isset($files[0]) ? $files : [$files];\n        $finfo     = finfo_open(FILEINFO_MIME_TYPE);\n        $assets    = [];\n        $created   = time();\n        $by        = $this->app->helper('auth')->getUser('_id', null);\n\n        foreach ($files as $idx => &$file) {\n\n            // clean filename\n            $name = basename($file);\n\n            // clean filename\n            $filename = pathinfo($file, PATHINFO_FILENAME);\n            $ext = pathinfo($file, PATHINFO_EXTENSION);\n            $cleanFilename = preg_replace('/[^a-zA-Z0-9-_\\.]/','', str_replace(' ', '-', $filename));\n            $clean = $cleanFilename.uniqid(\"_uid_\").'.'.$ext;\n            $path  = '/'.date('Y/m/d').'/'.$clean;\n\n            $asset = [\n                'path' => $path,\n                'title' => $name,\n                'mime' => finfo_file($finfo, $file),\n                'type' => 'unknown',\n                'description' => '',\n                'tags' => [],\n                'size' => filesize($file),\n                'colors' => null,\n                'width' => null,\n                'height' => null,\n                '_hash' => hash_file('md5', $file),\n                '_created' => $created,\n                '_modified' => $created,\n                '_cby' => $by\n            ];\n\n            if (!$asset['mime']) {\n                $asset['mime'] = 'unknown';\n            }\n\n            if ($asset['mime'] == 'image/svg') {\n                $asset['mime'] = 'image/svg+xml';\n            }\n\n            $asset['type'] = match(1) {\n                preg_match('/\\.(jpg|jpeg|png|gif|svg|webp)$/i', $file) => 'image',\n                preg_match('/\\.(mp4|mov|ogv|webv|wmv|flv|avi)$/i', $file) => 'video',\n                preg_match('/\\.(mp3|weba|ogg|wav|flac)$/i', $file) => 'audio',\n                preg_match('/\\.(zip|rar|7zip|gz|tar)$/i', $file) => 'archive',\n                preg_match('/\\.(txt|htm|html|pdf|md)$/i', $file) => 'document',\n                preg_match('/\\.(htm|html|php|css|less|js|json|md|markdown|yaml|xml|htaccess)$/i', $file) => 'code',\n                default => 'unknown'\n            };\n\n            if ($asset['type'] == 'image' && !preg_match('/\\.svg$/i', $file)) {\n\n                $info = getimagesize($file);\n                $asset['width']  = $info[0];\n                $asset['height'] = $info[1];\n                $asset['colors'] = [];\n\n                if ($asset['width'] && $asset['height']) {\n\n                    try {\n                        $asset['colors'] = \\ColorThief\\ColorThief::getPalette($file, 5, ceil(($asset['width'] * $asset['height']) / 10000));\n                    } catch (\\Exception $e) {\n                        $asset['colors'] = [];\n                    }\n\n                    foreach ($asset['colors'] as &$color) {\n                        $color = sprintf(\"#%02x%02x%02x\", $color[0], $color[1], $color[2]);\n                    }\n                }\n            }\n\n            $opts  = ['mimetype' => $asset['mime']];\n            $_meta = isset($meta[$idx]) && is_array($meta[$idx]) ? $meta[$idx] : $meta;\n\n            $this->app->trigger('assets.asset.upload', [&$asset, &$_meta, &$opts, &$file, &$path]);\n\n            if (!$asset) {\n                continue;\n            }\n\n            // move file\n            try {\n\n                $stream = fopen($file, 'r+');\n                $this->app->fileStorage->writeStream(\"uploads://{$path}\", $stream, $opts);\n\n                if (is_resource($stream)) {\n                    fclose($stream);\n                }\n\n            } catch (Throwable $exception) {\n                continue;\n            }\n\n            foreach ($_meta as $key => $val) {\n                $asset[$key] = $val;\n            }\n\n            $this->app->trigger('assets.asset', [&$asset]);\n\n            $assets[] = $asset;\n        }\n\n        if (count($assets)) {\n\n            if ($update) {\n                foreach ($assets as $asset) {\n                    $this->app->trigger('assets.asset.update', [&$asset]);\n                    $this->app->dataStorage->save('assets', $asset);\n                }\n            } else {\n                $this->app->trigger('assets.add', [&$assets]);\n                $this->app->dataStorage->insert('assets', $assets);\n            }\n        }\n\n        $this->app->trigger('assets.uploaded', [$assets]);\n\n        return $assets;\n    },\n\n    'remove' => function(mixed $assets) {\n\n        $assets = isset($assets[0]) ? $assets : [$assets];\n\n        foreach ($assets as &$asset) {\n\n            if (is_string($asset)) {\n                $asset = $this->app->dataStorage->findOne('assets', ['_id' => $asset]);\n            }\n\n            if (!isset($asset['_id'])) continue;\n\n            if (!isset($asset['path'])) {\n                $asset = $this->app->dataStorage->findOne('assets', ['_id' => $asset['_id']]);\n            }\n\n            if (!$asset) continue;\n\n            $this->app->dataStorage->remove('assets', ['_id' => $asset['_id']]);\n\n            if ($this->app->fileStorage->fileExists('uploads://'.trim($asset['path'], '/'))) {\n                $this->app->fileStorage->delete('uploads://'.trim($asset['path'], '/'));\n            }\n\n            $this->app->trigger('assets.asset.remove', [$asset]);\n        }\n\n        $this->app->trigger('assets.remove', [$assets]);\n\n        return $assets;\n    },\n\n    'thumbnail' => function(array $options = []) {\n        return $this->app->helper('asset')->thumbnail($options);\n    }\n]);\n</Code>"
                }
            ],
            "url": "https://github.com/cockpit-hq/cockpit/commit/039a00cc310bff128ca6e6c1c46c6fbad0385c2c",
            "description": "Cross-site Scripting (XSS) - Stored in GitHub repository cockpit-hq/cockpit prior to 2.6.3.",
            "date": "2023-08-06",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-79\"],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-79"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2023-4196",
            "ground_truth_CWEs": [
                "CWE-79"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": true,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Combodo iTop is an open source, web-based IT service management platform. Prior to versions 2.7.8 and 3.0.2-1, a user who can log in on iTop is able to take over any account just by knowing the account's username. This issue is fixed in versions 2.7.8 and 3.0.2-1.\nFile: application/loginbasic.class.inc.php\nContent: \n<Code>\n<?php\n\nuse Combodo\\iTop\\Application\\Helper\\Session;\n\n/**\n * Class LoginBasic\n *\n * @copyright   Copyright (C) 2010-2021 Combodo SARL\n * @license     http://opensource.org/licenses/AGPL-3.0\n */\n\nclass LoginBasic extends AbstractLoginFSMExtension\n{\n\t/**\n\t * Return the list of supported login modes for this plugin\n\t *\n\t * @return array of supported login modes\n\t */\n\tpublic function ListSupportedLoginModes()\n\t{\n\t\treturn array('basic');\n\t}\n\n\tprotected function OnModeDetection(&$iErrorCode)\n\t{\n\t\tif (!Session::IsSet('login_mode'))\n\t\t{\n\t\t\tif (isset($_SERVER['HTTP_AUTHORIZATION']) && !empty($_SERVER['HTTP_AUTHORIZATION']))\n\t\t\t{\n\t\t\t\tSession::Set('login_mode', 'basic');\n\t\t\t}\n\t\t\telseif (isset($_SERVER['REDIRECT_HTTP_AUTHORIZATION']) && !empty($_SERVER['REDIRECT_HTTP_AUTHORIZATION']))\n\t\t\t{\n\t\t\t\tSession::Set('login_mode', 'basic');\n\t\t\t}\n\t\t\telseif (isset($_SERVER['PHP_AUTH_USER']))\n\t\t\t{\n\t\t\t\tSession::Set('login_mode', 'basic');\n\t\t\t}\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnReadCredentials(&$iErrorCode)\n\t{\n\t\tif (!Session::IsSet('login_mode') || Session::Get('login_mode') == 'basic')\n\t\t{\n\t\t\tlist($sAuthUser) = $this->GetAuthUserAndPassword();\n\t\t\tSession::Set('login_temp_auth_user', $sAuthUser);\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\n\tprotected function OnCheckCredentials(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'basic')\n\t\t{\n\t\t\tlist($sAuthUser, $sAuthPwd) = $this->GetAuthUserAndPassword();\n\t\t\tif (!UserRights::CheckCredentials($sAuthUser, $sAuthPwd, Session::Get('login_mode'), 'internal'))\n\t\t\t{\n\t\t\t\t$_SESSION['auth_user'] = $sAuthUser;\n\t\t\t\t$iErrorCode = LoginWebPage::EXIT_CODE_WRONGCREDENTIALS;\n\t\t\t\treturn LoginWebPage::LOGIN_FSM_ERROR;\n\t\t\t}\n\t\t\tSession::Set('auth_user', $sAuthUser);\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnCredentialsOK(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'basic')\n\t\t{\n\t\t\tLoginWebPage::OnLoginSuccess(Session::Get('auth_user'), 'internal', Session::Get('login_mode'));\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnError(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'basic')\n\t\t{\n\t\t\tLoginWebPage::HTTP401Error();\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnConnected(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'basic')\n\t\t{\n\t\t\tSession::Set('can_logoff', true);\n\t\t\treturn LoginWebPage::CheckLoggedUser($iErrorCode);\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprivate function GetAuthUserAndPassword()\n\t{\n\t\t$sAuthUser = '';\n\t\t$sAuthPwd = null;\n\t\t$sAuthorization = '';\n\t\tif (isset($_SERVER['HTTP_AUTHORIZATION']) && !empty($_SERVER['HTTP_AUTHORIZATION']))\n\t\t{\n\t\t\t$sAuthorization = $_SERVER['HTTP_AUTHORIZATION'];\n\t\t}\n\t\telseif (isset($_SERVER['REDIRECT_HTTP_AUTHORIZATION']) && !empty($_SERVER['REDIRECT_HTTP_AUTHORIZATION']))\n\t\t{\n\t\t\t$sAuthorization = $_SERVER['REDIRECT_HTTP_AUTHORIZATION'];\n\t\t}\n\n\t\tif (!empty($sAuthorization))\n\t\t{\n\t\t\tlist($sAuthUser, $sAuthPwd) = explode(':', base64_decode(substr($sAuthorization, 6)));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (isset($_SERVER['PHP_AUTH_USER']))\n\t\t\t{\n\t\t\t\t$sAuthUser = $_SERVER['PHP_AUTH_USER'];\n\t\t\t\t// Unfortunately, the RFC is not clear about the encoding...\n\t\t\t\t// IE and FF supply the user and password encoded in ISO-8859-1 whereas Chrome provides them encoded in UTF-8\n\t\t\t\t// So let's try to guess if it's an UTF-8 string or not... fortunately all encodings share the same ASCII base\n\t\t\t\tif (!LoginWebPage::LooksLikeUTF8($sAuthUser))\n\t\t\t\t{\n\t\t\t\t\t// Does not look like and UTF-8 string, try to convert it from iso-8859-1 to UTF-8\n\t\t\t\t\t// Supposed to be harmless in case of a plain ASCII string...\n\t\t\t\t\t$sAuthUser = iconv('iso-8859-1', 'utf-8', $sAuthUser);\n\t\t\t\t}\n\t\t\t\t$sAuthPwd = $_SERVER['PHP_AUTH_PW'];\n\t\t\t\tif (!LoginWebPage::LooksLikeUTF8($sAuthPwd))\n\t\t\t\t{\n\t\t\t\t\t// Does not look like and UTF-8 string, try to convert it from iso-8859-1 to UTF-8\n\t\t\t\t\t// Supposed to be harmless in case of a plain ASCII string...\n\t\t\t\t\t$sAuthPwd = iconv('iso-8859-1', 'utf-8', $sAuthPwd);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn array($sAuthUser, $sAuthPwd);\n\t}\n}\n</Code>\n\nFile: application/loginexternal.class.inc.php\nContent: \n<Code>\n<?php\n\nuse Combodo\\iTop\\Application\\Helper\\Session;\n\n/**\n * Class LoginExternal\n *\n * @copyright   Copyright (C) 2010-2021 Combodo SARL\n * @license     http://opensource.org/licenses/AGPL-3.0\n */\n\nclass LoginExternal extends AbstractLoginFSMExtension\n{\n\n\t/**\n\t * Return the list of supported login modes for this plugin\n\t *\n\t * @return array of supported login modes\n\t */\n\tpublic function ListSupportedLoginModes()\n\t{\n\t\treturn array('external');\n\t}\n\n\tprotected function OnModeDetection(&$iErrorCode)\n\t{\n\t\tif (!Session::IsSet('login_mode'))\n\t\t{\n\t\t\t$sAuthUser = $this->GetAuthUser();\n\t\t\tif ($sAuthUser && (strlen($sAuthUser) > 0))\n\t\t\t{\n\t\t\t\tSession::Set('login_mode', 'external');\n\t\t\t}\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnCheckCredentials(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'external')\n\t\t{\n\t\t\t$sAuthUser = $this->GetAuthUser();\n\t\t\tif (!UserRights::CheckCredentials($sAuthUser, '', Session::Get('login_mode'), 'external'))\n\t\t\t{\n\t\t\t\t$_SESSION['auth_user'] = $sAuthUser;\n\t\t\t\t$iErrorCode = LoginWebPage::EXIT_CODE_WRONGCREDENTIALS;\n\t\t\t\treturn LoginWebPage::LOGIN_FSM_ERROR;\n\t\t\t}\n\t\t\tSession::Set('auth_user', $sAuthUser);\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnCredentialsOK(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'external')\n\t\t{\n\t\t\tLoginWebPage::OnLoginSuccess(Session::Get('auth_user'), 'external', Session::Get('login_mode'));\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnConnected(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'external')\n\t\t{\n\t\t\tSession::Set('can_logoff', false);\n\t\t\treturn LoginWebPage::CheckLoggedUser($iErrorCode);\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnError(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'external')\n\t\t{\n\t\t\tLoginWebPage::HTTP401Error();\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\t/**\n\t * @return bool\n\t */\n\tprivate function GetAuthUser()\n\t{\n\t\t$sExtAuthVar = MetaModel::GetConfig()->GetExternalAuthenticationVariable(); // In which variable is the info passed ?\n\t\teval('$sAuthUser = isset('.$sExtAuthVar.') ? '.$sExtAuthVar.' : false;'); // Retrieve the value\n\t\t/** @var string $sAuthUser */\n\t\treturn $sAuthUser; // Retrieve the value\n\t}\n}\n</Code>\n\nFile: application/loginform.class.inc.php\nContent: \n<Code>\n<?php\n\n/**\n * @copyright   Copyright (C) 2010-2021 Combodo SARL\n * @license     http://opensource.org/licenses/AGPL-3.0\n */\n\nuse Combodo\\iTop\\Application\\Helper\\Session;\n\n/**\n * Class LoginForm\n *\n * @since 2.7.0\n */\nclass LoginForm extends AbstractLoginFSMExtension implements iLoginUIExtension\n{\n\tprivate $bForceFormOnError = false;\n\n\t/**\n\t * Return the list of supported login modes for this plugin\n\t *\n\t * @return array of supported login modes\n\t */\n\tpublic function ListSupportedLoginModes()\n\t{\n\t\treturn array('form');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tprotected function OnReadCredentials(&$iErrorCode)\n\t{\n\t\tif (!Session::IsSet('login_mode') || Session::Get('login_mode') == 'form') {\n\t\t\t$sAuthUser = utils::ReadPostedParam('auth_user', '', 'raw_data');\n\t\t\t$sAuthPwd = utils::ReadPostedParam('auth_pwd', null, 'raw_data');\n\t\t\tif ($this->bForceFormOnError || empty($sAuthUser) || empty($sAuthPwd))\n\t\t\t{\n\t\t\t\tif (array_key_exists('HTTP_X_COMBODO_AJAX', $_SERVER))\n\t\t\t\t{\n\t\t\t\t\t// X-Combodo-Ajax is a special header automatically added to all ajax requests\n\t\t\t\t\t// Let's reply that we're currently logged-out\n\t\t\t\t\theader('HTTP/1.0 401 Unauthorized');\n\t\t\t\t\texit;\n\t\t\t\t}\n\n\t\t\t\t// No credentials yet, display the form\n\t\t\t\t$oPage = LoginWebPage::NewLoginWebPage();\n\t\t\t\t$oPage->DisplayLoginForm($this->bForceFormOnError);\n\t\t\t\t$oPage->output();\n\t\t\t\t$this->bForceFormOnError = false;\n\t\t\t\texit;\n\t\t\t}\n\t\t\tSession::Set('login_temp_auth_user', $sAuthUser);\n\t\t\tSession::Set('login_mode', 'form');\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tprotected function OnCheckCredentials(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'form')\n\t\t{\n\t\t\t$sAuthUser = utils::ReadPostedParam('auth_user', '', 'raw_data');\n\t\t\t$sAuthPwd = utils::ReadPostedParam('auth_pwd', null, 'raw_data');\n\t\t\tif (!UserRights::CheckCredentials($sAuthUser, $sAuthPwd, Session::Get('login_mode'), 'internal'))\n\t\t\t{\n\t\t\t\t$_SESSION['auth_user'] = $sAuthUser;\n\t\t\t\t$iErrorCode = LoginWebPage::EXIT_CODE_WRONGCREDENTIALS;\n\t\t\t\treturn LoginWebPage::LOGIN_FSM_ERROR;\n\t\t\t}\n\t\t\tSession::Set('auth_user', $sAuthUser);\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tprotected function OnCredentialsOK(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'form')\n\t\t{\n\t\t\t// Store 'auth_user' in session for further use\n\t\t\tLoginWebPage::OnLoginSuccess(Session::Get('auth_user'), 'internal', Session::Get('login_mode'));\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tprotected function OnError(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'form')\n\t\t{\n\t\t\t$this->bForceFormOnError = true;\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tprotected function OnConnected(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'form')\n\t\t{\n\t\t\tSession::Set('can_logoff', true);\n\t\t\treturn LoginWebPage::CheckLoggedUser($iErrorCode);\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @throws \\Exception\n\t */\n\tpublic function GetTwigContext()\n\t{\n\t\t$oLoginContext = new LoginTwigContext();\n\t\t$oLoginContext->AddPostedVar('auth_user');\n\t\t$oLoginContext->AddPostedVar('auth_pwd');\n\n\t\t$sAuthUser = utils::ReadParam('auth_user', '', true, 'raw_data');\n\t\t$sAuthPwd = utils::ReadParam('suggest_pwd', '', true, 'raw_data');\n\n\t\t$aData = array(\n\t\t\t'sAuthUser' => $sAuthUser,\n\t\t\t'sAuthPwd' => $sAuthPwd,\n\t\t);\n\t\t$oLoginContext->AddBlockExtension('login_input', new LoginBlockExtension('extensionblock/loginforminput.html.twig', $aData));\n\t\t$oLoginContext->AddBlockExtension('login_submit', new LoginBlockExtension('extensionblock/loginformsubmit.html.twig'));\n\t\t$oLoginContext->AddBlockExtension('login_form_footer', new LoginBlockExtension('extensionblock/loginformfooter.html.twig'));\n\n\t\t$bEnableResetPassword = MetaModel::GetConfig()->Get('forgot_password');\n\t\t$sResetPasswordUrl = utils::GetAbsoluteUrlAppRoot() . 'pages/UI.php?loginop=forgot_pwd';\n\t\t$aData = array(\n\t\t\t'bEnableResetPassword' => $bEnableResetPassword,\n\t\t\t'sResetPasswordUrl' => $sResetPasswordUrl,\n\t\t);\n\t\t$oLoginContext->AddBlockExtension('login_links', new LoginBlockExtension('extensionblock/loginformlinks.html.twig', $aData));\n\n\t\treturn $oLoginContext;\n\t}\n}\n</Code>\n\nFile: application/loginurl.class.inc.php\nContent: \n<Code>\n<?php\n\nuse Combodo\\iTop\\Application\\Helper\\Session;\n\n/**\n * Class LoginURL\n *\n * @copyright   Copyright (C) 2010-2021 Combodo SARL\n * @license     http://opensource.org/licenses/AGPL-3.0\n */\n\nclass LoginURL extends AbstractLoginFSMExtension\n{\n\t/**\n\t * @var bool\n\t */\n\tprivate $bErrorOccurred = false;\n\n\t/**\n\t * Return the list of supported login modes for this plugin\n\t *\n\t * @return array of supported login modes\n\t */\n\tpublic function ListSupportedLoginModes()\n\t{\n\t\treturn array('url');\n\t}\n\n\tprotected function OnModeDetection(&$iErrorCode)\n\t{\n\t\tif (!Session::IsSet('login_mode') && !$this->bErrorOccurred)\n\t\t{\n\t\t\t$sAuthUser = utils::ReadParam('auth_user', '', false, 'raw_data');\n\t\t\t$sAuthPwd = utils::ReadParam('auth_pwd', null, false, 'raw_data');\n\t\t\tif (!empty($sAuthUser) && !empty($sAuthPwd))\n\t\t\t{\n\t\t\t\tSession::Set('login_mode', 'url');\n\t\t\t}\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnReadCredentials(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'url')\n\t\t{\n\t\t\tSession::Set('login_temp_auth_user', utils::ReadParam('auth_user', '', false, 'raw_data'));\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnCheckCredentials(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'url')\n\t\t{\n\t\t\t$sAuthUser = utils::ReadParam('auth_user', '', false, 'raw_data');\n\t\t\t$sAuthPwd = utils::ReadParam('auth_pwd', null, false, 'raw_data');\n\t\t\tif (!UserRights::CheckCredentials($sAuthUser, $sAuthPwd, Session::Get('login_mode'), 'internal'))\n\t\t\t{\n\t\t\t\t$_SESSION['auth_user'] = $sAuthUser;\n\t\t\t\t$iErrorCode = LoginWebPage::EXIT_CODE_WRONGCREDENTIALS;\n\t\t\t\treturn LoginWebPage::LOGIN_FSM_ERROR;\n\t\t\t}\n\t\t\tSession::Set('auth_user', $sAuthUser);\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnCredentialsOK(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'url')\n\t\t{\n\t\t\tLoginWebPage::OnLoginSuccess(Session::Get('auth_user'), 'internal', Session::Get('login_mode'));\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnError(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'url')\n\t\t{\n\t\t\t$this->bErrorOccurred = true;\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n\n\tprotected function OnConnected(&$iErrorCode)\n\t{\n\t\tif (Session::Get('login_mode') == 'url')\n\t\t{\n\t\t\tSession::Set('can_logoff', true);\n\t\t\treturn LoginWebPage::CheckLoggedUser($iErrorCode);\n\t\t}\n\t\treturn LoginWebPage::LOGIN_FSM_CONTINUE;\n\t}\n}\n</Code>"
                }
            ],
            "url": "https://github.com/Combodo/iTop/commit/bdebea62b642622ed71410b26c81e8537e6e58fa",
            "description": "Combodo iTop is an open source, web-based IT service management platform. Prior to versions 2.7.8 and 3.0.2-1, a user who can log in on iTop is able to take over any account just by knowing the account's username. This issue is fixed in versions 2.7.8 and 3.0.2-1.",
            "date": "2023-03-14",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n    \"CWE_IDS\": [\"CWE-384\"],\n    \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-384"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2022-39214",
            "ground_truth_CWEs": [
                "CWE-863"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Additional info\nWHAT\n\ud83e\udd16 Generated by Copilot at 70275fe\nThis pull request fixes a bug in log sorting, adds a language filter for translations, improves the validation of sorting direction, and extends the sorting options for translation listings. The changes affect the files LogController.php, TranslationController.php, QueryParams.php, and Listing.php.\n\ud83e\udd16 Generated by Copilot at 70275fe\n\nSorting and filtering\ntranslation listing grows\nAutumn of bug fixes\n\nHOW\n\ud83e\udd16 Generated by Copilot at 70275fe\n\nFix a bug where sorting log entries by a custom column would fail if the column name contained special characters (link). Use the quoteIdentifier method of the database adapter to escape the column name in LogController.php.\nFile: bundles/AdminBundle/Controller/Admin/LogController.php\nContent: \n<Code>\n<?php\n\n/**\n * Pimcore\n *\n * This source file is available under two different licenses:\n * - GNU General Public License version 3 (GPLv3)\n * - Pimcore Commercial License (PCL)\n * Full copyright and license information is available in\n * LICENSE.md which is distributed with this source code.\n *\n *  @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n *  @license    http://www.pimcore.org/license     GPLv3 and PCL\n */\n\nnamespace Pimcore\\Bundle\\AdminBundle\\Controller\\Admin;\n\nuse Doctrine\\DBAL\\Connection;\nuse Doctrine\\DBAL\\Types\\Types;\nuse Pimcore\\Bundle\\AdminBundle\\Controller\\AdminController;\nuse Pimcore\\Bundle\\AdminBundle\\Helper\\QueryParams;\nuse Pimcore\\Controller\\KernelControllerEventInterface;\nuse Pimcore\\Log\\Handler\\ApplicationLoggerDb;\nuse Pimcore\\Tool\\Storage;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\HttpFoundation\\StreamedResponse;\nuse Symfony\\Component\\HttpKernel\\Event\\ControllerEvent;\nuse Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\n\n/**\n * @internal\n */\nclass LogController extends AdminController implements KernelControllerEventInterface\n{\n    /**\n     * @param ControllerEvent $event\n     */\n    public function onKernelControllerEvent(ControllerEvent $event)\n    {\n        if (!$this->getAdminUser()->isAllowed('application_logging')) {\n            throw new AccessDeniedHttpException(\"Permission denied, user needs 'application_logging' permission.\");\n        }\n    }\n\n    /**\n     * @Route(\"/log/show\", name=\"pimcore_admin_log_show\", methods={\"GET\", \"POST\"})\n     *\n     * @param Request $request\n     *\n     * @return JsonResponse\n     */\n    public function showAction(Request $request, Connection $db)\n    {\n        $qb = $db->createQueryBuilder();\n        $qb\n            ->select('*')\n            ->from(ApplicationLoggerDb::TABLE_NAME)\n            ->setFirstResult($request->get('start', 0))\n            ->setMaxResults($request->get('limit', 50));\n\n        $sortingSettings = QueryParams::extractSortingSettings(array_merge(\n            $request->request->all(),\n            $request->query->all()\n        ));\n\n        if ($sortingSettings['orderKey']) {\n            $qb->orderBy($sortingSettings['orderKey'], $sortingSettings['order']);\n        } else {\n            $qb->orderBy('id', 'DESC');\n        }\n\n        $priority = $request->get('priority');\n        if(!empty($priority)) {\n            $qb->andWhere($qb->expr()->eq('priority', ':priority'));\n            $qb->setParameter('priority', $priority);\n        }\n\n        if ($fromDate = $this->parseDateObject($request->get('fromDate'), $request->get('fromTime'))) {\n            $qb->andWhere('timestamp > :fromDate');\n            $qb->setParameter('fromDate', $fromDate, Types::DATETIME_MUTABLE);\n        }\n\n        if ($toDate = $this->parseDateObject($request->get('toDate'), $request->get('toTime'))) {\n            $qb->andWhere('timestamp <= :toDate');\n            $qb->setParameter('toDate', $toDate, Types::DATETIME_MUTABLE);\n        }\n\n        if (!empty($component = $request->get('component'))) {\n            $qb->andWhere('component = ' . $qb->createNamedParameter($component));\n        }\n\n        if (!empty($relatedObject = $request->get('relatedobject'))) {\n            $qb->andWhere('relatedobject = ' . $qb->createNamedParameter($relatedObject));\n        }\n\n        if (!empty($message = $request->get('message'))) {\n            $qb->andWhere('message LIKE ' . $qb->createNamedParameter('%' . $message . '%'));\n        }\n\n        if (!empty($pid = $request->get('pid'))) {\n            $qb->andWhere('pid LIKE ' . $qb->createNamedParameter('%' . $pid . '%'));\n        }\n\n        $totalQb = clone $qb;\n        $totalQb->setMaxResults(null)\n            ->setFirstResult(0)\n            ->select('COUNT(id) as count');\n        $total = $totalQb->execute()->fetch();\n        $total = (int) $total['count'];\n\n        $stmt = $qb->execute();\n        $result = $stmt->fetchAllAssociative();\n\n        $logEntries = [];\n        foreach ($result as $row) {\n            $fileobject = null;\n            if ($row['fileobject']) {\n                $fileobject = str_replace(PIMCORE_PROJECT_ROOT, '', $row['fileobject']);\n            }\n\n            $logEntry = [\n                'id' => $row['id'],\n                'pid' => $row['pid'],\n                'message' => $row['message'],\n                'timestamp' => $row['timestamp'],\n                'priority' => $row['priority'],\n                'fileobject' => $fileobject,\n                'relatedobject' => $row['relatedobject'],\n                'relatedobjecttype' => $row['relatedobjecttype'],\n                'component' => $row['component'],\n                'source' => $row['source'],\n            ];\n\n            $logEntries[] = $logEntry;\n        }\n\n        return $this->adminJson([\n            'p_totalCount' => $total,\n            'p_results' => $logEntries,\n        ]);\n    }\n\n    /**\n     * @param string|null $date\n     * @param string|null $time\n     *\n     * @return \\DateTime|null\n     */\n    private function parseDateObject($date = null, $time = null)\n    {\n        if (empty($date)) {\n            return null;\n        }\n\n        $pattern = '/^(?P<date>\\d{4}\\-\\d{2}\\-\\d{2})T(?P<time>\\d{2}:\\d{2}:\\d{2})$/';\n\n        $dateTime = null;\n        if (preg_match($pattern, $date, $dateMatches)) {\n            if (!empty($time) && preg_match($pattern, $time, $timeMatches)) {\n                $dateTime = new \\DateTime(sprintf('%sT%s', $dateMatches['date'], $timeMatches['time']));\n            } else {\n                $dateTime = new \\DateTime($date);\n            }\n        }\n\n        return $dateTime;\n    }\n\n    /**\n     * @Route(\"/log/priority-json\", name=\"pimcore_admin_log_priorityjson\", methods={\"GET\"})\n     *\n     * @param Request $request\n     *\n     * @return JsonResponse\n     */\n    public function priorityJsonAction(Request $request)\n    {\n        $priorities[] = ['key' => '', 'value' => '-'];\n        foreach (ApplicationLoggerDb::getPriorities() as $key => $p) {\n            $priorities[] = ['key' => $key, 'value' => $p];\n        }\n\n        return $this->adminJson(['priorities' => $priorities]);\n    }\n\n    /**\n     * @Route(\"/log/component-json\", name=\"pimcore_admin_log_componentjson\", methods={\"GET\"})\n     *\n     * @param Request $request\n     *\n     * @return JsonResponse\n     */\n    public function componentJsonAction(Request $request)\n    {\n        $components[] = ['key' => '', 'value' => '-'];\n        foreach (ApplicationLoggerDb::getComponents() as $p) {\n            $components[] = ['key' => $p, 'value' => $p];\n        }\n\n        return $this->adminJson(['components' => $components]);\n    }\n\n    /**\n     * @Route(\"/log/show-file-object\", name=\"pimcore_admin_log_showfileobject\", methods={\"GET\"})\n     *\n     * @param Request $request\n     *\n     * @return Response\n     *\n     * @throws \\Exception\n     */\n    public function showFileObjectAction(Request $request)\n    {\n        $filePath = $request->get('filePath');\n        $storage = Storage::get('application_log');\n\n        if ($storage->fileExists($filePath)) {\n            $fileHandle = $storage->readStream($filePath);\n            $response = $this->getResponseForFileHandle($fileHandle);\n            $response->headers->set('Content-Type', 'text/plain');\n        } else {\n            // Fallback to local path when file is not found in flysystem that might still be using the constant\n\n            if (!filter_var($filePath, FILTER_VALIDATE_URL)) {\n                if (!file_exists($filePath)) {\n                    $filePath = PIMCORE_PROJECT_ROOT.DIRECTORY_SEPARATOR.$filePath;\n                }\n                $filePath = realpath($filePath);\n                $fileObjectPath = realpath(PIMCORE_LOG_FILEOBJECT_DIRECTORY);\n            } else {\n                $fileObjectPath = PIMCORE_LOG_FILEOBJECT_DIRECTORY;\n            }\n\n            if (!str_starts_with($filePath, $fileObjectPath)) {\n                throw new AccessDeniedHttpException('Accessing file out of scope');\n            }\n\n            if (file_exists($filePath)) {\n                $fileHandle = fopen($filePath, 'rb');\n                $response = $this->getResponseForFileHandle($fileHandle);\n                $response->headers->set('Content-Type', 'text/plain');\n            } else {\n                $response = new Response();\n                $response->headers->set('Content-Type', 'text/plain');\n                $response->setContent('Path `'.$filePath.'` not found.');\n                $response->setStatusCode(404);\n            }\n        }\n\n        return $response;\n    }\n\n    /**\n     * @param resource $fileHandle\n     *\n     * @return StreamedResponse\n     */\n    private function getResponseForFileHandle($fileHandle)\n    {\n        return new StreamedResponse(\n            static function () use ($fileHandle) {\n                while (!feof($fileHandle)) {\n                    echo fread($fileHandle, 8192);\n                }\n                fclose($fileHandle);\n            }\n        );\n    }\n}\n</Code>\n\nFile: bundles/AdminBundle/Helper/QueryParams.php\nContent: \n<Code>\n<?php\n\n/**\n * Pimcore\n *\n * This source file is available under two different licenses:\n * - GNU General Public License version 3 (GPLv3)\n * - Pimcore Commercial License (PCL)\n * Full copyright and license information is available in\n * LICENSE.md which is distributed with this source code.\n *\n *  @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n *  @license    http://www.pimcore.org/license     GPLv3 and PCL\n */\n\nnamespace Pimcore\\Bundle\\AdminBundle\\Helper;\n\nuse Carbon\\Carbon;\n\n/**\n * @internal\n */\nclass QueryParams\n{\n    /**\n     * @param array $params\n     *\n     * @return array  [orderKey => null|string, order => null|string]\n     */\n    public static function extractSortingSettings($params)\n    {\n        $orderKey = null;\n        $order = null;\n\n        $sortParam = isset($params['sort']) ? $params['sort'] : false;\n        if ($sortParam) {\n            $sortParam = json_decode($sortParam, true);\n            $sortParam = $sortParam[0];\n\n            if (substr($sortParam['property'], 0, 1) != '~') {\n                $orderKey = $sortParam['property'];\n                $order = $sortParam['direction'];\n            } else {\n                $orderKey = $sortParam['property'];\n                $order = $sortParam['direction'];\n\n                $parts = explode('~', $orderKey);\n\n                $fieldname = $parts[2];\n                $groupKeyId = $parts[3];\n                $groupKeyId = explode('-', $groupKeyId);\n                $groupId = (int) $groupKeyId[0];\n                $keyid = (int) $groupKeyId[1];\n\n                return ['orderKey' => $sortParam['property'], 'fieldname' => $fieldname, 'groupId' => $groupId, 'keyId' => $keyid, 'order' => $order, 'isFeature' => 1];\n            }\n        }\n\n        return ['orderKey' => $orderKey, 'order' => $order];\n    }\n\n    /**\n     * @param string $param\n     *\n     * @return int\n     */\n    public static function getRecordIdForGridRequest($param)\n    {\n        $param = json_decode($param, true);\n\n        return $param['id'];\n    }\n\n    /**\n     * Creates a condition string from the passed ExtJs filter definitions\n     *\n     * @param string $filterString\n     * @param array $matchExact\n     * @param bool $returnString\n     * @param array $callbacks\n     *\n     * @return array|string\n     *\n     * @throws \\Exception\n     */\n    public static function getFilterCondition($filterString, $matchExact = ['id', 'o_id'], $returnString = true, $callbacks = [])\n    {\n        if (!$filterString) {\n            return '';\n        }\n        $conditions = [];\n\n        $filters = json_decode($filterString);\n        $db = \\Pimcore\\Db::get();\n        foreach ($filters as $f) {\n            if ($f->type == 'string') {\n                if (in_array($f->property, $matchExact)) {\n                    $conditions[$f->property][] = ' ' . $db->quoteIdentifier($f->property) . ' = ' . $db->quote($f->value) . ' ';\n                } else {\n                    $conditions[$f->property][] = ' ' . $db->quoteIdentifier($f->property) . ' LIKE ' . $db->quote('%' . $f->value . '%') . ' ';\n                }\n            } elseif ($f->type == 'numeric') {\n                $symbol = null;\n                if ($f->operator == 'eq') {\n                    $symbol = ' = ';\n                } elseif ($f->operator == 'lt') {\n                    $symbol = ' < ';\n                } elseif ($f->operator == 'gt') {\n                    $symbol = ' > ';\n                }\n                $conditions[$f->property][] = ' ' . $db->quoteIdentifier($f->property)  . ' ' . $symbol . $db->quote($f->value) . ' ';\n            } elseif ($f->type == 'date') {\n                /**\n                 * make sure you pass the date as timestamp\n                 *\n                 * filter: {type : 'date',dateFormat: 'timestamp'}\n                 */\n                $date = Carbon::createFromTimestamp($f->value)->setTime(0, 0, 0);\n\n                if ($f->operator == 'eq') {\n                    $conditions[$f->property][] = ' ' . $f->property . ' >= ' . $db->quote($date->getTimestamp());\n                    $conditions[$f->property][] = ' ' . $f->property . ' <= ' . $db->quote($date->addDay()->subSecond()->getTimestamp());\n                } elseif ($f->operator == 'lt') {\n                    $conditions[$f->property][] = ' ' . $f->property . ' < ' . $db->quote($date->getTimestamp());\n                } elseif ($f->operator == 'gt') {\n                    $conditions[$f->property][] = ' ' . $f->property . ' > ' . $db->quote($date->addDay()->subSecond()->getTimestamp());\n                }\n            } else {\n                throw new \\Exception('Filer of type ' . $f->type . ' not jet supported.');\n            }\n        }\n\n        $conditionsGrouped = [];\n        foreach ($conditions as $fieldName => $fieldConditions) {\n            if (count($fieldConditions) > 1) {\n                $conditionsGrouped[$fieldName] = ' (' . implode(' AND ', $fieldConditions) . ') ';\n            } else {\n                $conditionsGrouped[$fieldName] = $fieldConditions[0];\n            }\n        }\n        if ($returnString) {\n            return implode(' OR ', $conditionsGrouped);\n        } else {\n            return $conditionsGrouped;\n        }\n    }\n}\n</Code>"
                }
            ],
            "url": "https://github.com/pimcore/pimcore/commit/a06ce0abdba19ae0eefc38b035e677f8f0c2bce9",
            "description": " SQL Injection in GitHub repository pimcore/pimcore prior to 10.5.24.",
            "date": "2023-07-14",
            "github_description": "Additional info\nWHAT\n\ud83e\udd16 Generated by Copilot at 70275fe\nThis pull request fixes a bug in log sorting, adds a language filter for translations, improves the validation of sorting direction, and extends the sorting options for translation listings. The changes affect the files LogController.php, TranslationController.php, QueryParams.php, and Listing.php.\n\ud83e\udd16 Generated by Copilot at 70275fe\n\nSorting and filtering\ntranslation listing grows\nAutumn of bug fixes\n\nHOW\n\ud83e\udd16 Generated by Copilot at 70275fe\n\nFix a bug where sorting log entries by a custom column would fail if the column name contained special characters (link). Use the quoteIdentifier method of the database adapter to escape the column name in LogController.php.",
            "llm_raw_output": "{\n     \"CWE_IDS\": [\"CWE-89\"],\n     \"severity\": \"low\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-89"
                ],
                "severity": "LOW"
            },
            "ground_truth_CVE": "CVE-2023-3673",
            "ground_truth_CWEs": [
                "CWE-89"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: In the Linux kernel before 5.19, drivers/gpu/drm/arm/malidp_planes.c misinterprets the get_sg_table return value (expects it to be NULL in the error case, whereas it is actually an error pointer).\nFile: drivers/gpu/drm/arm/malidp_planes.c\nContent: \n<Code>\n// SPDX-License-Identifier: GPL-2.0-only\n/*\n * (C) COPYRIGHT 2016 ARM Limited. All rights reserved.\n * Author: Liviu Dudau <Liviu.Dudau@arm.com>\n *\n * ARM Mali DP plane manipulation routines.\n */\n\n#include <linux/iommu.h>\n#include <linux/platform_device.h>\n\n#include <drm/drm_atomic.h>\n#include <drm/drm_atomic_helper.h>\n#include <drm/drm_drv.h>\n#include <drm/drm_fb_cma_helper.h>\n#include <drm/drm_fourcc.h>\n#include <drm/drm_gem_cma_helper.h>\n#include <drm/drm_gem_framebuffer_helper.h>\n#include <drm/drm_plane_helper.h>\n#include <drm/drm_print.h>\n\n#include \"malidp_hw.h\"\n#include \"malidp_drv.h\"\n\n/* Layer specific register offsets */\n#define MALIDP_LAYER_FORMAT\t\t0x000\n#define   LAYER_FORMAT_MASK\t\t0x3f\n#define MALIDP_LAYER_CONTROL\t\t0x004\n#define   LAYER_ENABLE\t\t\t(1 << 0)\n#define   LAYER_FLOWCFG_MASK\t\t7\n#define   LAYER_FLOWCFG(x)\t\t(((x) & LAYER_FLOWCFG_MASK) << 1)\n#define     LAYER_FLOWCFG_SCALE_SE\t3\n#define   LAYER_ROT_OFFSET\t\t8\n#define   LAYER_H_FLIP\t\t\t(1 << 10)\n#define   LAYER_V_FLIP\t\t\t(1 << 11)\n#define   LAYER_ROT_MASK\t\t(0xf << 8)\n#define   LAYER_COMP_MASK\t\t(0x3 << 12)\n#define   LAYER_COMP_PIXEL\t\t(0x3 << 12)\n#define   LAYER_COMP_PLANE\t\t(0x2 << 12)\n#define   LAYER_PMUL_ENABLE\t\t(0x1 << 14)\n#define   LAYER_ALPHA_OFFSET\t\t(16)\n#define   LAYER_ALPHA_MASK\t\t(0xff)\n#define   LAYER_ALPHA(x)\t\t(((x) & LAYER_ALPHA_MASK) << LAYER_ALPHA_OFFSET)\n#define MALIDP_LAYER_COMPOSE\t\t0x008\n#define MALIDP_LAYER_SIZE\t\t0x00c\n#define   LAYER_H_VAL(x)\t\t(((x) & 0x1fff) << 0)\n#define   LAYER_V_VAL(x)\t\t(((x) & 0x1fff) << 16)\n#define MALIDP_LAYER_COMP_SIZE\t\t0x010\n#define MALIDP_LAYER_OFFSET\t\t0x014\n#define MALIDP550_LS_ENABLE\t\t0x01c\n#define MALIDP550_LS_R1_IN_SIZE\t\t0x020\n\n#define MODIFIERS_COUNT_MAX\t\t15\n\n/*\n * This 4-entry look-up-table is used to determine the full 8-bit alpha value\n * for formats with 1- or 2-bit alpha channels.\n * We set it to give 100%/0% opacity for 1-bit formats and 100%/66%/33%/0%\n * opacity for 2-bit formats.\n */\n#define MALIDP_ALPHA_LUT 0xffaa5500\n\n/* page sizes the MMU prefetcher can support */\n#define MALIDP_MMU_PREFETCH_PARTIAL_PGSIZES\t(SZ_4K | SZ_64K)\n#define MALIDP_MMU_PREFETCH_FULL_PGSIZES\t(SZ_1M | SZ_2M)\n\n/* readahead for partial-frame prefetch */\n#define MALIDP_MMU_PREFETCH_READAHEAD\t\t8\n\nstatic void malidp_de_plane_destroy(struct drm_plane *plane)\n{\n\tstruct malidp_plane *mp = to_malidp_plane(plane);\n\n\tdrm_plane_cleanup(plane);\n\tkfree(mp);\n}\n\n/*\n * Replicate what the default ->reset hook does: free the state pointer and\n * allocate a new empty object. We just need enough space to store\n * a malidp_plane_state instead of a drm_plane_state.\n */\nstatic void malidp_plane_reset(struct drm_plane *plane)\n{\n\tstruct malidp_plane_state *state = to_malidp_plane_state(plane->state);\n\n\tif (state)\n\t\t__drm_atomic_helper_plane_destroy_state(&state->base);\n\tkfree(state);\n\tplane->state = NULL;\n\tstate = kzalloc(sizeof(*state), GFP_KERNEL);\n\tif (state)\n\t\t__drm_atomic_helper_plane_reset(plane, &state->base);\n}\n\nstatic struct\ndrm_plane_state *malidp_duplicate_plane_state(struct drm_plane *plane)\n{\n\tstruct malidp_plane_state *state, *m_state;\n\n\tif (!plane->state)\n\t\treturn NULL;\n\n\tstate = kmalloc(sizeof(*state), GFP_KERNEL);\n\tif (!state)\n\t\treturn NULL;\n\n\tm_state = to_malidp_plane_state(plane->state);\n\t__drm_atomic_helper_plane_duplicate_state(plane, &state->base);\n\tstate->rotmem_size = m_state->rotmem_size;\n\tstate->format = m_state->format;\n\tstate->n_planes = m_state->n_planes;\n\n\tstate->mmu_prefetch_mode = m_state->mmu_prefetch_mode;\n\tstate->mmu_prefetch_pgsize = m_state->mmu_prefetch_pgsize;\n\n\treturn &state->base;\n}\n\nstatic void malidp_destroy_plane_state(struct drm_plane *plane,\n\t\t\t\t       struct drm_plane_state *state)\n{\n\tstruct malidp_plane_state *m_state = to_malidp_plane_state(state);\n\n\t__drm_atomic_helper_plane_destroy_state(state);\n\tkfree(m_state);\n}\n\nstatic const char * const prefetch_mode_names[] = {\n\t[MALIDP_PREFETCH_MODE_NONE] = \"MMU_PREFETCH_NONE\",\n\t[MALIDP_PREFETCH_MODE_PARTIAL] = \"MMU_PREFETCH_PARTIAL\",\n\t[MALIDP_PREFETCH_MODE_FULL] = \"MMU_PREFETCH_FULL\",\n};\n\nstatic void malidp_plane_atomic_print_state(struct drm_printer *p,\n\t\t\t\t\t    const struct drm_plane_state *state)\n{\n\tstruct malidp_plane_state *ms = to_malidp_plane_state(state);\n\n\tdrm_printf(p, \"\\trotmem_size=%u\\n\", ms->rotmem_size);\n\tdrm_printf(p, \"\\tformat_id=%u\\n\", ms->format);\n\tdrm_printf(p, \"\\tn_planes=%u\\n\", ms->n_planes);\n\tdrm_printf(p, \"\\tmmu_prefetch_mode=%s\\n\",\n\t\t   prefetch_mode_names[ms->mmu_prefetch_mode]);\n\tdrm_printf(p, \"\\tmmu_prefetch_pgsize=%d\\n\", ms->mmu_prefetch_pgsize);\n}\n\nbool malidp_format_mod_supported(struct drm_device *drm,\n\t\t\t\t u32 format, u64 modifier)\n{\n\tconst struct drm_format_info *info;\n\tconst u64 *modifiers;\n\tstruct malidp_drm *malidp = drm->dev_private;\n\tconst struct malidp_hw_regmap *map = &malidp->dev->hw->map;\n\n\tif (WARN_ON(modifier == DRM_FORMAT_MOD_INVALID))\n\t\treturn false;\n\n\t/* Some pixel formats are supported without any modifier */\n\tif (modifier == DRM_FORMAT_MOD_LINEAR) {\n\t\t/*\n\t\t * However these pixel formats need to be supported with\n\t\t * modifiers only\n\t\t */\n\t\treturn !malidp_hw_format_is_afbc_only(format);\n\t}\n\n\tif (!fourcc_mod_is_vendor(modifier, ARM)) {\n\t\tDRM_ERROR(\"Unknown modifier (not Arm)\\n\");\n\t\treturn false;\n\t}\n\n\tif (modifier &\n\t    ~DRM_FORMAT_MOD_ARM_AFBC(AFBC_MOD_VALID_BITS)) {\n\t\tDRM_DEBUG_KMS(\"Unsupported modifiers\\n\");\n\t\treturn false;\n\t}\n\n\tmodifiers = malidp_format_modifiers;\n\n\t/* SPLIT buffers must use SPARSE layout */\n\tif (WARN_ON_ONCE((modifier & AFBC_SPLIT) && !(modifier & AFBC_SPARSE)))\n\t\treturn false;\n\n\t/* CBR only applies to YUV formats, where YTR should be always 0 */\n\tif (WARN_ON_ONCE((modifier & AFBC_CBR) && (modifier & AFBC_YTR)))\n\t\treturn false;\n\n\twhile (*modifiers != DRM_FORMAT_MOD_INVALID) {\n\t\tif (*modifiers == modifier)\n\t\t\tbreak;\n\n\t\tmodifiers++;\n\t}\n\n\t/* return false, if the modifier was not found */\n\tif (*modifiers == DRM_FORMAT_MOD_INVALID) {\n\t\tDRM_DEBUG_KMS(\"Unsupported modifier\\n\");\n\t\treturn false;\n\t}\n\n\tinfo = drm_format_info(format);\n\n\tif (info->num_planes != 1) {\n\t\tDRM_DEBUG_KMS(\"AFBC buffers expect one plane\\n\");\n\t\treturn false;\n\t}\n\n\tif (malidp_hw_format_is_linear_only(format) == true) {\n\t\tDRM_DEBUG_KMS(\"Given format (0x%x) is supported is linear mode only\\n\",\n\t\t\t      format);\n\t\treturn false;\n\t}\n\n\t/*\n\t * RGB formats need to provide YTR modifier and YUV formats should not\n\t * provide YTR modifier.\n\t */\n\tif (!(info->is_yuv) != !!(modifier & AFBC_FORMAT_MOD_YTR)) {\n\t\tDRM_DEBUG_KMS(\"AFBC_FORMAT_MOD_YTR is %s for %s formats\\n\",\n\t\t\t      info->is_yuv ? \"disallowed\" : \"mandatory\",\n\t\t\t      info->is_yuv ? \"YUV\" : \"RGB\");\n\t\treturn false;\n\t}\n\n\tif (modifier & AFBC_SPLIT) {\n\t\tif (!info->is_yuv) {\n\t\t\tif (info->cpp[0] <= 2) {\n\t\t\t\tDRM_DEBUG_KMS(\"RGB formats <= 16bpp are not supported with SPLIT\\n\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif ((info->hsub != 1) || (info->vsub != 1)) {\n\t\t\tif (!(format == DRM_FORMAT_YUV420_10BIT &&\n\t\t\t      (map->features & MALIDP_DEVICE_AFBC_YUV_420_10_SUPPORT_SPLIT))) {\n\t\t\t\tDRM_DEBUG_KMS(\"Formats which are sub-sampled should never be split\\n\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (modifier & AFBC_CBR) {\n\t\tif ((info->hsub == 1) || (info->vsub == 1)) {\n\t\t\tDRM_DEBUG_KMS(\"Formats which are not sub-sampled should not have CBR set\\n\");\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nstatic bool malidp_format_mod_supported_per_plane(struct drm_plane *plane,\n\t\t\t\t\t\t  u32 format, u64 modifier)\n{\n\treturn malidp_format_mod_supported(plane->dev, format, modifier);\n}\n\nstatic const struct drm_plane_funcs malidp_de_plane_funcs = {\n\t.update_plane = drm_atomic_helper_update_plane,\n\t.disable_plane = drm_atomic_helper_disable_plane,\n\t.destroy = malidp_de_plane_destroy,\n\t.reset = malidp_plane_reset,\n\t.atomic_duplicate_state = malidp_duplicate_plane_state,\n\t.atomic_destroy_state = malidp_destroy_plane_state,\n\t.atomic_print_state = malidp_plane_atomic_print_state,\n\t.format_mod_supported = malidp_format_mod_supported_per_plane,\n};\n\nstatic int malidp_se_check_scaling(struct malidp_plane *mp,\n\t\t\t\t   struct drm_plane_state *state)\n{\n\tstruct drm_crtc_state *crtc_state =\n\t\tdrm_atomic_get_existing_crtc_state(state->state, state->crtc);\n\tstruct malidp_crtc_state *mc;\n\tu32 src_w, src_h;\n\tint ret;\n\n\tif (!crtc_state)\n\t\treturn -EINVAL;\n\n\tmc = to_malidp_crtc_state(crtc_state);\n\n\tret = drm_atomic_helper_check_plane_state(state, crtc_state,\n\t\t\t\t\t\t  0, INT_MAX, true, true);\n\tif (ret)\n\t\treturn ret;\n\n\tif (state->rotation & MALIDP_ROTATED_MASK) {\n\t\tsrc_w = state->src_h >> 16;\n\t\tsrc_h = state->src_w >> 16;\n\t} else {\n\t\tsrc_w = state->src_w >> 16;\n\t\tsrc_h = state->src_h >> 16;\n\t}\n\n\tif ((state->crtc_w == src_w) && (state->crtc_h == src_h)) {\n\t\t/* Scaling not necessary for this plane. */\n\t\tmc->scaled_planes_mask &= ~(mp->layer->id);\n\t\treturn 0;\n\t}\n\n\tif (mp->layer->id & (DE_SMART | DE_GRAPHICS2))\n\t\treturn -EINVAL;\n\n\tmc->scaled_planes_mask |= mp->layer->id;\n\t/* Defer scaling requirements calculation to the crtc check. */\n\treturn 0;\n}\n\nstatic u32 malidp_get_pgsize_bitmap(struct malidp_plane *mp)\n{\n\tstruct iommu_domain *mmu_dom;\n\n\tmmu_dom = iommu_get_domain_for_dev(mp->base.dev->dev);\n\tif (mmu_dom)\n\t\treturn mmu_dom->pgsize_bitmap;\n\n\treturn 0;\n}\n\n/*\n * Check if the framebuffer is entirely made up of pages at least pgsize in\n * size. Only a heuristic: assumes that each scatterlist entry has been aligned\n * to the largest page size smaller than its length and that the MMU maps to\n * the largest page size possible.\n */\nstatic bool malidp_check_pages_threshold(struct malidp_plane_state *ms,\n\t\t\t\t\t u32 pgsize)\n{\n\tint i;\n\n\tfor (i = 0; i < ms->n_planes; i++) {\n\t\tstruct drm_gem_object *obj;\n\t\tstruct drm_gem_cma_object *cma_obj;\n\t\tstruct sg_table *sgt;\n\t\tstruct scatterlist *sgl;\n\n\t\tobj = drm_gem_fb_get_obj(ms->base.fb, i);\n\t\tcma_obj = to_drm_gem_cma_obj(obj);\n\n\t\tif (cma_obj->sgt)\n\t\t\tsgt = cma_obj->sgt;\n\t\telse\n\t\t\tsgt = obj->funcs->get_sg_table(obj);\n\n\t\tif (!sgt)\n\t\t\treturn false;\n\n\t\tsgl = sgt->sgl;\n\n\t\twhile (sgl) {\n\t\t\tif (sgl->length < pgsize) {\n\t\t\t\tif (!cma_obj->sgt)\n\t\t\t\t\tkfree(sgt);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tsgl = sg_next(sgl);\n\t\t}\n\t\tif (!cma_obj->sgt)\n\t\t\tkfree(sgt);\n\t}\n\n\treturn true;\n}\n\n/*\n * Check if it is possible to enable partial-frame MMU prefetch given the\n * current format, AFBC state and rotation.\n */\nstatic bool malidp_partial_prefetch_supported(u32 format, u64 modifier,\n\t\t\t\t\t      unsigned int rotation)\n{\n\tbool afbc, sparse;\n\n\t/* rotation and horizontal flip not supported for partial prefetch */\n\tif (rotation & (DRM_MODE_ROTATE_90 | DRM_MODE_ROTATE_180 |\n\t\t\tDRM_MODE_ROTATE_270 | DRM_MODE_REFLECT_X))\n\t\treturn false;\n\n\tafbc = modifier & DRM_FORMAT_MOD_ARM_AFBC(0);\n\tsparse = modifier & AFBC_FORMAT_MOD_SPARSE;\n\n\tswitch (format) {\n\tcase DRM_FORMAT_ARGB2101010:\n\tcase DRM_FORMAT_RGBA1010102:\n\tcase DRM_FORMAT_BGRA1010102:\n\tcase DRM_FORMAT_ARGB8888:\n\tcase DRM_FORMAT_RGBA8888:\n\tcase DRM_FORMAT_BGRA8888:\n\tcase DRM_FORMAT_XRGB8888:\n\tcase DRM_FORMAT_XBGR8888:\n\tcase DRM_FORMAT_RGBX8888:\n\tcase DRM_FORMAT_BGRX8888:\n\tcase DRM_FORMAT_RGB888:\n\tcase DRM_FORMAT_RGBA5551:\n\tcase DRM_FORMAT_RGB565:\n\t\t/* always supported */\n\t\treturn true;\n\n\tcase DRM_FORMAT_ABGR2101010:\n\tcase DRM_FORMAT_ABGR8888:\n\tcase DRM_FORMAT_ABGR1555:\n\tcase DRM_FORMAT_BGR565:\n\t\t/* supported, but if AFBC then must be sparse mode */\n\t\treturn (!afbc) || (afbc && sparse);\n\n\tcase DRM_FORMAT_BGR888:\n\t\t/* supported, but not for AFBC */\n\t\treturn !afbc;\n\n\tcase DRM_FORMAT_YUYV:\n\tcase DRM_FORMAT_UYVY:\n\tcase DRM_FORMAT_NV12:\n\tcase DRM_FORMAT_YUV420:\n\t\t/* not supported */\n\t\treturn false;\n\n\tdefault:\n\t\treturn false;\n\t}\n}\n\n/*\n * Select the preferred MMU prefetch mode. Full-frame prefetch is preferred as\n * long as the framebuffer is all large pages. Otherwise partial-frame prefetch\n * is selected as long as it is supported for the current format. The selected\n * page size for prefetch is returned in pgsize_bitmap.\n */\nstatic enum mmu_prefetch_mode malidp_mmu_prefetch_select_mode\n\t\t(struct malidp_plane_state *ms,\tu32 *pgsize_bitmap)\n{\n\tu32 pgsizes;\n\n\t/* get the full-frame prefetch page size(s) supported by the MMU */\n\tpgsizes = *pgsize_bitmap & MALIDP_MMU_PREFETCH_FULL_PGSIZES;\n\n\twhile (pgsizes) {\n\t\tu32 largest_pgsize = 1 << __fls(pgsizes);\n\n\t\tif (malidp_check_pages_threshold(ms, largest_pgsize)) {\n\t\t\t*pgsize_bitmap = largest_pgsize;\n\t\t\treturn MALIDP_PREFETCH_MODE_FULL;\n\t\t}\n\n\t\tpgsizes -= largest_pgsize;\n\t}\n\n\t/* get the partial-frame prefetch page size(s) supported by the MMU */\n\tpgsizes = *pgsize_bitmap & MALIDP_MMU_PREFETCH_PARTIAL_PGSIZES;\n\n\tif (malidp_partial_prefetch_supported(ms->base.fb->format->format,\n\t\t\t\t\t      ms->base.fb->modifier,\n\t\t\t\t\t      ms->base.rotation)) {\n\t\t/* partial prefetch using the smallest page size */\n\t\t*pgsize_bitmap = 1 << __ffs(pgsizes);\n\t\treturn MALIDP_PREFETCH_MODE_PARTIAL;\n\t}\n\t*pgsize_bitmap = 0;\n\treturn MALIDP_PREFETCH_MODE_NONE;\n}\n\nstatic u32 malidp_calc_mmu_control_value(enum mmu_prefetch_mode mode,\n\t\t\t\t\t u8 readahead, u8 n_planes, u32 pgsize)\n{\n\tu32 mmu_ctrl = 0;\n\n\tif (mode != MALIDP_PREFETCH_MODE_NONE) {\n\t\tmmu_ctrl |= MALIDP_MMU_CTRL_EN;\n\n\t\tif (mode == MALIDP_PREFETCH_MODE_PARTIAL) {\n\t\t\tmmu_ctrl |= MALIDP_MMU_CTRL_MODE;\n\t\t\tmmu_ctrl |= MALIDP_MMU_CTRL_PP_NUM_REQ(readahead);\n\t\t}\n\n\t\tif (pgsize == SZ_64K || pgsize == SZ_2M) {\n\t\t\tint i;\n\n\t\t\tfor (i = 0; i < n_planes; i++)\n\t\t\t\tmmu_ctrl |= MALIDP_MMU_CTRL_PX_PS(i);\n\t\t}\n\t}\n\n\treturn mmu_ctrl;\n}\n\nstatic void malidp_de_prefetch_settings(struct malidp_plane *mp,\n\t\t\t\t\tstruct malidp_plane_state *ms)\n{\n\tif (!mp->layer->mmu_ctrl_offset)\n\t\treturn;\n\n\t/* get the page sizes supported by the MMU */\n\tms->mmu_prefetch_pgsize = malidp_get_pgsize_bitmap(mp);\n\tms->mmu_prefetch_mode  =\n\t\tmalidp_mmu_prefetch_select_mode(ms, &ms->mmu_prefetch_pgsize);\n}\n\nstatic int malidp_de_plane_check(struct drm_plane *plane,\n\t\t\t\t struct drm_atomic_state *state)\n{\n\tstruct drm_plane_state *new_plane_state = drm_atomic_get_new_plane_state(state,\n\t\t\t\t\t\t\t\t\t\t plane);\n\tstruct malidp_plane *mp = to_malidp_plane(plane);\n\tstruct malidp_plane_state *ms = to_malidp_plane_state(new_plane_state);\n\tbool rotated = new_plane_state->rotation & MALIDP_ROTATED_MASK;\n\tstruct drm_framebuffer *fb;\n\tu16 pixel_alpha = new_plane_state->pixel_blend_mode;\n\tint i, ret;\n\tunsigned int block_w, block_h;\n\n\tif (!new_plane_state->crtc || WARN_ON(!new_plane_state->fb))\n\t\treturn 0;\n\n\tfb = new_plane_state->fb;\n\n\tms->format = malidp_hw_get_format_id(&mp->hwdev->hw->map,\n\t\t\t\t\t     mp->layer->id, fb->format->format,\n\t\t\t\t\t     !!fb->modifier);\n\tif (ms->format == MALIDP_INVALID_FORMAT_ID)\n\t\treturn -EINVAL;\n\n\tms->n_planes = fb->format->num_planes;\n\tfor (i = 0; i < ms->n_planes; i++) {\n\t\tu8 alignment = malidp_hw_get_pitch_align(mp->hwdev, rotated);\n\n\t\tif (((fb->pitches[i] * drm_format_info_block_height(fb->format, i))\n\t\t\t\t& (alignment - 1)) && !(fb->modifier)) {\n\t\t\tDRM_DEBUG_KMS(\"Invalid pitch %u for plane %d\\n\",\n\t\t\t\t      fb->pitches[i], i);\n\t\t\treturn -EINVAL;\n\t\t}\n\t}\n\n\tblock_w = drm_format_info_block_width(fb->format, 0);\n\tblock_h = drm_format_info_block_height(fb->format, 0);\n\tif (fb->width % block_w || fb->height % block_h) {\n\t\tDRM_DEBUG_KMS(\"Buffer width/height needs to be a multiple of tile sizes\");\n\t\treturn -EINVAL;\n\t}\n\tif ((new_plane_state->src_x >> 16) % block_w || (new_plane_state->src_y >> 16) % block_h) {\n\t\tDRM_DEBUG_KMS(\"Plane src_x/src_y needs to be a multiple of tile sizes\");\n\t\treturn -EINVAL;\n\t}\n\n\tif ((new_plane_state->crtc_w > mp->hwdev->max_line_size) ||\n\t    (new_plane_state->crtc_h > mp->hwdev->max_line_size) ||\n\t    (new_plane_state->crtc_w < mp->hwdev->min_line_size) ||\n\t    (new_plane_state->crtc_h < mp->hwdev->min_line_size))\n\t\treturn -EINVAL;\n\n\t/*\n\t * DP550/650 video layers can accept 3 plane formats only if\n\t * fb->pitches[1] == fb->pitches[2] since they don't have a\n\t * third plane stride register.\n\t */\n\tif (ms->n_planes == 3 &&\n\t    !(mp->hwdev->hw->features & MALIDP_DEVICE_LV_HAS_3_STRIDES) &&\n\t    (new_plane_state->fb->pitches[1] != new_plane_state->fb->pitches[2]))\n\t\treturn -EINVAL;\n\n\tret = malidp_se_check_scaling(mp, new_plane_state);\n\tif (ret)\n\t\treturn ret;\n\n\t/* validate the rotation constraints for each layer */\n\tif (new_plane_state->rotation != DRM_MODE_ROTATE_0) {\n\t\tif (mp->layer->rot == ROTATE_NONE)\n\t\t\treturn -EINVAL;\n\t\tif ((mp->layer->rot == ROTATE_COMPRESSED) && !(fb->modifier))\n\t\t\treturn -EINVAL;\n\t\t/*\n\t\t * packed RGB888 / BGR888 can't be rotated or flipped\n\t\t * unless they are stored in a compressed way\n\t\t */\n\t\tif ((fb->format->format == DRM_FORMAT_RGB888 ||\n\t\t     fb->format->format == DRM_FORMAT_BGR888) && !(fb->modifier))\n\t\t\treturn -EINVAL;\n\t}\n\n\t/* SMART layer does not support AFBC */\n\tif (mp->layer->id == DE_SMART && fb->modifier) {\n\t\tDRM_ERROR(\"AFBC framebuffer not supported in SMART layer\");\n\t\treturn -EINVAL;\n\t}\n\n\tms->rotmem_size = 0;\n\tif (new_plane_state->rotation & MALIDP_ROTATED_MASK) {\n\t\tint val;\n\n\t\tval = mp->hwdev->hw->rotmem_required(mp->hwdev, new_plane_state->crtc_w,\n\t\t\t\t\t\t     new_plane_state->crtc_h,\n\t\t\t\t\t\t     fb->format->format,\n\t\t\t\t\t\t     !!(fb->modifier));\n\t\tif (val < 0)\n\t\t\treturn val;\n\n\t\tms->rotmem_size = val;\n\t}\n\n\t/* HW can't support plane + pixel blending */\n\tif ((new_plane_state->alpha != DRM_BLEND_ALPHA_OPAQUE) &&\n\t    (pixel_alpha != DRM_MODE_BLEND_PIXEL_NONE) &&\n\t    fb->format->has_alpha)\n\t\treturn -EINVAL;\n\n\tmalidp_de_prefetch_settings(mp, ms);\n\n\treturn 0;\n}\n\nstatic void malidp_de_set_plane_pitches(struct malidp_plane *mp,\n\t\t\t\t\tint num_planes, unsigned int pitches[3])\n{\n\tint i;\n\tint num_strides = num_planes;\n\n\tif (!mp->layer->stride_offset)\n\t\treturn;\n\n\tif (num_planes == 3)\n\t\tnum_strides = (mp->hwdev->hw->features &\n\t\t\t       MALIDP_DEVICE_LV_HAS_3_STRIDES) ? 3 : 2;\n\n\t/*\n\t * The drm convention for pitch is that it needs to cover width * cpp,\n\t * but our hardware wants the pitch/stride to cover all rows included\n\t * in a tile.\n\t */\n\tfor (i = 0; i < num_strides; ++i) {\n\t\tunsigned int block_h = drm_format_info_block_height(mp->base.state->fb->format, i);\n\n\t\tmalidp_hw_write(mp->hwdev, pitches[i] * block_h,\n\t\t\t\tmp->layer->base +\n\t\t\t\tmp->layer->stride_offset + i * 4);\n\t}\n}\n\nstatic const s16\nmalidp_yuv2rgb_coeffs[][DRM_COLOR_RANGE_MAX][MALIDP_COLORADJ_NUM_COEFFS] = {\n\t[DRM_COLOR_YCBCR_BT601][DRM_COLOR_YCBCR_LIMITED_RANGE] = {\n\t\t1192,    0, 1634,\n\t\t1192, -401, -832,\n\t\t1192, 2066,    0,\n\t\t  64,  512,  512\n\t},\n\t[DRM_COLOR_YCBCR_BT601][DRM_COLOR_YCBCR_FULL_RANGE] = {\n\t\t1024,    0, 1436,\n\t\t1024, -352, -731,\n\t\t1024, 1815,    0,\n\t\t   0,  512,  512\n\t},\n\t[DRM_COLOR_YCBCR_BT709][DRM_COLOR_YCBCR_LIMITED_RANGE] = {\n\t\t1192,    0, 1836,\n\t\t1192, -218, -546,\n\t\t1192, 2163,    0,\n\t\t  64,  512,  512\n\t},\n\t[DRM_COLOR_YCBCR_BT709][DRM_COLOR_YCBCR_FULL_RANGE] = {\n\t\t1024,    0, 1613,\n\t\t1024, -192, -479,\n\t\t1024, 1900,    0,\n\t\t   0,  512,  512\n\t},\n\t[DRM_COLOR_YCBCR_BT2020][DRM_COLOR_YCBCR_LIMITED_RANGE] = {\n\t\t1024,    0, 1476,\n\t\t1024, -165, -572,\n\t\t1024, 1884,    0,\n\t\t   0,  512,  512\n\t},\n\t[DRM_COLOR_YCBCR_BT2020][DRM_COLOR_YCBCR_FULL_RANGE] = {\n\t\t1024,    0, 1510,\n\t\t1024, -168, -585,\n\t\t1024, 1927,    0,\n\t\t   0,  512,  512\n\t}\n};\n\nstatic void malidp_de_set_color_encoding(struct malidp_plane *plane,\n\t\t\t\t\t enum drm_color_encoding enc,\n\t\t\t\t\t enum drm_color_range range)\n{\n\tunsigned int i;\n\n\tfor (i = 0; i < MALIDP_COLORADJ_NUM_COEFFS; i++) {\n\t\t/* coefficients are signed, two's complement values */\n\t\tmalidp_hw_write(plane->hwdev, malidp_yuv2rgb_coeffs[enc][range][i],\n\t\t\t\tplane->layer->base + plane->layer->yuv2rgb_offset +\n\t\t\t\ti * 4);\n\t}\n}\n\nstatic void malidp_de_set_mmu_control(struct malidp_plane *mp,\n\t\t\t\t      struct malidp_plane_state *ms)\n{\n\tu32 mmu_ctrl;\n\n\t/* check hardware supports MMU prefetch */\n\tif (!mp->layer->mmu_ctrl_offset)\n\t\treturn;\n\n\tmmu_ctrl = malidp_calc_mmu_control_value(ms->mmu_prefetch_mode,\n\t\t\t\t\t\t MALIDP_MMU_PREFETCH_READAHEAD,\n\t\t\t\t\t\t ms->n_planes,\n\t\t\t\t\t\t ms->mmu_prefetch_pgsize);\n\n\tmalidp_hw_write(mp->hwdev, mmu_ctrl,\n\t\t\tmp->layer->base + mp->layer->mmu_ctrl_offset);\n}\n\nstatic void malidp_set_plane_base_addr(struct drm_framebuffer *fb,\n\t\t\t\t       struct malidp_plane *mp,\n\t\t\t\t       int plane_index)\n{\n\tdma_addr_t paddr;\n\tu16 ptr;\n\tstruct drm_plane *plane = &mp->base;\n\tbool afbc = fb->modifier ? true : false;\n\n\tptr = mp->layer->ptr + (plane_index << 4);\n\n\t/*\n\t * drm_fb_cma_get_gem_addr() alters the physical base address of the\n\t * framebuffer as per the plane's src_x, src_y co-ordinates (ie to\n\t * take care of source cropping).\n\t * For AFBC, this is not needed as the cropping is handled by _AD_CROP_H\n\t * and _AD_CROP_V registers.\n\t */\n\tif (!afbc) {\n\t\tpaddr = drm_fb_cma_get_gem_addr(fb, plane->state,\n\t\t\t\t\t\tplane_index);\n\t} else {\n\t\tstruct drm_gem_cma_object *obj;\n\n\t\tobj = drm_fb_cma_get_gem_obj(fb, plane_index);\n\n\t\tif (WARN_ON(!obj))\n\t\t\treturn;\n\t\tpaddr = obj->paddr;\n\t}\n\n\tmalidp_hw_write(mp->hwdev, lower_32_bits(paddr), ptr);\n\tmalidp_hw_write(mp->hwdev, upper_32_bits(paddr), ptr + 4);\n}\n\nstatic void malidp_de_set_plane_afbc(struct drm_plane *plane)\n{\n\tstruct malidp_plane *mp;\n\tu32 src_w, src_h, val = 0, src_x, src_y;\n\tstruct drm_framebuffer *fb = plane->state->fb;\n\n\tmp = to_malidp_plane(plane);\n\n\t/* no afbc_decoder_offset means AFBC is not supported on this plane */\n\tif (!mp->layer->afbc_decoder_offset)\n\t\treturn;\n\n\tif (!fb->modifier) {\n\t\tmalidp_hw_write(mp->hwdev, 0, mp->layer->afbc_decoder_offset);\n\t\treturn;\n\t}\n\n\t/* convert src values from Q16 fixed point to integer */\n\tsrc_w = plane->state->src_w >> 16;\n\tsrc_h = plane->state->src_h >> 16;\n\tsrc_x = plane->state->src_x >> 16;\n\tsrc_y = plane->state->src_y >> 16;\n\n\tval = ((fb->width - (src_x + src_w)) << MALIDP_AD_CROP_RIGHT_OFFSET) |\n\t\t   src_x;\n\tmalidp_hw_write(mp->hwdev, val,\n\t\t\tmp->layer->afbc_decoder_offset + MALIDP_AD_CROP_H);\n\n\tval = ((fb->height - (src_y + src_h)) << MALIDP_AD_CROP_BOTTOM_OFFSET) |\n\t\t   src_y;\n\tmalidp_hw_write(mp->hwdev, val,\n\t\t\tmp->layer->afbc_decoder_offset + MALIDP_AD_CROP_V);\n\n\tval = MALIDP_AD_EN;\n\tif (fb->modifier & AFBC_FORMAT_MOD_SPLIT)\n\t\tval |= MALIDP_AD_BS;\n\tif (fb->modifier & AFBC_FORMAT_MOD_YTR)\n\t\tval |= MALIDP_AD_YTR;\n\n\tmalidp_hw_write(mp->hwdev, val, mp->layer->afbc_decoder_offset);\n}\n\nstatic void malidp_de_plane_update(struct drm_plane *plane,\n\t\t\t\t   struct drm_atomic_state *state)\n{\n\tstruct drm_plane_state *old_state = drm_atomic_get_old_plane_state(state,\n\t\t\t\t\t\t\t\t\t   plane);\n\tstruct malidp_plane *mp;\n\tstruct malidp_plane_state *ms = to_malidp_plane_state(plane->state);\n\tstruct drm_plane_state *new_state = drm_atomic_get_new_plane_state(state,\n\t\t\t\t\t\t\t\t\t   plane);\n\tu16 pixel_alpha = new_state->pixel_blend_mode;\n\tu8 plane_alpha = new_state->alpha >> 8;\n\tu32 src_w, src_h, dest_w, dest_h, val;\n\tint i;\n\tstruct drm_framebuffer *fb = plane->state->fb;\n\n\tmp = to_malidp_plane(plane);\n\n\t/*\n\t * For AFBC framebuffer, use the framebuffer width and height for\n\t * configuring layer input size register.\n\t */\n\tif (fb->modifier) {\n\t\tsrc_w = fb->width;\n\t\tsrc_h = fb->height;\n\t} else {\n\t\t/* convert src values from Q16 fixed point to integer */\n\t\tsrc_w = new_state->src_w >> 16;\n\t\tsrc_h = new_state->src_h >> 16;\n\t}\n\n\tdest_w = new_state->crtc_w;\n\tdest_h = new_state->crtc_h;\n\n\tval = malidp_hw_read(mp->hwdev, mp->layer->base);\n\tval = (val & ~LAYER_FORMAT_MASK) | ms->format;\n\tmalidp_hw_write(mp->hwdev, val, mp->layer->base);\n\n\tfor (i = 0; i < ms->n_planes; i++)\n\t\tmalidp_set_plane_base_addr(fb, mp, i);\n\n\tmalidp_de_set_mmu_control(mp, ms);\n\n\tmalidp_de_set_plane_pitches(mp, ms->n_planes,\n\t\t\t\t    new_state->fb->pitches);\n\n\tif ((plane->state->color_encoding != old_state->color_encoding) ||\n\t    (plane->state->color_range != old_state->color_range))\n\t\tmalidp_de_set_color_encoding(mp, plane->state->color_encoding,\n\t\t\t\t\t     plane->state->color_range);\n\n\tmalidp_hw_write(mp->hwdev, LAYER_H_VAL(src_w) | LAYER_V_VAL(src_h),\n\t\t\tmp->layer->base + MALIDP_LAYER_SIZE);\n\n\tmalidp_hw_write(mp->hwdev, LAYER_H_VAL(dest_w) | LAYER_V_VAL(dest_h),\n\t\t\tmp->layer->base + MALIDP_LAYER_COMP_SIZE);\n\n\tmalidp_hw_write(mp->hwdev, LAYER_H_VAL(new_state->crtc_x) |\n\t\t\tLAYER_V_VAL(new_state->crtc_y),\n\t\t\tmp->layer->base + MALIDP_LAYER_OFFSET);\n\n\tif (mp->layer->id == DE_SMART) {\n\t\t/*\n\t\t * Enable the first rectangle in the SMART layer to be\n\t\t * able to use it as a drm plane.\n\t\t */\n\t\tmalidp_hw_write(mp->hwdev, 1,\n\t\t\t\tmp->layer->base + MALIDP550_LS_ENABLE);\n\t\tmalidp_hw_write(mp->hwdev,\n\t\t\t\tLAYER_H_VAL(src_w) | LAYER_V_VAL(src_h),\n\t\t\t\tmp->layer->base + MALIDP550_LS_R1_IN_SIZE);\n\t}\n\n\tmalidp_de_set_plane_afbc(plane);\n\n\t/* first clear the rotation bits */\n\tval = malidp_hw_read(mp->hwdev, mp->layer->base + MALIDP_LAYER_CONTROL);\n\tval &= ~LAYER_ROT_MASK;\n\n\t/* setup the rotation and axis flip bits */\n\tif (new_state->rotation & DRM_MODE_ROTATE_MASK)\n\t\tval |= ilog2(plane->state->rotation & DRM_MODE_ROTATE_MASK) <<\n\t\t       LAYER_ROT_OFFSET;\n\tif (new_state->rotation & DRM_MODE_REFLECT_X)\n\t\tval |= LAYER_H_FLIP;\n\tif (new_state->rotation & DRM_MODE_REFLECT_Y)\n\t\tval |= LAYER_V_FLIP;\n\n\tval &= ~(LAYER_COMP_MASK | LAYER_PMUL_ENABLE | LAYER_ALPHA(0xff));\n\n\tif (new_state->alpha != DRM_BLEND_ALPHA_OPAQUE) {\n\t\tval |= LAYER_COMP_PLANE;\n\t} else if (new_state->fb->format->has_alpha) {\n\t\t/* We only care about blend mode if the format has alpha */\n\t\tswitch (pixel_alpha) {\n\t\tcase DRM_MODE_BLEND_PREMULTI:\n\t\t\tval |= LAYER_COMP_PIXEL | LAYER_PMUL_ENABLE;\n\t\t\tbreak;\n\t\tcase DRM_MODE_BLEND_COVERAGE:\n\t\t\tval |= LAYER_COMP_PIXEL;\n\t\t\tbreak;\n\t\t}\n\t}\n\tval |= LAYER_ALPHA(plane_alpha);\n\n\tval &= ~LAYER_FLOWCFG(LAYER_FLOWCFG_MASK);\n\tif (new_state->crtc) {\n\t\tstruct malidp_crtc_state *m =\n\t\t\tto_malidp_crtc_state(new_state->crtc->state);\n\n\t\tif (m->scaler_config.scale_enable &&\n\t\t    m->scaler_config.plane_src_id == mp->layer->id)\n\t\t\tval |= LAYER_FLOWCFG(LAYER_FLOWCFG_SCALE_SE);\n\t}\n\n\t/* set the 'enable layer' bit */\n\tval |= LAYER_ENABLE;\n\n\tmalidp_hw_write(mp->hwdev, val,\n\t\t\tmp->layer->base + MALIDP_LAYER_CONTROL);\n}\n\nstatic void malidp_de_plane_disable(struct drm_plane *plane,\n\t\t\t\t    struct drm_atomic_state *state)\n{\n\tstruct malidp_plane *mp = to_malidp_plane(plane);\n\n\tmalidp_hw_clearbits(mp->hwdev,\n\t\t\t    LAYER_ENABLE | LAYER_FLOWCFG(LAYER_FLOWCFG_MASK),\n\t\t\t    mp->layer->base + MALIDP_LAYER_CONTROL);\n}\n\nstatic const struct drm_plane_helper_funcs malidp_de_plane_helper_funcs = {\n\t.atomic_check = malidp_de_plane_check,\n\t.atomic_update = malidp_de_plane_update,\n\t.atomic_disable = malidp_de_plane_disable,\n};\n\nstatic const uint64_t linear_only_modifiers[] = {\n\tDRM_FORMAT_MOD_LINEAR,\n\tDRM_FORMAT_MOD_INVALID\n};\n\nint malidp_de_planes_init(struct drm_device *drm)\n{\n\tstruct malidp_drm *malidp = drm->dev_private;\n\tconst struct malidp_hw_regmap *map = &malidp->dev->hw->map;\n\tstruct malidp_plane *plane = NULL;\n\tenum drm_plane_type plane_type;\n\tunsigned long crtcs = BIT(drm->mode_config.num_crtc);\n\tunsigned long flags = DRM_MODE_ROTATE_0 | DRM_MODE_ROTATE_90 | DRM_MODE_ROTATE_180 |\n\t\t\t      DRM_MODE_ROTATE_270 | DRM_MODE_REFLECT_X | DRM_MODE_REFLECT_Y;\n\tunsigned int blend_caps = BIT(DRM_MODE_BLEND_PIXEL_NONE) |\n\t\t\t\t  BIT(DRM_MODE_BLEND_PREMULTI)   |\n\t\t\t\t  BIT(DRM_MODE_BLEND_COVERAGE);\n\tu32 *formats;\n\tint ret, i = 0, j = 0, n;\n\tu64 supported_modifiers[MODIFIERS_COUNT_MAX];\n\tconst u64 *modifiers;\n\n\tmodifiers = malidp_format_modifiers;\n\n\tif (!(map->features & MALIDP_DEVICE_AFBC_SUPPORT_SPLIT)) {\n\t\t/*\n\t\t * Since our hardware does not support SPLIT, so build the list\n\t\t * of supported modifiers excluding SPLIT ones.\n\t\t */\n\t\twhile (*modifiers != DRM_FORMAT_MOD_INVALID) {\n\t\t\tif (!(*modifiers & AFBC_SPLIT))\n\t\t\t\tsupported_modifiers[j++] = *modifiers;\n\n\t\t\tmodifiers++;\n\t\t}\n\t\tsupported_modifiers[j++] = DRM_FORMAT_MOD_INVALID;\n\t\tmodifiers = supported_modifiers;\n\t}\n\n\tformats = kcalloc(map->n_pixel_formats, sizeof(*formats), GFP_KERNEL);\n\tif (!formats) {\n\t\tret = -ENOMEM;\n\t\tgoto cleanup;\n\t}\n\n\tfor (i = 0; i < map->n_layers; i++) {\n\t\tu8 id = map->layers[i].id;\n\n\t\tplane = kzalloc(sizeof(*plane), GFP_KERNEL);\n\t\tif (!plane) {\n\t\t\tret = -ENOMEM;\n\t\t\tgoto cleanup;\n\t\t}\n\n\t\t/* build the list of DRM supported formats based on the map */\n\t\tfor (n = 0, j = 0;  j < map->n_pixel_formats; j++) {\n\t\t\tif ((map->pixel_formats[j].layer & id) == id)\n\t\t\t\tformats[n++] = map->pixel_formats[j].format;\n\t\t}\n\n\t\tplane_type = (i == 0) ? DRM_PLANE_TYPE_PRIMARY :\n\t\t\t\t\tDRM_PLANE_TYPE_OVERLAY;\n\n\t\t/*\n\t\t * All the layers except smart layer supports AFBC modifiers.\n\t\t */\n\t\tret = drm_universal_plane_init(drm, &plane->base, crtcs,\n\t\t\t\t&malidp_de_plane_funcs, formats, n,\n\t\t\t\t(id == DE_SMART) ? linear_only_modifiers : modifiers,\n\t\t\t\tplane_type, NULL);\n\n\t\tif (ret < 0)\n\t\t\tgoto cleanup;\n\n\t\tdrm_plane_helper_add(&plane->base,\n\t\t\t\t     &malidp_de_plane_helper_funcs);\n\t\tplane->hwdev = malidp->dev;\n\t\tplane->layer = &map->layers[i];\n\n\t\tdrm_plane_create_alpha_property(&plane->base);\n\t\tdrm_plane_create_blend_mode_property(&plane->base, blend_caps);\n\n\t\tif (id == DE_SMART) {\n\t\t\t/* Skip the features which the SMART layer doesn't have. */\n\t\t\tcontinue;\n\t\t}\n\n\t\tdrm_plane_create_rotation_property(&plane->base, DRM_MODE_ROTATE_0, flags);\n\t\tmalidp_hw_write(malidp->dev, MALIDP_ALPHA_LUT,\n\t\t\t\tplane->layer->base + MALIDP_LAYER_COMPOSE);\n\n\t\t/* Attach the YUV->RGB property only to video layers */\n\t\tif (id & (DE_VIDEO1 | DE_VIDEO2)) {\n\t\t\t/* default encoding for YUV->RGB is BT601 NARROW */\n\t\t\tenum drm_color_encoding enc = DRM_COLOR_YCBCR_BT601;\n\t\t\tenum drm_color_range range = DRM_COLOR_YCBCR_LIMITED_RANGE;\n\n\t\t\tret = drm_plane_create_color_properties(&plane->base,\n\t\t\t\t\tBIT(DRM_COLOR_YCBCR_BT601) | \\\n\t\t\t\t\tBIT(DRM_COLOR_YCBCR_BT709) | \\\n\t\t\t\t\tBIT(DRM_COLOR_YCBCR_BT2020),\n\t\t\t\t\tBIT(DRM_COLOR_YCBCR_LIMITED_RANGE) | \\\n\t\t\t\t\tBIT(DRM_COLOR_YCBCR_FULL_RANGE),\n\t\t\t\t\tenc, range);\n\t\t\tif (!ret)\n\t\t\t\t/* program the HW registers */\n\t\t\t\tmalidp_de_set_color_encoding(plane, enc, range);\n\t\t\telse\n\t\t\t\tDRM_WARN(\"Failed to create video layer %d color properties\\n\", id);\n\t\t}\n\t}\n\n\tkfree(formats);\n\n\treturn 0;\n\ncleanup:\n\tkfree(formats);\n\n\treturn ret;\n}\n</Code>"
                }
            ],
            "url": "https://github.com/torvalds/linux/commit/15342f930ebebcfe36f2415049736a77d7d2e045",
            "description": "In the Linux kernel before 5.19, drivers/gpu/drm/arm/malidp_planes.c misinterprets the get_sg_table return value (expects it to be NULL in the error case, whereas it is actually an error pointer).",
            "date": "2023-03-01",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\n    \"CWE-391\"\n  ],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-391"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2023-23004",
            "ground_truth_CWEs": [
                "CWE-476"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Strip passwords and tokens from API logs\nOnly log failed requests information when in debug mode\nFile: p/api/fever.php\nContent: \n<Code>\n<?php\n/**\n * Fever API for FreshRSS\n * Version 0.1\n * Author: Kevin Papst / https://github.com/kevinpapst\n * Documentation: https://feedafever.com/api\n *\n * Inspired by:\n * TinyTinyRSS Fever API plugin @dasmurphy\n * See https://github.com/dasmurphy/tinytinyrss-fever-plugin\n */\n\n// ================================================================================================\n// BOOTSTRAP FreshRSS\nrequire(__DIR__ . '/../../constants.php');\nrequire(LIB_PATH . '/lib_rss.php');\t//Includes class autoloader\nFreshRSS_Context::initSystem();\n\n// check if API is enabled globally\nif (!FreshRSS_Context::$system_conf->api_enabled) {\n\tMinz_Log::warning('Fever API: serviceUnavailable() ' . debugInfo(), API_LOG);\n\theader('HTTP/1.1 503 Service Unavailable');\n\theader('Content-Type: text/plain; charset=UTF-8');\n\tdie('Service Unavailable!');\n}\n\nMinz_Session::init('FreshRSS', true);\n// ================================================================================================\n\n// <Debug>\n$ORIGINAL_INPUT = file_get_contents('php://input', false, null, 0, 1048576);\n\n/**\n * @return string\n */\nfunction debugInfo() {\n\tif (function_exists('getallheaders')) {\n\t\t$ALL_HEADERS = getallheaders();\n\t} else {\t//nginx\thttp://php.net/getallheaders#84262\n\t\t$ALL_HEADERS = array();\n\t\tforeach ($_SERVER as $name => $value) {\n\t\t\tif (substr($name, 0, 5) === 'HTTP_') {\n\t\t\t\t$ALL_HEADERS[str_replace(' ', '-', ucwords(strtolower(str_replace('_', ' ', substr($name, 5)))))] = $value;\n\t\t\t}\n\t\t}\n\t}\n\tglobal $ORIGINAL_INPUT;\n\treturn print_r(\n\t\tarray(\n\t\t\t'date' => date('c'),\n\t\t\t'headers' => $ALL_HEADERS,\n\t\t\t'_SERVER' => $_SERVER,\n\t\t\t'_GET' => $_GET,\n\t\t\t'_POST' => $_POST,\n\t\t\t'_COOKIE' => $_COOKIE,\n\t\t\t'INPUT' => $ORIGINAL_INPUT\n\t\t), true);\n}\n\n//Minz_Log::debug('----------------------------------------------------------------', API_LOG);\n//Minz_Log::debug(debugInfo(), API_LOG);\n// </Debug>\n\nclass FeverDAO extends Minz_ModelPdo\n{\n\tprotected function bindParamArray(string $prefix, array $values, array &$bindArray): string {\n\t\t$str = '';\n\t\tfor ($i = 0; $i < count($values); $i++) {\n\t\t\t$str .= ':' . $prefix . $i . ',';\n\t\t\t$bindArray[$prefix . $i] = $values[$i];\n\t\t}\n\t\treturn rtrim($str, ',');\n\t}\n\n\t/**\n\t * @return FreshRSS_Entry[]\n\t */\n\tpublic function findEntries(array $feed_ids, array $entry_ids, string $max_id, string $since_id) {\n\t\t$values = array();\n\t\t$order = '';\n\t\t$entryDAO = FreshRSS_Factory::createEntryDao();\n\n\t\t$sql = 'SELECT id, guid, title, author, '\n\t\t\t. ($entryDAO::isCompressed() ? 'UNCOMPRESS(content_bin) AS content' : 'content')\n\t\t\t. ', link, date, is_read, is_favorite, id_feed '\n\t\t\t. 'FROM `_entry` WHERE';\n\n\t\tif (!empty($entry_ids)) {\n\t\t\t$bindEntryIds = $this->bindParamArray('id', $entry_ids, $values);\n\t\t\t$sql .= \" id IN($bindEntryIds)\";\n\t\t} elseif ($max_id != '') {\n\t\t\t$sql .= ' id < :id';\n\t\t\t$values[':id'] = $max_id;\n\t\t\t$order = ' ORDER BY id DESC';\n\t\t} elseif ($since_id != '') {\n\t\t\t$sql .= ' id > :id';\n\t\t\t$values[':id'] = $since_id;\n\t\t\t$order = ' ORDER BY id ASC';\n\t\t} else {\n\t\t\t$sql .= ' 1=1';\n\t\t}\n\n\t\tif (!empty($feed_ids)) {\n\t\t\t$bindFeedIds = $this->bindParamArray('feed', $feed_ids, $values);\n\t\t\t$sql .= \" AND id_feed IN($bindFeedIds)\";\n\t\t}\n\n\t\t$sql .= $order;\n\t\t$sql .= ' LIMIT 50';\n\n\t\t$stm = $this->pdo->prepare($sql);\n\t\t$stm->execute($values);\n\t\t$result = $stm->fetchAll(PDO::FETCH_ASSOC);\n\n\t\t$entries = array();\n\t\tforeach ($result as $dao) {\n\t\t\t$entries[] = FreshRSS_Entry::fromArray($dao);\n\t\t}\n\n\t\treturn $entries;\n\t}\n}\n\n/**\n * Class FeverAPI\n */\nclass FeverAPI\n{\n\tconst API_LEVEL = 3;\n\tconst STATUS_OK = 1;\n\tconst STATUS_ERR = 0;\n\n\t/**\n\t * @var FreshRSS_EntryDAO|null\n\t */\n\tprivate $entryDAO = null;\n\n\t/**\n\t * @var FreshRSS_FeedDAO|null\n\t */\n\tprivate $feedDAO = null;\n\n\t/**\n\t * Authenticate the user\n\t *\n\t * API Password sent from client is the result of the md5 sum of\n\t * your FreshRSS \"username:your-api-password\" combination\n\t */\n\tprivate function authenticate(): bool {\n\t\tFreshRSS_Context::$user_conf = null;\n\t\tMinz_Session::_param('currentUser');\n\t\t$feverKey = empty($_POST['api_key']) ? '' : substr(trim($_POST['api_key']), 0, 128);\n\t\tif (ctype_xdigit($feverKey)) {\n\t\t\t$feverKey = strtolower($feverKey);\n\t\t\t$username = @file_get_contents(DATA_PATH . '/fever/.key-' . sha1(FreshRSS_Context::$system_conf->salt) . '-' . $feverKey . '.txt', false);\n\t\t\tif ($username != false) {\n\t\t\t\t$username = trim($username);\n\t\t\t\tFreshRSS_Context::$user_conf = FreshRSS_Context::initUser($username);\t// Assignment to help PHPStan\n\t\t\t\tif (FreshRSS_Context::$user_conf != null && $feverKey === FreshRSS_Context::$user_conf->feverKey && FreshRSS_Context::$user_conf->enabled) {\n\t\t\t\t\tMinz_Translate::init(FreshRSS_Context::$user_conf->language);\n\t\t\t\t\t$this->entryDAO = FreshRSS_Factory::createEntryDao();\n\t\t\t\t\t$this->feedDAO = FreshRSS_Factory::createFeedDao();\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tMinz_Translate::init();\n\t\t\t\t}\n\t\t\t\tMinz_Log::error('Fever API: Reset API password for user: ' . $username, API_LOG);\n\t\t\t\tMinz_Log::error('Fever API: Please reset your API password!');\n\t\t\t\tMinz_Session::_param('currentUser');\n\t\t\t}\n\t\t\tMinz_Log::warning('Fever API: wrong credentials! ' . $feverKey, API_LOG);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic function isAuthenticatedApiUser(): bool {\n\t\t$this->authenticate();\n\n\t\tif (FreshRSS_Context::$user_conf !== null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * This does all the processing, since the fever api does not have a specific variable that specifies the operation\n\t * @throws Exception\n\t */\n\tpublic function process(): array {\n\t\t$response_arr = array();\n\n\t\tif (!$this->isAuthenticatedApiUser()) {\n\t\t\tthrow new Exception('No user given or user is not allowed to access API');\n\t\t}\n\n\t\tif (isset($_REQUEST['groups'])) {\n\t\t\t$response_arr['groups'] = $this->getGroups();\n\t\t\t$response_arr['feeds_groups'] = $this->getFeedsGroup();\n\t\t}\n\n\t\tif (isset($_REQUEST['feeds'])) {\n\t\t\t$response_arr['feeds'] = $this->getFeeds();\n\t\t\t$response_arr['feeds_groups'] = $this->getFeedsGroup();\n\t\t}\n\n\t\tif (isset($_REQUEST['favicons'])) {\n\t\t\t$response_arr['favicons'] = $this->getFavicons();\n\t\t}\n\n\t\tif (isset($_REQUEST['items'])) {\n\t\t\t$response_arr['total_items'] = $this->getTotalItems();\n\t\t\t$response_arr['items'] = $this->getItems();\n\t\t}\n\n\t\tif (isset($_REQUEST['links'])) {\n\t\t\t$response_arr['links'] = $this->getLinks();\n\t\t}\n\n\t\tif (isset($_REQUEST['unread_item_ids'])) {\n\t\t\t$response_arr['unread_item_ids'] = $this->getUnreadItemIds();\n\t\t}\n\n\t\tif (isset($_REQUEST['saved_item_ids'])) {\n\t\t\t$response_arr['saved_item_ids'] = $this->getSavedItemIds();\n\t\t}\n\n\t\t$id = isset($_REQUEST['id']) ? '' . $_REQUEST['id'] : '';\n\t\tif (isset($_REQUEST['mark'], $_REQUEST['as'], $_REQUEST['id']) && ctype_digit($id)) {\n\t\t\t$method_name = 'set' . ucfirst($_REQUEST['mark']) . 'As' . ucfirst($_REQUEST['as']);\n\t\t\t$allowedMethods = array(\n\t\t\t\t'setFeedAsRead', 'setGroupAsRead', 'setItemAsRead',\n\t\t\t\t'setItemAsSaved', 'setItemAsUnread', 'setItemAsUnsaved'\n\t\t\t);\n\t\t\tif (in_array($method_name, $allowedMethods)) {\n\t\t\t\tswitch (strtolower($_REQUEST['mark'])) {\n\t\t\t\t\tcase 'item':\n\t\t\t\t\t\t$this->{$method_name}($id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'feed':\n\t\t\t\t\tcase 'group':\n\t\t\t\t\t\t$before = $_REQUEST['before'] ?? '';\n\t\t\t\t\t\t$this->{$method_name}($id, $before);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch ($_REQUEST['as']) {\n\t\t\t\t\tcase 'read':\n\t\t\t\t\tcase 'unread':\n\t\t\t\t\t\t$response_arr['unread_item_ids'] = $this->getUnreadItemIds();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'saved':\n\t\t\t\t\tcase 'unsaved':\n\t\t\t\t\t\t$response_arr['saved_item_ids'] = $this->getSavedItemIds();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $response_arr;\n\t}\n\n\t/**\n\t * Returns the complete JSON, with 'api_version' and status as 'auth'.\n\t */\n\tpublic function wrap(int $status, array $reply = array()): string {\n\t\t$arr = array('api_version' => self::API_LEVEL, 'auth' => $status);\n\n\t\tif ($status === self::STATUS_OK) {\n\t\t\t$arr['last_refreshed_on_time'] = $this->lastRefreshedOnTime();\n\t\t\t$arr = array_merge($arr, $reply);\n\t\t}\n\n\t\treturn json_encode($arr);\n\t}\n\n\t/**\n\t * every authenticated method includes last_refreshed_on_time\n\t */\n\tprotected function lastRefreshedOnTime(): int {\n\t\t$lastUpdate = 0;\n\n\t\t$entries = $this->feedDAO->listFeedsOrderUpdate(-1, 1);\n\t\t$feed = current($entries);\n\n\t\tif (!empty($feed)) {\n\t\t\t$lastUpdate = $feed->lastUpdate();\n\t\t}\n\n\t\treturn $lastUpdate;\n\t}\n\n\tprotected function getFeeds(): array {\n\t\t$feeds = array();\n\t\t$myFeeds = $this->feedDAO->listFeeds();\n\n\t\t/** @var FreshRSS_Feed $feed */\n\t\tforeach ($myFeeds as $feed) {\n\t\t\t$feeds[] = array(\n\t\t\t\t'id' => $feed->id(),\n\t\t\t\t'favicon_id' => $feed->id(),\n\t\t\t\t'title' => escapeToUnicodeAlternative($feed->name(), true),\n\t\t\t\t'url' => htmlspecialchars_decode($feed->url(), ENT_QUOTES),\n\t\t\t\t'site_url' => htmlspecialchars_decode($feed->website(), ENT_QUOTES),\n\t\t\t\t'is_spark' => 0, // unsupported\n\t\t\t\t'last_updated_on_time' => $feed->lastUpdate(),\n\t\t\t);\n\t\t}\n\n\t\treturn $feeds;\n\t}\n\n\tprotected function getGroups(): array {\n\t\t$groups = array();\n\n\t\t$categoryDAO = FreshRSS_Factory::createCategoryDao();\n\t\t$categories = $categoryDAO->listCategories(false, false);\n\n\t\t/** @var FreshRSS_Category $category */\n\t\tforeach ($categories as $category) {\n\t\t\t$groups[] = array(\n\t\t\t\t'id' => $category->id(),\n\t\t\t\t'title' => escapeToUnicodeAlternative($category->name(), true),\n\t\t\t);\n\t\t}\n\n\t\treturn $groups;\n\t}\n\n\tprotected function getFavicons(): array {\n\t\t$favicons = array();\n\t\t$salt = FreshRSS_Context::$system_conf->salt;\n\t\t$myFeeds = $this->feedDAO->listFeeds();\n\n\t\t/** @var FreshRSS_Feed $feed */\n\t\tforeach ($myFeeds as $feed) {\n\n\t\t\t$id = hash('crc32b', $salt . $feed->url());\n\t\t\t$filename = DATA_PATH . '/favicons/' . $id . '.ico';\n\t\t\tif (!file_exists($filename)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$favicons[] = array(\n\t\t\t\t'id' => $feed->id(),\n\t\t\t\t'data' => image_type_to_mime_type(exif_imagetype($filename)) . ';base64,' . base64_encode(file_get_contents($filename))\n\t\t\t);\n\t\t}\n\n\t\treturn $favicons;\n\t}\n\n\t/**\n\t * @return int|false\n\t */\n\tprotected function getTotalItems() {\n\t\treturn $this->entryDAO->count();\n\t}\n\n\tprotected function getFeedsGroup(): array {\n\t\t$groups = array();\n\t\t$ids = array();\n\t\t$myFeeds = $this->feedDAO->listFeeds();\n\n\t\t/** @var FreshRSS_Feed $feed */\n\t\tforeach ($myFeeds as $feed) {\n\t\t\t$ids[$feed->categoryId()][] = $feed->id();\n\t\t}\n\n\t\tforeach($ids as $category => $feedIds) {\n\t\t\t$groups[] = array(\n\t\t\t\t'group_id' => $category,\n\t\t\t\t'feed_ids' => implode(',', $feedIds)\n\t\t\t);\n\t\t}\n\n\t\treturn $groups;\n\t}\n\n\t/**\n\t * AFAIK there is no 'hot links' alternative in FreshRSS\n\t */\n\tprotected function getLinks(): array {\n\t\treturn array();\n\t}\n\n\t/**\n\t * @param array $ids\n\t */\n\tprotected function entriesToIdList(array $ids = array()): string {\n\t\treturn implode(',', array_values($ids));\n\t}\n\n\tprotected function getUnreadItemIds(): string {\n\t\t$entries = $this->entryDAO->listIdsWhere('a', '', FreshRSS_Entry::STATE_NOT_READ, 'ASC', 0);\n\t\treturn $this->entriesToIdList($entries);\n\t}\n\n\t/**\n\t * @return string\n\t */\n\tprotected function getSavedItemIds() {\n\t\t$entries = $this->entryDAO->listIdsWhere('a', '', FreshRSS_Entry::STATE_FAVORITE, 'ASC', 0);\n\t\treturn $this->entriesToIdList($entries);\n\t}\n\n\t/**\n\t * @return integer|false\n\t */\n\tprotected function setItemAsRead($id) {\n\t\treturn $this->entryDAO->markRead($id, true);\n\t}\n\n\t/**\n\t * @return integer|false\n\t */\n\tprotected function setItemAsUnread($id) {\n\t\treturn $this->entryDAO->markRead($id, false);\n\t}\n\n\t/**\n\t * @return integer|false\n\t */\n\tprotected function setItemAsSaved($id) {\n\t\treturn $this->entryDAO->markFavorite($id, true);\n\t}\n\n\t/**\n\t * @return integer|false\n\t */\n\tprotected function setItemAsUnsaved($id) {\n\t\treturn $this->entryDAO->markFavorite($id, false);\n\t}\n\n\tprotected function getItems(): array {\n\t\t$feed_ids = array();\n\t\t$entry_ids = array();\n\t\t$max_id = '';\n\t\t$since_id = '';\n\n\t\tif (isset($_REQUEST['feed_ids']) || isset($_REQUEST['group_ids'])) {\n\t\t\tif (isset($_REQUEST['feed_ids'])) {\n\t\t\t\t$feed_ids = explode(',', $_REQUEST['feed_ids']);\n\t\t\t}\n\n\t\t\tif (isset($_REQUEST['group_ids'])) {\n\t\t\t\t$categoryDAO = FreshRSS_Factory::createCategoryDao();\n\t\t\t\t$group_ids = explode(',', $_REQUEST['group_ids']);\n\t\t\t\tforeach ($group_ids as $id) {\n\t\t\t\t\t/** @var FreshRSS_Category $category */\n\t\t\t\t\t$category = $categoryDAO->searchById($id);\t//TODO: Transform to SQL query without loop! Consider FreshRSS_CategoryDAO::listCategories(true)\n\t\t\t\t\t/** @var FreshRSS_Feed $feed */\n\t\t\t\t\t$feeds = [];\n\t\t\t\t\tforeach ($category->feeds() as $feed) {\n\t\t\t\t\t\t$feeds[] = $feed->id();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$feed_ids = array_unique($feeds);\n\t\t\t}\n\t\t}\n\n\t\tif (isset($_REQUEST['max_id'])) {\n\t\t\t// use the max_id argument to request the previous $item_limit items\n\t\t\t$max_id = '' . $_REQUEST['max_id'];\n\t\t\tif (!ctype_digit($max_id)) {\n\t\t\t\t$max_id = '';\n\t\t\t}\n\t\t} elseif (isset($_REQUEST['with_ids'])) {\n\t\t\t$entry_ids = explode(',', $_REQUEST['with_ids']);\n\t\t} elseif (isset($_REQUEST['since_id'])) {\n\t\t\t// use the since_id argument to request the next $item_limit items\n\t\t\t$since_id = '' . $_REQUEST['since_id'];\n\t\t\tif (!ctype_digit($since_id)) {\n\t\t\t\t$since_id = '';\n\t\t\t}\n\t\t}\n\n\t\t$items = array();\n\n\t\t$feverDAO = new FeverDAO();\n\t\t$entries = $feverDAO->findEntries($feed_ids, $entry_ids, $max_id, $since_id);\n\n\t\t// Load list of extensions and enable the \"system\" ones.\n\t\tMinz_ExtensionManager::init();\n\n\t\tforeach ($entries as $item) {\n\t\t\t/** @var FreshRSS_Entry $entry */\n\t\t\t$entry = Minz_ExtensionManager::callHook('entry_before_display', $item);\n\t\t\tif ($entry == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$items[] = array(\n\t\t\t\t'id' => '' . $entry->id(),\n\t\t\t\t'feed_id' => $entry->feedId(),\n\t\t\t\t'title' => escapeToUnicodeAlternative($entry->title(), false),\n\t\t\t\t'author' => escapeToUnicodeAlternative(trim($entry->authors(true), '; '), false),\n\t\t\t\t'html' => $entry->content(),\n\t\t\t\t'url' => htmlspecialchars_decode($entry->link(), ENT_QUOTES),\n\t\t\t\t'is_saved' => $entry->isFavorite() ? 1 : 0,\n\t\t\t\t'is_read' => $entry->isRead() ? 1 : 0,\n\t\t\t\t'created_on_time' => $entry->date(true),\n\t\t\t);\n\t\t}\n\n\t\treturn $items;\n\t}\n\n\t/**\n\t * TODO replace by a dynamic fetch for id <= $before timestamp\n\t */\n\tprotected function convertBeforeToId(string $beforeTimestamp): string {\n\t\treturn $beforeTimestamp == '0' ? '0' : $beforeTimestamp . '000000';\n\t}\n\n\t/**\n\t * @return integer|false\n\t */\n\tprotected function setFeedAsRead(string $id, string $before) {\n\t\t$before = $this->convertBeforeToId($before);\n\t\treturn $this->entryDAO->markReadFeed(intval($id), $before);\n\t}\n\n\t/**\n\t * @return integer|false\n\t */\n\tprotected function setGroupAsRead(string $id, string $before) {\n\t\t$before = $this->convertBeforeToId($before);\n\n\t\t// special case to mark all items as read\n\t\tif ($id == '0') {\n\t\t\treturn $this->entryDAO->markReadEntries($before);\n\t\t}\n\n\t\treturn $this->entryDAO->markReadCat(intval($id), $before);\n\t}\n}\n\n// ================================================================================================\n// refresh is not allowed yet, probably we find a way to support it later\nif (isset($_REQUEST['refresh'])) {\n\tMinz_Log::warning('Fever API: Refresh items - notImplemented()', API_LOG);\n\theader('HTTP/1.1 501 Not Implemented');\n\theader('Content-Type: text/plain; charset=UTF-8');\n\tdie('Not Implemented!');\n}\n\n// Start the Fever API handling\n$handler = new FeverAPI();\n\nheader('Content-Type: application/json; charset=UTF-8');\n\nif (!$handler->isAuthenticatedApiUser()) {\n\techo $handler->wrap(FeverAPI::STATUS_ERR, array());\n} else {\n\techo $handler->wrap(FeverAPI::STATUS_OK, $handler->process());\n}\n</Code>\n\nFile: p/api/greader.php\nContent: \n<Code>\n<?php\n/**\n== Description ==\nServer-side API compatible with Google Reader API layer 2\n\tfor the FreshRSS project https://freshrss.org\n\n== Credits ==\n* 2014-03: Released by Alexandre Alapetite https://alexandre.alapetite.fr\n\tunder GNU AGPL 3 license http://www.gnu.org/licenses/agpl-3.0.html\n\n== Documentation ==\n* http://code.google.com/p/pyrfeed/wiki/GoogleReaderAPI\n* https://web.archive.org/web/20130718025427/http://undoc.in/\n* http://ranchero.com/downloads/GoogleReaderAPI-2009.pdf\n* http://code.google.com/p/google-reader-api/w/list\n* https://web.archive.org/web/20210126115837/https://blog.martindoms.com/2009/10/16/using-the-google-reader-api-part-2/\n* https://github.com/noinnion/newsplus/blob/master/extensions/GoogleReaderCloneExtension/src/com/noinnion/android/newsplus/extension/google_reader/GoogleReaderClient.java\n* https://github.com/ericmann/gReader-Library/blob/master/greader.class.php\n* https://github.com/devongovett/reader\n* https://github.com/theoldreader/api\n* https://www.inoreader.com/developers/\n* https://feedhq.readthedocs.io/en/latest/api/index.html\n* https://github.com/bazqux/bazqux-api\n*/\n\nrequire(__DIR__ . '/../../constants.php');\nrequire(LIB_PATH . '/lib_rss.php');\t//Includes class autoloader\n\n$ORIGINAL_INPUT = file_get_contents('php://input', false, null, 0, 1048576);\n\nif (PHP_INT_SIZE < 8) {\t//32-bit\n\t/**\n\t * @param string $hex\n\t * @return string\n\t */\n\tfunction hex2dec($hex) {\n\t\tif (!ctype_xdigit($hex)) return '0';\n\t\treturn gmp_strval(gmp_init($hex, 16), 10);\n\t}\n} else {\t//64-bit\n\t/**\n\t * @param string $hex\n\t * @return string\n\t */\n\tfunction hex2dec($hex) {\n\t\tif (!ctype_xdigit($hex)) return '0';\n\t\treturn '' . hexdec($hex);\n\t}\n}\n\ndefine('JSON_OPTIONS', JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE);\n\nfunction headerVariable($headerName, $varName) {\n\t$header = '';\n\t$upName = 'HTTP_' . strtoupper($headerName);\n\tif (isset($_SERVER[$upName])) {\n\t\t$header = $_SERVER[$upName];\n\t} elseif (isset($_SERVER['REDIRECT_' . $upName])) {\n\t\t$header = $_SERVER['REDIRECT_' . $upName];\n\t} elseif (function_exists('getallheaders')) {\n\t\t$ALL_HEADERS = getallheaders();\n\t\tif (isset($ALL_HEADERS[$headerName])) {\n\t\t\t$header = $ALL_HEADERS[$headerName];\n\t\t}\n\t}\n\tparse_str($header, $pairs);\n\treturn isset($pairs[$varName]) ? $pairs[$varName] : null;\n}\n\nfunction multiplePosts($name) {\n\t//https://bugs.php.net/bug.php?id=51633\n\tglobal $ORIGINAL_INPUT;\n\t$inputs = explode('&', $ORIGINAL_INPUT);\n\t$result = array();\n\t$prefix = $name . '=';\n\t$prefixLength = strlen($prefix);\n\tforeach ($inputs as $input) {\n\t\tif (strpos($input, $prefix) === 0) {\n\t\t\t$result[] = urldecode(substr($input, $prefixLength));\n\t\t}\n\t}\n\treturn $result;\n}\n\n/**\n * @return string\n */\nfunction debugInfo() {\n\tif (function_exists('getallheaders')) {\n\t\t$ALL_HEADERS = getallheaders();\n\t} else {\t//nginx\thttp://php.net/getallheaders#84262\n\t\t$ALL_HEADERS = array();\n\t\tforeach ($_SERVER as $name => $value) {\n\t\t\tif (substr($name, 0, 5) === 'HTTP_') {\n\t\t\t\t$ALL_HEADERS[str_replace(' ', '-', ucwords(strtolower(str_replace('_', ' ', substr($name, 5)))))] = $value;\n\t\t\t}\n\t\t}\n\t}\n\tglobal $ORIGINAL_INPUT;\n\treturn print_r(\n\t\tarray(\n\t\t\t'date' => date('c'),\n\t\t\t'headers' => $ALL_HEADERS,\n\t\t\t'_SERVER' => $_SERVER,\n\t\t\t'_GET' => $_GET,\n\t\t\t'_POST' => $_POST,\n\t\t\t'_COOKIE' => $_COOKIE,\n\t\t\t'INPUT' => $ORIGINAL_INPUT\n\t\t), true);\n}\n\nfunction badRequest() {\n\tMinz_Log::warning('badRequest() ' . debugInfo(), API_LOG);\n\theader('HTTP/1.1 400 Bad Request');\n\theader('Content-Type: text/plain; charset=UTF-8');\n\tdie('Bad Request!');\n}\n\nfunction unauthorized() {\n\tMinz_Log::warning('unauthorized() ' . debugInfo(), API_LOG);\n\theader('HTTP/1.1 401 Unauthorized');\n\theader('Content-Type: text/plain; charset=UTF-8');\n\theader('Google-Bad-Token: true');\n\tdie('Unauthorized!');\n}\n\nfunction notImplemented() {\n\tMinz_Log::warning('notImplemented() ' . debugInfo(), API_LOG);\n\theader('HTTP/1.1 501 Not Implemented');\n\theader('Content-Type: text/plain; charset=UTF-8');\n\tdie('Not Implemented!');\n}\n\nfunction serviceUnavailable() {\n\tMinz_Log::warning('serviceUnavailable() ' . debugInfo(), API_LOG);\n\theader('HTTP/1.1 503 Service Unavailable');\n\theader('Content-Type: text/plain; charset=UTF-8');\n\tdie('Service Unavailable!');\n}\n\nfunction checkCompatibility() {\n\tMinz_Log::warning('checkCompatibility() ' . debugInfo(), API_LOG);\n\theader('Content-Type: text/plain; charset=UTF-8');\n\tif (PHP_INT_SIZE < 8 && !function_exists('gmp_init')) {\n\t\tdie('FAIL 64-bit or GMP extension! Wrong PHP configuration.');\n\t}\n\t$headerAuth = headerVariable('Authorization', 'GoogleLogin_auth');\n\tif ($headerAuth == '') {\n\t\tdie('FAIL get HTTP Authorization header! Wrong Web server configuration.');\n\t}\n\techo 'PASS';\n\texit();\n}\n\nfunction authorizationToUser() {\n\t//Input is 'GoogleLogin auth', but PHP replaces spaces by '_'\thttp://php.net/language.variables.external\n\t$headerAuth = headerVariable('Authorization', 'GoogleLogin_auth');\n\tif ($headerAuth != '') {\n\t\t$headerAuthX = explode('/', $headerAuth, 2);\n\t\tif (count($headerAuthX) === 2) {\n\t\t\t$user = $headerAuthX[0];\n\t\t\tif (FreshRSS_user_Controller::checkUsername($user)) {\n\t\t\t\tFreshRSS_Context::initUser($user);\n\t\t\t\tif (FreshRSS_Context::$user_conf == null) {\n\t\t\t\t\tMinz_Log::warning('Invalid API user ' . $user . ': configuration cannot be found.');\n\t\t\t\t\tunauthorized();\n\t\t\t\t}\n\t\t\t\tif (!FreshRSS_Context::$user_conf->enabled) {\n\t\t\t\t\tMinz_Log::warning('Invalid API user ' . $user . ': configuration cannot be found.');\n\t\t\t\t\tunauthorized();\n\t\t\t\t}\n\t\t\t\tif ($headerAuthX[1] === sha1(FreshRSS_Context::$system_conf->salt . $user . FreshRSS_Context::$user_conf->apiPasswordHash)) {\n\t\t\t\t\treturn $user;\n\t\t\t\t} else {\n\t\t\t\t\tMinz_Log::warning('Invalid API authorisation for user ' . $user . ': ' . $headerAuthX[1], API_LOG);\n\t\t\t\t\tMinz_Log::warning('Invalid API authorisation for user ' . $user . ': ' . $headerAuthX[1]);\n\t\t\t\t\tunauthorized();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbadRequest();\n\t\t\t}\n\t\t}\n\t}\n\treturn '';\n}\n\nfunction clientLogin($email, $pass) {\n\t//https://web.archive.org/web/20130604091042/http://undoc.in/clientLogin.html\n\tif (FreshRSS_user_Controller::checkUsername($email)) {\n\t\tFreshRSS_Context::initUser($email);\n\t\tif (FreshRSS_Context::$user_conf == null) {\n\t\t\tMinz_Log::warning('Invalid API user ' . $email . ': configuration cannot be found.');\n\t\t\tunauthorized();\n\t\t}\n\n\t\tif (FreshRSS_Context::$user_conf->apiPasswordHash != '' && password_verify($pass, FreshRSS_Context::$user_conf->apiPasswordHash)) {\n\t\t\theader('Content-Type: text/plain; charset=UTF-8');\n\t\t\t$auth = $email . '/' . sha1(FreshRSS_Context::$system_conf->salt . $email . FreshRSS_Context::$user_conf->apiPasswordHash);\n\t\t\techo 'SID=', $auth, \"\\n\",\n\t\t\t\t'LSID=null', \"\\n\",\t//Vienna RSS\n\t\t\t\t'Auth=', $auth, \"\\n\";\n\t\t\texit();\n\t\t} else {\n\t\t\tMinz_Log::warning('Password API mismatch for user ' . $email);\n\t\t\tunauthorized();\n\t\t}\n\t} else {\n\t\tbadRequest();\n\t}\n\tdie();\n}\n\nfunction token($conf) {\n//http://blog.martindoms.com/2009/08/15/using-the-google-reader-api-part-1/\n//https://github.com/ericmann/gReader-Library/blob/master/greader.class.php\n\t$user = Minz_Session::param('currentUser', '_');\n\t//Minz_Log::debug('token('. $user . ')', API_LOG);\t//TODO: Implement real token that expires\n\t$token = str_pad(sha1(FreshRSS_Context::$system_conf->salt . $user . $conf->apiPasswordHash), 57, 'Z');\t//Must have 57 characters\n\techo $token, \"\\n\";\n\texit();\n}\n\nfunction checkToken(FreshRSS_UserConfiguration $conf, string $token) {\n//http://code.google.com/p/google-reader-api/wiki/ActionToken\n\t$user = Minz_Session::param('currentUser', '_');\n\tif ($user !== '_' && (\t//TODO: Check security consequences\n\t\t$token == '' || //FeedMe\n\t\t$token === 'x')) { //Reeder\n\t\treturn true;\n\t}\n\tif ($token === str_pad(sha1(FreshRSS_Context::$system_conf->salt . $user . $conf->apiPasswordHash), 57, 'Z')) {\n\t\treturn true;\n\t}\n\tMinz_Log::warning('Invalid POST token: ' . $token, API_LOG);\n\tunauthorized();\n}\n\nfunction userInfo() {\n\t//https://github.com/theoldreader/api#user-info\n\t$user = Minz_Session::param('currentUser', '_');\n\texit(json_encode(array(\n\t\t\t'userId' => $user,\n\t\t\t'userName' => $user,\n\t\t\t'userProfileId' => $user,\n\t\t\t'userEmail' => FreshRSS_Context::$user_conf->mail_login,\n\t\t), JSON_OPTIONS));\n}\n\nfunction tagList() {\n\theader('Content-Type: application/json; charset=UTF-8');\n\n\t$tags = array(\n\t\tarray('id' => 'user/-/state/com.google/starred'),\n\t\t//array('id' => 'user/-/state/com.google/broadcast', 'sortid' => '2'),\n\t);\n\n\t$categoryDAO = FreshRSS_Factory::createCategoryDao();\n\t$categories = $categoryDAO->listCategories(true, false);\n\tforeach ($categories as $cat) {\n\t\t$tags[] = array(\n\t\t\t'id' => 'user/-/label/' . htmlspecialchars_decode($cat->name(), ENT_QUOTES),\n\t\t\t//'sortid' => $cat->name(),\n\t\t\t'type' => 'folder',\t//Inoreader\n\t\t);\n\t}\n\n\t$tagDAO = FreshRSS_Factory::createTagDao();\n\t$labels = $tagDAO->listTags(true);\n\tforeach ($labels as $label) {\n\t\t$tags[] = array(\n\t\t\t'id' => 'user/-/label/' . htmlspecialchars_decode($label->name(), ENT_QUOTES),\n\t\t\t//'sortid' => $label->name(),\n\t\t\t'type' => 'tag',\t//Inoreader\n\t\t\t'unread_count' => $label->nbUnread(),\t//Inoreader\n\t\t);\n\t}\n\n\techo json_encode(array('tags' => $tags), JSON_OPTIONS), \"\\n\";\n\texit();\n}\n\nfunction subscriptionExport() {\n\t$user = Minz_Session::param('currentUser', '_');\n\t$export_service = new FreshRSS_Export_Service($user);\n\tlist($filename, $content) = $export_service->generateOpml();\n\theader('Content-Type: application/xml; charset=UTF-8');\n\theader('Content-disposition: attachment; filename=\"' . $filename . '\"');\n\techo $content;\n\texit();\n}\n\nfunction subscriptionImport($opml) {\n\t$user = Minz_Session::param('currentUser', '_');\n\t$importService = new FreshRSS_Import_Service($user);\n\t$importService->importOpml($opml);\n\tif ($importService->lastStatus()) {\n\t\tlist($nbUpdatedFeeds, $feed, $nbNewArticles) = FreshRSS_feed_Controller::actualizeFeed(0, '', true);\n\t\tinvalidateHttpCache($user);\n\t\texit('OK');\n\t} else {\n\t\tbadRequest();\n\t}\n}\n\nfunction subscriptionList() {\n\theader('Content-Type: application/json; charset=UTF-8');\n\n\t$salt = FreshRSS_Context::$system_conf->salt;\n\t$faviconsUrl = Minz_Url::display('/f.php?', '', true);\n\t$faviconsUrl = str_replace('/api/greader.php/reader/api/0/subscription', '', $faviconsUrl);\t//Security if base_url is not set properly\n\t$subscriptions = array();\n\n\t$categoryDAO = FreshRSS_Factory::createCategoryDao();\n\tforeach ($categoryDAO->listCategories(true, true) as $cat) {\n\t\tforeach ($cat->feeds() as $feed) {\n\t\t\t$subscriptions[] = [\n\t\t\t\t'id' => 'feed/' . $feed->id(),\n\t\t\t\t'title' => escapeToUnicodeAlternative($feed->name(), true),\n\t\t\t\t'categories' => [\n\t\t\t\t\t[\n\t\t\t\t\t\t'id' => 'user/-/label/' . htmlspecialchars_decode($cat->name(), ENT_QUOTES),\n\t\t\t\t\t\t'label' => htmlspecialchars_decode($cat->name(), ENT_QUOTES),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t//'sortid' => $feed->name(),\n\t\t\t\t//'firstitemmsec' => 0,\n\t\t\t\t'url' => htmlspecialchars_decode($feed->url(), ENT_QUOTES),\n\t\t\t\t'htmlUrl' => htmlspecialchars_decode($feed->website(), ENT_QUOTES),\n\t\t\t\t'iconUrl' => $faviconsUrl . hash('crc32b', $salt . $feed->url()),\n\t\t\t];\n\t\t}\n\t}\n\n\techo json_encode(array('subscriptions' => $subscriptions), JSON_OPTIONS), \"\\n\";\n\texit();\n}\n\nfunction subscriptionEdit($streamNames, $titles, $action, $add = '', $remove = '') {\n\t//https://github.com/mihaip/google-reader-api/blob/master/wiki/ApiSubscriptionEdit.wiki\n\tswitch ($action) {\n\t\tcase 'subscribe':\n\t\tcase 'unsubscribe':\n\t\tcase 'edit':\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbadRequest();\n\t}\n\t$addCatId = 0;\n\t$categoryDAO = null;\n\tif ($add != '' || $remove != '') {\n\t\t$categoryDAO = FreshRSS_Factory::createCategoryDao();\n\t}\n\t$c_name = '';\n\tif ($add != '' && strpos($add, 'user/') === 0) {\t//user/-/label/Example ; user/username/label/Example\n\t\tif (strpos($add, 'user/-/label/') === 0) {\n\t\t\t$c_name = substr($add, 13);\n\t\t} else {\n\t\t\t$user = Minz_Session::param('currentUser', '_');\n\t\t\t$prefix = 'user/' . $user . '/label/';\n\t\t\tif (strpos($add, $prefix) === 0) {\n\t\t\t\t$c_name = substr($add, strlen($prefix));\n\t\t\t} else {\n\t\t\t\t$c_name = '';\n\t\t\t}\n\t\t}\n\t\t$c_name = htmlspecialchars($c_name, ENT_COMPAT, 'UTF-8');\n\t\t$cat = $categoryDAO->searchByName($c_name);\n\t\t$addCatId = $cat == null ? 0 : $cat->id();\n\t} elseif ($remove != '' && strpos($remove, 'user/-/label/') === 0) {\n\t\t$addCatId = 1;\t//Default category\n\t}\n\t$feedDAO = FreshRSS_Factory::createFeedDao();\n\tif (!is_array($streamNames) || count($streamNames) < 1) {\n\t\tbadRequest();\n\t}\n\tfor ($i = count($streamNames) - 1; $i >= 0; $i--) {\n\t\t$streamUrl = $streamNames[$i];\t//feed/http://example.net/sample.xml\t;\tfeed/338\n\t\tif (strpos($streamUrl, 'feed/') === 0) {\n\t\t\t$streamUrl = preg_replace('%^(feed/)+%', '', $streamUrl);\n\t\t\t$feedId = 0;\n\t\t\tif (ctype_digit($streamUrl)) {\n\t\t\t\tif ($action === 'subscribe') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$feedId = $streamUrl;\n\t\t\t} else {\n\t\t\t\t$streamUrl = htmlspecialchars($streamUrl, ENT_COMPAT, 'UTF-8');\n\t\t\t\t$feed = $feedDAO->searchByUrl($streamUrl);\n\t\t\t\t$feedId = $feed == null ? -1 : $feed->id();\n\t\t\t}\n\t\t\t$title = isset($titles[$i]) ? $titles[$i] : '';\n\t\t\t$title = htmlspecialchars($title, ENT_COMPAT, 'UTF-8');\n\t\t\tswitch ($action) {\n\t\t\t\tcase 'subscribe':\n\t\t\t\t\tif ($feedId <= 0) {\n\t\t\t\t\t\t$http_auth = '';\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t$feed = FreshRSS_feed_Controller::addFeed($streamUrl, $title, $addCatId, $c_name, $http_auth);\n\t\t\t\t\t\t\tcontinue 2;\n\t\t\t\t\t\t} catch (Exception $e) {\n\t\t\t\t\t\t\tMinz_Log::error('subscriptionEdit error subscribe: ' . $e->getMessage(), API_LOG);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbadRequest();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'unsubscribe':\n\t\t\t\t\tif (!($feedId > 0 && FreshRSS_feed_Controller::deleteFeed($feedId))) {\n\t\t\t\t\t\tbadRequest();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'edit':\n\t\t\t\t\tif ($feedId > 0) {\n\t\t\t\t\t\tif ($addCatId > 0 || $c_name != '') {\n\t\t\t\t\t\t\tFreshRSS_feed_Controller::moveFeed($feedId, $addCatId, $c_name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($title != '') {\n\t\t\t\t\t\t\tFreshRSS_feed_Controller::renameFeed($feedId, $title);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbadRequest();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\texit('OK');\n}\n\nfunction quickadd($url) {\n\ttry {\n\t\t$url = htmlspecialchars($url, ENT_COMPAT, 'UTF-8');\n\t\tif (substr($url, 0, 5) === 'feed/') {\n\t\t\t$url = substr($url, 5);\n\t\t}\n\t\t$feed = FreshRSS_feed_Controller::addFeed($url);\n\t\texit(json_encode(array(\n\t\t\t\t'numResults' => 1,\n\t\t\t\t'query' => $feed->url(),\n\t\t\t\t'streamId' => 'feed/' . $feed->id(),\n\t\t\t\t'streamName' => $feed->name(),\n\t\t\t), JSON_OPTIONS));\n\t} catch (Exception $e) {\n\t\tMinz_Log::error('quickadd error: ' . $e->getMessage(), API_LOG);\n\t\tdie(json_encode(array(\n\t\t\t\t'numResults' => 0,\n\t\t\t\t'error' => $e->getMessage(),\n\t\t\t), JSON_OPTIONS));\n\t}\n}\n\nfunction unreadCount() {\n\t//http://blog.martindoms.com/2009/10/16/using-the-google-reader-api-part-2/#unread-count\n\theader('Content-Type: application/json; charset=UTF-8');\n\n\t$totalUnreads = 0;\n\t$totalLastUpdate = 0;\n\n\t$categoryDAO = FreshRSS_Factory::createCategoryDao();\n\t$feedDAO = FreshRSS_Factory::createFeedDao();\n\t$feedsNewestItemUsec = $feedDAO->listFeedsNewestItemUsec();\n\n\tforeach ($categoryDAO->listCategories(true, true) as $cat) {\n\t\t$catLastUpdate = 0;\n\t\tforeach ($cat->feeds() as $feed) {\n\t\t\t$lastUpdate = isset($feedsNewestItemUsec['f_' . $feed->id()]) ? $feedsNewestItemUsec['f_' . $feed->id()] : 0;\n\t\t\t$unreadcounts[] = array(\n\t\t\t\t'id' => 'feed/' . $feed->id(),\n\t\t\t\t'count' => $feed->nbNotRead(),\n\t\t\t\t'newestItemTimestampUsec' => '' . $lastUpdate,\n\t\t\t);\n\t\t\tif ($catLastUpdate < $lastUpdate) {\n\t\t\t\t$catLastUpdate = $lastUpdate;\n\t\t\t}\n\t\t}\n\t\t$unreadcounts[] = array(\n\t\t\t'id' => 'user/-/label/' . htmlspecialchars_decode($cat->name(), ENT_QUOTES),\n\t\t\t'count' => $cat->nbNotRead(),\n\t\t\t'newestItemTimestampUsec' => '' . $catLastUpdate,\n\t\t);\n\t\t$totalUnreads += $cat->nbNotRead();\n\t\tif ($totalLastUpdate < $catLastUpdate) {\n\t\t\t$totalLastUpdate = $catLastUpdate;\n\t\t}\n\t}\n\n\t$tagDAO = FreshRSS_Factory::createTagDao();\n\t$tagsNewestItemUsec = $tagDAO->listTagsNewestItemUsec();\n\tforeach ($tagDAO->listTags(true) as $label) {\n\t\t$lastUpdate = isset($tagsNewestItemUsec['t_' . $label->id()]) ? $tagsNewestItemUsec['t_' . $label->id()] : 0;\n\t\t$unreadcounts[] = array(\n\t\t\t'id' => 'user/-/label/' . htmlspecialchars_decode($label->name(), ENT_QUOTES),\n\t\t\t'count' => $label->nbUnread(),\n\t\t\t'newestItemTimestampUsec' => '' . $lastUpdate,\n\t\t);\n\t}\n\n\t$unreadcounts[] = array(\n\t\t'id' => 'user/-/state/com.google/reading-list',\n\t\t'count' => $totalUnreads,\n\t\t'newestItemTimestampUsec' => '' . $totalLastUpdate,\n\t);\n\n\techo json_encode(array(\n\t\t'max' => $totalUnreads,\n\t\t'unreadcounts' => $unreadcounts,\n\t), JSON_OPTIONS), \"\\n\";\n\texit();\n}\n\nfunction entriesToArray($entries) {\n\tif (empty($entries)) {\n\t\treturn array();\n\t}\n\t$catDAO = FreshRSS_Factory::createCategoryDao();\n\t$categories = $catDAO->listCategories(true);\n\n\t$tagDAO = FreshRSS_Factory::createTagDao();\n\t$entryIdsTagNames = $tagDAO->getEntryIdsTagNames($entries);\n\tif ($entryIdsTagNames == false) {\n\t\t$entryIdsTagNames = array();\n\t}\n\n\t$items = array();\n\tforeach ($entries as $item) {\n\t\t/** @var FreshRSS_Entry $entry */\n\t\t$entry = Minz_ExtensionManager::callHook('entry_before_display', $item);\n\t\tif ($entry == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t$feed = FreshRSS_CategoryDAO::findFeed($categories, $entry->feedId());\n\t\t$entry->_feed($feed);\n\n\t\tif (isset($entryIdsTagNames['e_' . $entry->id()])) {\n\t\t\t$entry->_tags($entryIdsTagNames['e_' . $entry->id()]);\n\t\t}\n\n\t\t$items[] = $entry->toGReader('compat');\n\t}\n\treturn $items;\n}\n\nfunction streamContentsFilters($type, $streamId, $filter_target, $exclude_target, $start_time, $stop_time) {\n\tswitch ($type) {\n\t\tcase 'f':\t//feed\n\t\t\tif ($streamId != '' && !ctype_digit($streamId)) {\n\t\t\t\t$feedDAO = FreshRSS_Factory::createFeedDao();\n\t\t\t\t$streamId = htmlspecialchars($streamId, ENT_COMPAT, 'UTF-8');\n\t\t\t\t$feed = $feedDAO->searchByUrl($streamId);\n\t\t\t\t$streamId = $feed == null ? -1 : $feed->id();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'c':\t//category or label\n\t\t\t$categoryDAO = FreshRSS_Factory::createCategoryDao();\n\t\t\t$streamId = htmlspecialchars($streamId, ENT_COMPAT, 'UTF-8');\n\t\t\t$cat = $categoryDAO->searchByName($streamId);\n\t\t\tif ($cat != null) {\n\t\t\t\t$type = 'c';\n\t\t\t\t$streamId = $cat->id();\n\t\t\t} else {\n\t\t\t\t$tagDAO = FreshRSS_Factory::createTagDao();\n\t\t\t\t$tag = $tagDAO->searchByName($streamId);\n\t\t\t\tif ($tag != null) {\n\t\t\t\t\t$type = 't';\n\t\t\t\t\t$streamId = $tag->id();\n\t\t\t\t} else {\n\t\t\t\t\t$type = 'A';\n\t\t\t\t\t$streamId = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tswitch ($filter_target) {\n\t\tcase 'user/-/state/com.google/read':\n\t\t\t$state = FreshRSS_Entry::STATE_READ;\n\t\t\tbreak;\n\t\tcase 'user/-/state/com.google/unread':\n\t\t\t$state = FreshRSS_Entry::STATE_NOT_READ;\n\t\t\tbreak;\n\t\tcase 'user/-/state/com.google/starred':\n\t\t\t$state = FreshRSS_Entry::STATE_FAVORITE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$state = FreshRSS_Entry::STATE_ALL;\n\t\t\tbreak;\n\t}\n\n\tswitch ($exclude_target) {\n\t\tcase 'user/-/state/com.google/read':\n\t\t\t$state &= FreshRSS_Entry::STATE_NOT_READ;\n\t\t\tbreak;\n\t\tcase 'user/-/state/com.google/unread':\n\t\t\t$state &= FreshRSS_Entry::STATE_READ;\n\t\t\tbreak;\n\t\tcase 'user/-/state/com.google/starred':\n\t\t\t$state &= FreshRSS_Entry::STATE_NOT_FAVORITE;\n\t\t\tbreak;\n\t}\n\n\t$searches = new FreshRSS_BooleanSearch('');\n\tif ($start_time != '') {\n\t\t$search = new FreshRSS_Search('');\n\t\t$search->setMinDate($start_time);\n\t\t$searches->add($search);\n\t}\n\tif ($stop_time != '') {\n\t\t$search = new FreshRSS_Search('');\n\t\t$search->setMaxDate($stop_time);\n\t\t$searches->add($search);\n\t}\n\n\treturn array($type, $streamId, $state, $searches);\n}\n\nfunction streamContents($path, $include_target, $start_time, $stop_time, $count, $order, $filter_target, $exclude_target, $continuation) {\n//http://code.google.com/p/pyrfeed/wiki/GoogleReaderAPI\n//http://blog.martindoms.com/2009/10/16/using-the-google-reader-api-part-2/#feed\n\theader('Content-Type: application/json; charset=UTF-8');\n\n\tswitch ($path) {\n\t\tcase 'reading-list':\n\t\t\t$type = 'A';\n\t\t\tbreak;\n\t\tcase 'starred':\n\t\t\t$type = 's';\n\t\t\tbreak;\n\t\tcase 'feed':\n\t\t\t$type = 'f';\n\t\t\tbreak;\n\t\tcase 'label':\n\t\t\t$type = 'c';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$type = 'A';\n\t\t\tbreak;\n\t}\n\n\tlist($type, $include_target, $state, $searches) = streamContentsFilters($type, $include_target, $filter_target, $exclude_target, $start_time, $stop_time);\n\n\tif ($continuation != '') {\n\t\t$count++;\t//Shift by one element\n\t}\n\n\t$entryDAO = FreshRSS_Factory::createEntryDao();\n\t$entries = $entryDAO->listWhere($type, $include_target, $state, $order === 'o' ? 'ASC' : 'DESC', $count, $continuation, $searches);\n\t$entries = iterator_to_array($entries);\t//TODO: Improve\n\n\t$items = entriesToArray($entries);\n\n\tif ($continuation != '') {\n\t\tarray_shift($items);\t//Discard first element that was already sent in the previous response\n\t\t$count--;\n\t}\n\n\t$response = array(\n\t\t'id' => 'user/-/state/com.google/reading-list',\n\t\t'updated' => time(),\n\t\t'items' => $items,\n\t);\n\tif (count($entries) >= $count) {\n\t\t$entry = end($entries);\n\t\tif ($entry != false) {\n\t\t\t$response['continuation'] = '' . $entry->id();\n\t\t}\n\t}\n\n\techo json_encode($response, JSON_OPTIONS), \"\\n\";\n\texit();\n}\n\nfunction streamContentsItemsIds($streamId, $start_time, $stop_time, $count, $order, $filter_target, $exclude_target, $continuation) {\n//http://code.google.com/p/google-reader-api/wiki/ApiStreamItemsIds\n//http://code.google.com/p/pyrfeed/wiki/GoogleReaderAPI\n//http://blog.martindoms.com/2009/10/16/using-the-google-reader-api-part-2/#feed\n\t$type = 'A';\n\t$id = '';\n\tif ($streamId === 'user/-/state/com.google/reading-list') {\n\t\t$type = 'A';\n\t} elseif ($streamId === 'user/-/state/com.google/starred') {\n\t\t$type = 's';\n\t} elseif (strpos($streamId, 'feed/') === 0) {\n\t\t$type = 'f';\n\t\t$streamId = substr($streamId, 5);\n\t} elseif (strpos($streamId, 'user/-/label/') === 0) {\n\t\t$type = 'c';\n\t\t$streamId = substr($streamId, 13);\n\t}\n\n\tlist($type, $id, $state, $searches) = streamContentsFilters($type, $streamId, $filter_target, $exclude_target, $start_time, $stop_time);\n\n\tif ($continuation != '') {\n\t\t$count++;\t//Shift by one element\n\t}\n\n\t$entryDAO = FreshRSS_Factory::createEntryDao();\n\t$ids = $entryDAO->listIdsWhere($type, $id, $state, $order === 'o' ? 'ASC' : 'DESC', $count, $continuation, $searches);\n\n\tif ($continuation != '') {\n\t\tarray_shift($ids);\t//Discard first element that was already sent in the previous response\n\t\t$count--;\n\t}\n\n\tif (empty($ids) && isset($_GET['client']) && $_GET['client'] === 'newsplus') {\n\t\t$ids[] = 0;\t//For News+ bug https://github.com/noinnion/newsplus/issues/84#issuecomment-57834632\n\t}\n\t$itemRefs = array();\n\tforeach ($ids as $id) {\n\t\t$itemRefs[] = array(\n\t\t\t'id' => '' . $id,\t//64-bit decimal\n\t\t);\n\t}\n\n\t$response = array(\n\t\t'itemRefs' => $itemRefs,\n\t);\n\tif (count($ids) >= $count) {\n\t\t$id = end($ids);\n\t\tif ($id != false) {\n\t\t\t$response['continuation'] = '' . $id;\n\t\t}\n\t}\n\n\techo json_encode($response, JSON_OPTIONS), \"\\n\";\n\texit();\n}\n\nfunction streamContentsItems($e_ids, $order) {\n\theader('Content-Type: application/json; charset=UTF-8');\n\n\tforeach ($e_ids as $i => $e_id) {\n\t\t// https://feedhq.readthedocs.io/en/latest/api/terminology.html#items\n\t\tif (!ctype_digit($e_id) || $e_id[0] === '0') {\n\t\t\t$e_ids[$i] = hex2dec(basename($e_id));\t//Strip prefix 'tag:google.com,2005:reader/item/'\n\t\t}\n\t}\n\n\t$entryDAO = FreshRSS_Factory::createEntryDao();\n\t$entries = $entryDAO->listByIds($e_ids, $order === 'o' ? 'ASC' : 'DESC');\n\t$entries = iterator_to_array($entries);\t//TODO: Improve\n\n\t$items = entriesToArray($entries);\n\n\t$response = array(\n\t\t'id' => 'user/-/state/com.google/reading-list',\n\t\t'updated' => time(),\n\t\t'items' => $items,\n\t);\n\n\techo json_encode($response, JSON_OPTIONS), \"\\n\";\n\texit();\n}\n\nfunction editTag($e_ids, $a, $r) {\n\tforeach ($e_ids as $i => $e_id) {\n\t\tif (!ctype_digit($e_id) || $e_id[0] === '0') {\n\t\t\t$e_ids[$i] = hex2dec(basename($e_id));\t//Strip prefix 'tag:google.com,2005:reader/item/'\n\t\t}\n\t}\n\n\t$entryDAO = FreshRSS_Factory::createEntryDao();\n\t$tagDAO = FreshRSS_Factory::createTagDao();\n\n\tswitch ($a) {\n\t\tcase 'user/-/state/com.google/read':\n\t\t\t$entryDAO->markRead($e_ids, true);\n\t\t\tbreak;\n\t\tcase 'user/-/state/com.google/starred':\n\t\t\t$entryDAO->markFavorite($e_ids, true);\n\t\t\tbreak;\n\t\t/*case 'user/-/state/com.google/tracking-kept-unread':\n\t\t\tbreak;\n\t\tcase 'user/-/state/com.google/like':\n\t\t\tbreak;\n\t\tcase 'user/-/state/com.google/broadcast':\n\t\t\tbreak;*/\n\t\tdefault:\n\t\t\t$tagName = '';\n\t\t\tif (strpos($a, 'user/-/label/') === 0) {\n\t\t\t\t$tagName = substr($a, 13);\n\t\t\t} else {\n\t\t\t\t$user = Minz_Session::param('currentUser', '_');\n\t\t\t\t$prefix = 'user/' . $user . '/label/';\n\t\t\t\tif (strpos($a, $prefix) === 0) {\n\t\t\t\t\t$tagName = substr($a, strlen($prefix));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($tagName != '') {\n\t\t\t\t$tagName = htmlspecialchars($tagName, ENT_COMPAT, 'UTF-8');\n\t\t\t\t$tag = $tagDAO->searchByName($tagName);\n\t\t\t\tif ($tag == null) {\n\t\t\t\t\t$tagDAO->addTag(array('name' => $tagName));\n\t\t\t\t\t$tag = $tagDAO->searchByName($tagName);\n\t\t\t\t}\n\t\t\t\tif ($tag != null) {\n\t\t\t\t\tforeach ($e_ids as $e_id) {\n\t\t\t\t\t\t$tagDAO->tagEntry($tag->id(), $e_id, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\tswitch ($r) {\n\t\tcase 'user/-/state/com.google/read':\n\t\t\t$entryDAO->markRead($e_ids, false);\n\t\t\tbreak;\n\t\tcase 'user/-/state/com.google/starred':\n\t\t\t$entryDAO->markFavorite($e_ids, false);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (strpos($r, 'user/-/label/') === 0) {\n\t\t\t\t$tagName = substr($r, 13);\n\t\t\t\t$tagName = htmlspecialchars($tagName, ENT_COMPAT, 'UTF-8');\n\t\t\t\t$tag = $tagDAO->searchByName($tagName);\n\t\t\t\tif ($tag != null) {\n\t\t\t\t\tforeach ($e_ids as $e_id) {\n\t\t\t\t\t\t$tagDAO->tagEntry($tag->id(), $e_id, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\texit('OK');\n}\n\nfunction renameTag($s, $dest) {\n\tif ($s != '' && strpos($s, 'user/-/label/') === 0 &&\n\t\t$dest != '' && strpos($dest, 'user/-/label/') === 0) {\n\t\t$s = substr($s, 13);\n\t\t$s = htmlspecialchars($s, ENT_COMPAT, 'UTF-8');\n\t\t$dest = substr($dest, 13);\n\t\t$dest = htmlspecialchars($dest, ENT_COMPAT, 'UTF-8');\n\n\t\t$categoryDAO = FreshRSS_Factory::createCategoryDao();\n\t\t$cat = $categoryDAO->searchByName($s);\n\t\tif ($cat != null) {\n\t\t\t$categoryDAO->updateCategory($cat->id(), array('name' => $dest));\n\t\t\texit('OK');\n\t\t} else {\n\t\t\t$tagDAO = FreshRSS_Factory::createTagDao();\n\t\t\t$tag = $tagDAO->searchByName($s);\n\t\t\tif ($tag != null) {\n\t\t\t\t$tagDAO->updateTag($tag->id(), array('name' => $dest));\n\t\t\t\texit('OK');\n\t\t\t}\n\t\t}\n\t}\n\tbadRequest();\n}\n\nfunction disableTag($s) {\n\tif ($s != '' && strpos($s, 'user/-/label/') === 0) {\n\t\t$s = substr($s, 13);\n\t\t$s = htmlspecialchars($s, ENT_COMPAT, 'UTF-8');\n\t\t$categoryDAO = FreshRSS_Factory::createCategoryDao();\n\t\t$cat = $categoryDAO->searchByName($s);\n\t\tif ($cat != null) {\n\t\t\t$feedDAO = FreshRSS_Factory::createFeedDao();\n\t\t\t$feedDAO->changeCategory($cat->id(), 0);\n\t\t\tif ($cat->id() > 1) {\n\t\t\t\t$categoryDAO->deleteCategory($cat->id());\n\t\t\t}\n\t\t\texit('OK');\n\t\t} else {\n\t\t\t$tagDAO = FreshRSS_Factory::createTagDao();\n\t\t\t$tag = $tagDAO->searchByName($s);\n\t\t\tif ($tag != null) {\n\t\t\t\t$tagDAO->deleteTag($tag->id());\n\t\t\t\texit('OK');\n\t\t\t}\n\t\t}\n\t}\n\tbadRequest();\n}\n\nfunction markAllAsRead($streamId, $olderThanId) {\n\t$entryDAO = FreshRSS_Factory::createEntryDao();\n\tif (strpos($streamId, 'feed/') === 0) {\n\t\t$f_id = basename($streamId);\n\t\tif (!ctype_digit($f_id)) {\n\t\t\tbadRequest();\n\t\t}\n\t\t$f_id = intval($f_id);\n\t\t$entryDAO->markReadFeed($f_id, $olderThanId);\n\t} elseif (strpos($streamId, 'user/-/label/') === 0) {\n\t\t$c_name = substr($streamId, 13);\n\t\t$c_name = htmlspecialchars($c_name, ENT_COMPAT, 'UTF-8');\n\t\t$categoryDAO = FreshRSS_Factory::createCategoryDao();\n\t\t$cat = $categoryDAO->searchByName($c_name);\n\t\tif ($cat != null) {\n\t\t\t$entryDAO->markReadCat($cat->id(), $olderThanId);\n\t\t} else {\n\t\t\t$tagDAO = FreshRSS_Factory::createTagDao();\n\t\t\t$tag = $tagDAO->searchByName($c_name);\n\t\t\tif ($tag != null) {\n\t\t\t\t$entryDAO->markReadTag($tag->id(), $olderThanId);\n\t\t\t} else {\n\t\t\t\tbadRequest();\n\t\t\t}\n\t\t}\n\t} elseif ($streamId === 'user/-/state/com.google/reading-list') {\n\t\t$entryDAO->markReadEntries($olderThanId, false, -1);\n\t} else {\n\t\tbadRequest();\n\t}\n\texit('OK');\n}\n\n$pathInfo = '';\nif (empty($_SERVER['PATH_INFO'])) {\n\tif (!empty($_SERVER['ORIG_PATH_INFO'])) {\n\t\t// Compatibility https://php.net/reserved.variables.server\n\t\t$pathInfo = $_SERVER['ORIG_PATH_INFO'];\n\t}\n} else {\n\t$pathInfo = $_SERVER['PATH_INFO'];\n}\n$pathInfo = urldecode($pathInfo);\n$pathInfo = preg_replace('%^(/api)?(/greader\\.php)?%', '', $pathInfo);\t//Discard common errors\nif ($pathInfo == '') {\n\texit('OK');\n}\n$pathInfos = explode('/', $pathInfo);\nif (count($pathInfos) < 3) {\n\tbadRequest();\n}\n\nFreshRSS_Context::initSystem();\n\n//Minz_Log::debug('----------------------------------------------------------------', API_LOG);\n//Minz_Log::debug(debugInfo(), API_LOG);\n\nif (!FreshRSS_Context::$system_conf->api_enabled) {\n\tserviceUnavailable();\n} elseif ($pathInfos[1] === 'check' && $pathInfos[2] === 'compatibility') {\n\tcheckCompatibility();\n}\n\nMinz_Session::init('FreshRSS', true);\n\nif ($pathInfos[1] !== 'accounts') {\n\tauthorizationToUser();\n}\nif (FreshRSS_Context::$user_conf != null) {\n\tMinz_Translate::init(FreshRSS_Context::$user_conf->language);\n\tMinz_ExtensionManager::init();\n\tMinz_ExtensionManager::enableByList(FreshRSS_Context::$user_conf->extensions_enabled);\n} else {\n\tMinz_Translate::init();\n}\n\nif ($pathInfos[1] === 'accounts') {\n\tif (($pathInfos[2] === 'ClientLogin') && isset($_REQUEST['Email']) && isset($_REQUEST['Passwd'])) {\n\t\tclientLogin($_REQUEST['Email'], $_REQUEST['Passwd']);\n\t}\n} elseif ($pathInfos[1] === 'reader' && $pathInfos[2] === 'api' && isset($pathInfos[3]) && $pathInfos[3] === '0' && isset($pathInfos[4])) {\n\tif (Minz_Session::param('currentUser', '') == '') {\n\t\tunauthorized();\n\t}\n\t$timestamp = isset($_GET['ck']) ? intval($_GET['ck']) : 0;\t//ck=[unix timestamp] : Use the current Unix time here, helps Google with caching.\n\tswitch ($pathInfos[4]) {\n\t\tcase 'stream':\n\t\t\t/* xt=[exclude target] : Used to exclude certain items from the feed.\n\t\t\t * For example, using xt=user/-/state/com.google/read will exclude items\n\t\t\t * that the current user has marked as read, or xt=feed/[feedurl] will\n\t\t\t * exclude items from a particular feed (obviously not useful in this\n\t\t\t * request, but xt appears in other listing requests). */\n\t\t\t$exclude_target = isset($_GET['xt']) ? $_GET['xt'] : '';\n\t\t\t$filter_target = isset($_GET['it']) ? $_GET['it'] : '';\n\t\t\t//n=[integer] : The maximum number of results to return.\n\t\t\t$count = isset($_GET['n']) ? intval($_GET['n']) : 20;\n\t\t\t//r=[d|n|o] : Sort order of item results. d or n gives items in descending date order, o in ascending order.\n\t\t\t$order = isset($_GET['r']) ? $_GET['r'] : 'd';\n\t\t\t/* ot=[unix timestamp] : The time from which you want to retrieve\n\t\t\t * items. Only items that have been crawled by Google Reader after\n\t\t\t * this time will be returned. */\n\t\t\t$start_time = isset($_GET['ot']) ? intval($_GET['ot']) : 0;\n\t\t\t$stop_time = isset($_GET['nt']) ? intval($_GET['nt']) : 0;\n\t\t\t/* Continuation token. If a StreamContents response does not represent\n\t\t\t * all items in a timestamp range, it will have a continuation attribute.\n\t\t\t * The same request can be re-issued with the value of that attribute put\n\t\t\t * in this parameter to get more items */\n\t\t\t$continuation = isset($_GET['c']) ? trim($_GET['c']) : '';\n\t\t\tif (!ctype_digit($continuation)) {\n\t\t\t\t$continuation = '';\n\t\t\t}\n\t\t\tif (isset($pathInfos[5]) && $pathInfos[5] === 'contents') {\n\t\t\t\tif (!isset($pathInfos[6]) && isset($_GET['s'])) {\n\t\t\t\t\t// Compatibility BazQux API https://github.com/bazqux/bazqux-api#fetching-streams\n\t\t\t\t\t$streamIdInfos = explode('/', $_GET['s']);\n\t\t\t\t\tforeach ($streamIdInfos as $streamIdInfo) {\n\t\t\t\t\t\t$pathInfos[] = $streamIdInfo;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isset($pathInfos[6]) && isset($pathInfos[7])) {\n\t\t\t\t\tif ($pathInfos[6] === 'feed') {\n\t\t\t\t\t\t$include_target = $pathInfos[7];\n\t\t\t\t\t\tif ($include_target != '' && !ctype_digit($include_target)) {\n\t\t\t\t\t\t\t$include_target = empty($_SERVER['REQUEST_URI']) ? '' : $_SERVER['REQUEST_URI'];\n\t\t\t\t\t\t\tif (preg_match('#/reader/api/0/stream/contents/feed/([A-Za-z0-9\\'!*()%$_.~+-]+)#', $include_target, $matches) && isset($matches[1])) {\n\t\t\t\t\t\t\t\t$include_target = urldecode($matches[1]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$include_target = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstreamContents($pathInfos[6], $include_target, $start_time, $stop_time, $count, $order, $filter_target, $exclude_target, $continuation);\n\t\t\t\t\t} elseif ($pathInfos[6] === 'user' && isset($pathInfos[8]) && isset($pathInfos[9])) {\n\t\t\t\t\t\tif ($pathInfos[8] === 'state') {\n\t\t\t\t\t\t\tif ($pathInfos[9] === 'com.google' && isset($pathInfos[10])) {\n\t\t\t\t\t\t\t\tif ($pathInfos[10] === 'reading-list' || $pathInfos[10] === 'starred') {\n\t\t\t\t\t\t\t\t\t$include_target = '';\n\t\t\t\t\t\t\t\t\tstreamContents($pathInfos[10], $include_target, $start_time, $stop_time, $count, $order,\n\t\t\t\t\t\t\t\t\t\t$filter_target, $exclude_target, $continuation);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} elseif ($pathInfos[8] === 'label') {\n\t\t\t\t\t\t\t$include_target = $pathInfos[9];\n\t\t\t\t\t\t\tstreamContents($pathInfos[8], $include_target, $start_time, $stop_time, $count, $order, $filter_target, $exclude_target, $continuation);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\t//EasyRSS, FeedMe\n\t\t\t\t\t$include_target = '';\n\t\t\t\t\tstreamContents('reading-list', $include_target, $start_time, $stop_time, $count, $order, $filter_target, $exclude_target, $continuation);\n\t\t\t\t}\n\t\t\t} elseif ($pathInfos[5] === 'items') {\n\t\t\t\tif ($pathInfos[6] === 'ids' && isset($_GET['s'])) {\n\t\t\t\t\t/* StreamId for which to fetch the item IDs. The parameter may\n\t\t\t\t\t * be repeated to fetch the item IDs from multiple streams at once\n\t\t\t\t\t * (more efficient from a backend perspective than multiple requests). */\n\t\t\t\t\t$streamId = $_GET['s'];\n\t\t\t\t\tstreamContentsItemsIds($streamId, $start_time, $stop_time, $count, $order, $filter_target, $exclude_target, $continuation);\n\t\t\t\t} elseif ($pathInfos[6] === 'contents' && isset($_POST['i'])) {\t//FeedMe\n\t\t\t\t\t$e_ids = multiplePosts('i');\t//item IDs\n\t\t\t\t\tstreamContentsItems($e_ids, $order);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'tag':\n\t\t\tif (isset($pathInfos[5]) && $pathInfos[5] === 'list') {\n\t\t\t\t$output = isset($_GET['output']) ? $_GET['output'] : '';\n\t\t\t\tif ($output !== 'json') notImplemented();\n\t\t\t\ttagList();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'subscription':\n\t\t\tif (isset($pathInfos[5])) {\n\t\t\t\tswitch ($pathInfos[5]) {\n\t\t\t\t\tcase 'export':\n\t\t\t\t\t\tsubscriptionExport();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'import':\n\t\t\t\t\t\tif (isset($_SERVER['REQUEST_METHOD']) && $_SERVER['REQUEST_METHOD'] === 'POST' && $ORIGINAL_INPUT != '') {\n\t\t\t\t\t\t\tsubscriptionImport($ORIGINAL_INPUT);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'list':\n\t\t\t\t\t\t$output = isset($_GET['output']) ? $_GET['output'] : '';\n\t\t\t\t\t\tif ($output !== 'json') notImplemented();\n\t\t\t\t\t\tsubscriptionList();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'edit':\n\t\t\t\t\t\tif (isset($_REQUEST['s']) && isset($_REQUEST['ac'])) {\n\t\t\t\t\t\t\t//StreamId to operate on. The parameter may be repeated to edit multiple subscriptions at once\n\t\t\t\t\t\t\t$streamNames = empty($_POST['s']) && isset($_GET['s']) ? array($_GET['s']) : multiplePosts('s');\n\t\t\t\t\t\t\t/* Title to use for the subscription. For the `subscribe` action,\n\t\t\t\t\t\t\t * if not specified then the feed\u2019s current title will be used. Can\n\t\t\t\t\t\t\t * be used with the `edit` action to rename a subscription */\n\t\t\t\t\t\t\t$titles = empty($_POST['t']) && isset($_GET['t']) ? array($_GET['t']) : multiplePosts('t');\n\t\t\t\t\t\t\t$action = $_REQUEST['ac'];\t//Action to perform on the given StreamId. Possible values are `subscribe`, `unsubscribe` and `edit`\n\t\t\t\t\t\t\t$add = isset($_REQUEST['a']) ? $_REQUEST['a'] : '';\t//StreamId to add the subscription to (generally a user label)\n\t\t\t\t\t\t\t$remove = isset($_REQUEST['r']) ? $_REQUEST['r'] : '';\t//StreamId to remove the subscription from (generally a user label)\n\t\t\t\t\t\t\tsubscriptionEdit($streamNames, $titles, $action, $add, $remove);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'quickadd':\t//https://github.com/theoldreader/api\n\t\t\t\t\t\tif (isset($_REQUEST['quickadd'])) {\n\t\t\t\t\t\t\tquickadd($_REQUEST['quickadd']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'unread-count':\n\t\t\t$output = isset($_GET['output']) ? $_GET['output'] : '';\n\t\t\tif ($output !== 'json') notImplemented();\n\t\t\tunreadCount();\n\t\t\tbreak;\n\t\tcase 'edit-tag':\t//http://blog.martindoms.com/2010/01/20/using-the-google-reader-api-part-3/\n\t\t\t$token = isset($_POST['T']) ? trim($_POST['T']) : '';\n\t\t\tcheckToken(FreshRSS_Context::$user_conf, $token);\n\t\t\t$a = isset($_POST['a']) ? $_POST['a'] : '';\t//Add:\tuser/-/state/com.google/read\tuser/-/state/com.google/starred\n\t\t\t$r = isset($_POST['r']) ? $_POST['r'] : '';\t//Remove:\tuser/-/state/com.google/read\tuser/-/state/com.google/starred\n\t\t\t$e_ids = multiplePosts('i');\t//item IDs\n\t\t\teditTag($e_ids, $a, $r);\n\t\t\tbreak;\n\t\tcase 'rename-tag':\t//https://github.com/theoldreader/api\n\t\t\t$token = isset($_POST['T']) ? trim($_POST['T']) : '';\n\t\t\tcheckToken(FreshRSS_Context::$user_conf, $token);\n\t\t\t$s = isset($_POST['s']) ? $_POST['s'] : '';\t//user/-/label/Folder\n\t\t\t$dest = isset($_POST['dest']) ? $_POST['dest'] : '';\t//user/-/label/NewFolder\n\t\t\trenameTag($s, $dest);\n\t\t\tbreak;\n\t\tcase 'disable-tag':\t//https://github.com/theoldreader/api\n\t\t\t$token = isset($_POST['T']) ? trim($_POST['T']) : '';\n\t\t\tcheckToken(FreshRSS_Context::$user_conf, $token);\n\t\t\t$s_s = multiplePosts('s');\n\t\t\tforeach ($s_s as $s) {\n\t\t\t\tdisableTag($s);\t//user/-/label/Folder\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mark-all-as-read':\n\t\t\t$token = isset($_POST['T']) ? trim($_POST['T']) : '';\n\t\t\tcheckToken(FreshRSS_Context::$user_conf, $token);\n\t\t\t$streamId = $_POST['s'] ?? '';\n\t\t\t$ts = isset($_POST['ts']) ? $_POST['ts'] : '0';\t//Older than timestamp in nanoseconds\n\t\t\tif (!ctype_digit($ts)) {\n\t\t\t\tbadRequest();\n\t\t\t}\n\t\t\tmarkAllAsRead($streamId, $ts);\n\t\t\tbreak;\n\t\tcase 'token':\n\t\t\ttoken(FreshRSS_Context::$user_conf);\n\t\t\tbreak;\n\t\tcase 'user-info':\n\t\t\tuserInfo();\n\t\t\tbreak;\n\t}\n}\n\nbadRequest();\n</Code>"
                }
            ],
            "url": "https://github.com/FreshRSS/FreshRSS/commit/075cf4c800063e3cc65c3d41a9c23222e8ebb554",
            "description": "FreshRSS is a self-hosted RSS feed aggregator. When using the greader API, the provided password is logged in clear in `users/_/log_api.txt` in the case where the authentication fails. The issues occurs in `authorizationToUser()` in `greader.php`. If there is an issue with the request or the credentials, `unauthorized()` or `badRequest()` is called. Both these functions are printing the return of `debugInfo()` in the logs.  `debugInfo()` will return the content of the request. By default, this will be saved in `users/_/log_api.txt` and if the const `COPY_LOG_TO_SYSLOG` is true, in syslogs as well. Exploiting this issue requires having access to logs produced by FreshRSS. Using the information from the logs, a malicious individual could get users' API keys (would be displayed if the users fills in a bad username) or passwords.",
            "date": "2023-03-06",
            "github_description": "Strip passwords and tokens from API logs\nOnly log failed requests information when in debug mode",
            "llm_raw_output": null,
            "llm_output": null,
            "ground_truth_CVE": "CVE-2023-22481",
            "ground_truth_CWEs": [
                "CWE-532"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": "LLM OUTPUT IS NONE, POTENTIALLY BECAUSE TOKENS EXCEED",
            "equal_severity": null,
            "cwe_evaluation": "None"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Invenio-Drafts-Resources is a submission/deposit module for Invenio, a software framework for research data management. Invenio-Drafts-Resources prior to versions 0.13.7 and 0.14.6 does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated a user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. *cannot* change a record from restricted to public. The problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.\nFile: invenio_drafts_resources/services/records/service.py\nContent: \n<Code>\n# -*- coding: utf-8 -*-\n#\n# Copyright (C) 2020-2021 CERN.\n# Copyright (C) 2020 Northwestern University.\n#\n# Invenio-Drafts-Resources is free software; you can redistribute it and/or\n# modify it under the terms of the MIT License; see LICENSE file for more\n# details.\n\n\"\"\"Primary service for working with records and drafts.\"\"\"\n\nfrom elasticsearch_dsl.query import Q\nfrom invenio_db import db\nfrom invenio_records_resources.services import LinksTemplate\nfrom invenio_records_resources.services import \\\n    RecordService as RecordServiceBase\nfrom invenio_records_resources.services import ServiceSchemaWrapper\nfrom invenio_records_resources.services.uow import RecordCommitOp, \\\n    RecordDeleteOp, RecordIndexOp, unit_of_work\nfrom sqlalchemy.orm.exc import NoResultFound\n\n\nclass RecordService(RecordServiceBase):\n    \"\"\"Record and draft service interface.\n\n    This service provides an interface to business logic for published and\n    draft records.\n    \"\"\"\n\n    def __init__(self, config, files_service=None, draft_files_service=None):\n        \"\"\"Constructor for RecordService.\"\"\"\n        super().__init__(config)\n        self._files = files_service\n        self._draft_files = draft_files_service\n\n    #\n    # Subservices\n    #\n    @property\n    def files(self):\n        \"\"\"Record files service.\"\"\"\n        return self._files\n\n    @property\n    def draft_files(self):\n        \"\"\"Draft files service.\"\"\"\n        return self._draft_files\n\n    #\n    # Properties\n    #\n    @property\n    def schema_parent(self):\n        \"\"\"Schema for parent records.\"\"\"\n        return ServiceSchemaWrapper(self, schema=self.config.schema_parent)\n\n    @property\n    def draft_cls(self):\n        \"\"\"Factory for creating a record class.\"\"\"\n        return self.config.draft_cls\n\n    # High-level API\n    # Inherits record search, read, create, delete and update\n\n    def update(self, *args, **kwargs):\n        \"\"\"Do not use.\"\"\"\n        raise NotImplementedError(\"Records should be updated via their draft.\")\n\n    def search_drafts(self, identity, params=None, es_preference=None,\n                      **kwargs):\n        \"\"\"Search for drafts records matching the querystring.\"\"\"\n        self.require_permission(identity, 'search_drafts')\n\n        # Prepare and execute the search\n        params = params or {}\n\n        search_result = self._search(\n            'search_drafts',\n            identity,\n            params,\n            es_preference,\n            record_cls=self.draft_cls,\n            search_opts=self.config.search_drafts,\n            # `has_draft` systemfield is not defined here. This is not ideal\n            # but it helps avoid overriding the method. See how is used in\n            # https://github.com/inveniosoftware/invenio-rdm-records\n            extra_filter=Q('term', has_draft=False),\n            permission_action='read_draft',\n            **kwargs\n        ).execute()\n\n        return self.result_list(\n            self,\n            identity,\n            search_result,\n            params,\n            links_tpl=LinksTemplate(self.config.links_search_drafts, context={\n                \"args\": params\n            }),\n            links_item_tpl=self.links_item_tpl,\n        )\n\n    def search_versions(self, id_, identity, params=None, es_preference=None,\n                        **kwargs):\n        \"\"\"Search for record's versions.\"\"\"\n        try:\n            record = self.record_cls.pid.resolve(id_, registered_only=False)\n        except NoResultFound:\n            record = self.draft_cls.pid.resolve(id_, registered_only=False)\n\n        self.require_permission(identity, \"read\", record=record)\n\n        # Prepare and execute the search\n        params = params or {}\n\n        search_result = self._search(\n            'search_versions',\n            identity,\n            params,\n            es_preference,\n            record_cls=self.record_cls,\n            search_opts=self.config.search_versions,\n            extra_filter=Q(\n                'term', **{'parent.id': str(record.parent.pid.pid_value)}),\n            permission_action='read',\n            **kwargs\n        ).execute()\n\n        return self.result_list(\n            self,\n            identity,\n            search_result,\n            params,\n            links_tpl=LinksTemplate(\n                self.config.links_search_versions,\n                context={\"id\": id_, \"args\": params}\n            ),\n            links_item_tpl=self.links_item_tpl,\n        )\n\n    def read_draft(self, id_, identity):\n        \"\"\"Retrieve a draft.\"\"\"\n        # Resolve and require permission\n        draft = self.draft_cls.pid.resolve(id_, registered_only=False)\n        self.require_permission(identity, \"read_draft\", record=draft)\n\n        # Run components\n        for component in self.components:\n            if hasattr(component, 'read_draft'):\n                component.read_draft(identity, draft=draft)\n\n        return self.result_item(\n            self, identity, draft, links_tpl=self.links_item_tpl)\n\n    def read_latest(self, id_, identity):\n        \"\"\"Retrieve latest record.\"\"\"\n        # Resolve and require permission\n        record = self.record_cls.pid.resolve(id_)\n\n        # Retrieve latest if record is not\n        if not record.versions.is_latest:\n            record = self.record_cls.get_record(record.versions.latest_id)\n\n        self.require_permission(identity, \"read\", record=record)\n\n        return self.result_item(\n            self, identity, record, links_tpl=self.links_item_tpl)\n\n    @unit_of_work()\n    def update_draft(self, id_, identity, data, revision_id=None, uow=None):\n        \"\"\"Replace a draft.\"\"\"\n        draft = self.draft_cls.pid.resolve(id_, registered_only=False)\n\n        self.check_revision_id(draft, revision_id)\n\n        # Permissions\n        self.require_permission(identity, \"update_draft\", record=draft)\n\n        # Load data with service schema\n        data, errors = self.schema.load(\n            data,\n            context=dict(\n                identity=identity,\n                pid=draft.pid,\n                record=draft,\n            ),\n            # Saving a draft only saves valid metadata and reports\n            # (doesn't raise) errors\n            raise_errors=False\n        )\n\n        # Run components\n        self.run_components(\n            'update_draft', identity, record=draft, data=data,\n            errors=errors, uow=uow\n        )\n\n        # Commit and index\n        uow.register(RecordCommitOp(draft, indexer=self.indexer))\n\n        return self.result_item(\n            self,\n            identity,\n            draft,\n            links_tpl=self.links_item_tpl,\n            errors=errors\n        )\n\n    @unit_of_work()\n    def create(self, identity, data, uow=None):\n        \"\"\"Create a draft for a new record.\n\n        It does NOT eagerly create the associated record.\n        \"\"\"\n        res = self._create(\n           self.draft_cls,\n           identity,\n           data,\n           raise_errors=False,\n           uow=uow,\n        )\n        uow.register(RecordCommitOp(res._record.parent))\n        return res\n\n    @unit_of_work()\n    def edit(self, id_, identity, uow=None):\n        \"\"\"Create a new revision or a draft for an existing record.\n\n        :param id_: record PID value.\n        \"\"\"\n        # Draft exists - return it\n        try:\n            draft = self.draft_cls.pid.resolve(id_, registered_only=False)\n            self.require_permission(identity, \"edit\", record=draft)\n            return self.result_item(\n                self, identity, draft, links_tpl=self.links_item_tpl)\n        except NoResultFound:\n            pass\n\n        # Draft does not exists - so get the main record we want to edit and\n        # create a draft from it\n        record = self.record_cls.pid.resolve(id_)\n        self.require_permission(identity, \"edit\", record=record)\n        draft = self.draft_cls.edit(record)\n\n        # Run components\n        self.run_components(\n            \"edit\", identity, draft=draft, record=record, uow=uow)\n\n        uow.register(RecordCommitOp(draft, indexer=self.indexer))\n\n        # Reindex the record to trigger update of computed values in the\n        # available dumpers of the record.\n        uow.register(RecordIndexOp(record, indexer=self.indexer))\n\n        return self.result_item(\n            self, identity, draft, links_tpl=self.links_item_tpl)\n\n    @unit_of_work()\n    def publish(self, id_, identity, uow=None):\n        \"\"\"Publish a draft.\n\n        Idea:\n            - Get the draft from the data layer (draft is not passed in)\n            - Validate it more strictly than when it was originally saved\n              (drafts can be incomplete but only complete drafts can be turned\n              into records)\n            - Create or update associated (published) record with data\n        \"\"\"\n        self.require_permission(identity, \"publish\")\n\n        # Get the draft\n        draft = self.draft_cls.pid.resolve(id_, registered_only=False)\n\n        # Validate the draft strictly - since a draft can be saved with errors\n        # we do a strict validation here to make sure only valid drafts can be\n        # published.\n        self._validate_draft(identity, draft)\n\n        # Create the record from the draft\n        latest_id = draft.versions.latest_id\n        record = self.record_cls.publish(draft)\n\n        # Run components\n        self.run_components(\n            'publish', identity, draft=draft, record=record, uow=uow)\n\n        # Commit and index\n        uow.register(RecordCommitOp(record, indexer=self.indexer))\n        uow.register(RecordDeleteOp(draft, force=False, indexer=self.indexer))\n\n        if latest_id:\n            self._reindex_latest(latest_id, uow=uow)\n\n        return self.result_item(\n            self, identity, record, links_tpl=self.links_item_tpl)\n\n    @unit_of_work()\n    def new_version(self, id_, identity, uow=None):\n        \"\"\"Create a new version of a record.\"\"\"\n        # Get the a record - i.e. you can only create a new version in case\n        # at least one published record already exists.\n        record = self.record_cls.pid.resolve(id_)\n\n        # Check permissions\n        self.require_permission(identity, \"new_version\", record=record)\n\n        # Draft for new version already exists? if so return it\n        if record.versions.next_draft_id:\n            next_draft = self.draft_cls.get_record(\n                record.versions.next_draft_id)\n            return self.result_item(\n                self, identity, next_draft, links_tpl=self.links_item_tpl)\n\n        # Draft for new version does not exists, so create it\n        next_draft = self.draft_cls.new_version(record)\n\n        # Get the latest published record if it's not the current one.\n        if not record.versions.is_latest:\n            record = self.record_cls.get_record(record.versions.latest_id)\n\n        # Run components\n        self.run_components(\n            'new_version', identity, draft=next_draft, record=record, uow=uow)\n\n        # Commit and index\n        uow.register(RecordCommitOp(next_draft, indexer=self.indexer))\n\n        self._reindex_latest(\n            next_draft.versions.latest_id, record=record, uow=uow)\n\n        return self.result_item(\n            self, identity, next_draft, links_tpl=self.links_item_tpl)\n\n    @unit_of_work()\n    def delete_draft(self, id_, identity, revision_id=None, uow=None):\n        \"\"\"Delete a record from database and search indexes.\"\"\"\n        draft = self.draft_cls.pid.resolve(id_, registered_only=False)\n        latest_id = draft.versions.latest_id\n\n        self.check_revision_id(draft, revision_id)\n\n        # Permissions\n        self.require_permission(identity, \"delete_draft\", record=draft)\n\n        # Get published record if exists\n        try:\n            record = self.record_cls.get_record(draft.id)\n        except NoResultFound:\n            record = None\n\n        # We soft-delete a draft when a published record exists, in order to\n        # keep the version_id counter around for optimistic concurrency\n        # control (both for ES indexing and for REST API clients)\n        force = False if record else True\n\n        # Run components\n        self.run_components(\n            'delete_draft', identity, draft=draft, record=record,\n            force=force, uow=uow\n        )\n\n        # Note, the parent record deletion logic is implemented in the\n        # ParentField and will automatically take care of deleting the parent\n        # record in case this is the only draft that exists for the parent.\n        # We refresh the index because users are usually redirected to a\n        # search result immediately after, and we don't want the users to see\n        # their just deleted draft.\n        uow.register(RecordDeleteOp(\n            draft, indexer=self.indexer, force=force, index_refresh=True))\n\n        if force:\n            # Case 1: We deleted a new draft (without a published record) or a\n            # new version draft (without a published).\n            # In this case, we reindex the latest published record/draft\n            self._reindex_latest(latest_id, refresh=True, uow=uow)\n        else:\n            # Case 2: We deleted a draft for a published record.\n            # In this case we reindex just the published record to trigger and\n            # update of computed values.\n            uow.register(RecordIndexOp(\n                record, indexer=self.indexer, index_refresh=True))\n\n        return True\n\n    @unit_of_work()\n    def import_files(self, id_, identity, uow=None):\n        \"\"\"Import files from previous record version.\"\"\"\n        if self.draft_files is None:\n            raise RuntimeError(\"Files support is not enabled.\")\n\n        # Read draft\n        draft = self.draft_cls.pid.resolve(id_, registered_only=False)\n        self.require_permission(identity, \"draft_create_files\", record=draft)\n\n        # Retrieve latest record\n        record = self.record_cls.get_record(draft.versions.latest_id)\n        self.require_permission(identity, \"read_files\", record=record)\n\n        # Run components\n        self.run_components(\n            'import_files', identity, draft=draft, record=record, uow=uow)\n\n        # Commit and index\n        uow.register(RecordCommitOp(draft, indexer=self.indexer))\n\n        return self.draft_files.file_result_list(\n            self.draft_files,\n            identity,\n            results=draft.files.values(),\n            record=draft,\n            links_tpl=self.draft_files.file_links_list_tpl(id_),\n            links_item_tpl=self.draft_files.file_links_item_tpl(id_),\n        )\n\n    def rebuild_index(self, identity):\n        \"\"\"Reindex all records and drafts.\n\n        Note: Skips (soft) deleted records and drafts.\n        \"\"\"\n        ret_val = super().rebuild_index(identity)\n\n        for draft_meta in self.draft_cls.model_cls.query.all():\n            draft = self.draft_cls(draft_meta.data, model=draft_meta)\n            if not draft.is_deleted:\n                self.indexer.index(draft)\n\n        return ret_val\n\n    def validate_draft(self, identity, id_):\n        \"\"\"Validate a draft.\"\"\"\n        draft = self.draft_cls.pid.resolve(id_, registered_only=False)\n        self._validate_draft(identity, draft)\n\n    def _validate_draft(self, identity, draft):\n        \"\"\"Validate a draft.\n\n        This method is internal because it works with a data access layer\n        draft, and thus should not be called from outside the service.\n        \"\"\"\n        # Convert to draft into service layer draft result item (a record\n        # projection for the given identity). This way we can load and validate\n        # the data with the service schema.\n        draft_item = self.result_item(self, identity, draft)\n        # Validate the data - will raise ValidationError if not valid.\n        self.schema.load(\n            data=draft_item.data,\n            context=dict(\n                identity=identity,\n                pid=draft.pid,\n                record=draft,\n            ),\n            raise_errors=True  # this is the default, but might as well be\n                               # explicit\n        )\n\n    @unit_of_work()\n    def _reindex_latest(self, latest_id, record=None, draft=None,\n                        refresh=False, uow=None):\n        \"\"\"Reindex the latest published record and draft.\n\n        This triggers and update of computed values in the index, such as\n        \"is_latest\".\n\n        This method is internal because it works with a data access layer\n        record/draft, and thus should not be called from outside the service.\n        \"\"\"\n        # We only have a draft, no latest to index\n        if not latest_id:\n            return\n\n        # Note, the record may not be the latest published record, and we only\n        # want to index the latest published.\n        if record is None or latest_id != record.id:\n            record = self.record_cls.get_record(latest_id)\n        uow.register(\n            RecordIndexOp(record, indexer=self.indexer, index_refresh=refresh))\n\n        # Note, a draft may or may not exists for a published record (depending\n        # on if it's being edited).\n        try:\n            draft = self.draft_cls.get_record(latest_id)\n            uow.register(RecordIndexOp(\n                draft, indexer=self.indexer, index_refresh=refresh))\n        except NoResultFound:\n            pass\n\n    def _get_record_and_parent_by_id(self, id_):\n        \"\"\"Resolve the record and its parent, by the given ID.\n\n        If the ID belongs to a parent record, no child record will be\n        resolved.\n        \"\"\"\n        record = self.record_cls.pid.resolve(id_, registered_only=False)\n        parent = record.parent\n\n        return record, parent\n\n    def _get_draft_and_parent_by_id(self, id_):\n        \"\"\"Resolve the draft and its parent, by the given ID.\"\"\"\n        draft = self.draft_cls.pid.resolve(id_, registered_only=False)\n        parent = draft.parent\n\n        return draft, parent\n\n    @unit_of_work()\n    def _index_related_records(self, record, parent, uow=None):\n        \"\"\"Index all records that are related to the specified ones.\"\"\"\n        siblings = self.record_cls.get_records_by_parent(\n            parent or record.parent\n        )\n\n        # TODO only index the current record immediately;\n        #      all siblings should be sent to a high-priority celery task\n        #      instead (requires bulk indexing to work)\n        for sibling in siblings:\n            uow.register(RecordIndexOp(sibling, indexer=self.indexer))\n\n    @unit_of_work()\n    def cleanup_drafts(self, timedelta, uow=None):\n        \"\"\"Hard delete of soft deleted drafts.\n\n        :param int timedelta: timedelta that should pass since\n            the last update of the draft in order to be hard deleted.\n        \"\"\"\n        self.draft_cls.cleanup_drafts(timedelta)\n</Code>"
                }
            ],
            "url": "https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626",
            "description": "Invenio-Drafts-Resources is a submission/deposit module for Invenio, a software framework for research data management. Invenio-Drafts-Resources prior to versions 0.13.7 and 0.14.6 does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated a user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. *cannot* change a record from restricted to public. The problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.",
            "date": "2021-12-06",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n    \"CWE_IDS\": [\"CWE-284\"],\n    \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-284"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2021-43781",
            "ground_truth_CWEs": [
                "CWE-863"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: An out-of-bounds write issue has been discovered in the backspace handling of the checkType() function in etc.c within the W3M application. This vulnerability is triggered by supplying a specially crafted HTML file to the w3m binary. Exploitation of this flaw could lead to application crashes, resulting in a denial of service condition.\nFile: etc.c\nContent: \n<Code>\n/* $Id: etc.c,v 1.81 2007/05/23 15:06:05 inu Exp $ */\n#include \"fm.h\"\n#ifndef __MINGW32_VERSION\n#include <pwd.h>\n#endif\n#include \"myctype.h\"\n#include \"html.h\"\n#include \"local.h\"\n#include \"hash.h\"\n\n#include <fcntl.h>\n#include <sys/types.h>\n#include <time.h>\n#if defined(HAVE_WAITPID) || defined(HAVE_WAIT3)\n#include <sys/wait.h>\n#endif\n#include <signal.h>\n\n#ifdef\t__WATT32__\n#define\tread(a,b,c)\tread_s(a,b,c)\n#define\tclose(x)\tclose_s(x)\n#endif\t\t\t\t/* __WATT32__ */\n\nstruct auth_pass {\n    int bad;\n    int is_proxy;\n    Str host;\n    int port;\n/*    Str file; */\n    Str realm;\n    Str uname;\n    Str pwd;\n    struct auth_pass *next;\n};\n\nstruct auth_pass *passwords = NULL;\n\nint\ncolumnSkip(Buffer *buf, int offset)\n{\n    int i, maxColumn;\n    int column = buf->currentColumn + offset;\n    int nlines = buf->LINES + 1;\n    Line *l;\n\n    maxColumn = 0;\n    for (i = 0, l = buf->topLine; i < nlines && l != NULL; i++, l = l->next) {\n\tif (l->width < 0)\n\t    l->width = COLPOS(l, l->len);\n\tif (l->width - 1 > maxColumn)\n\t    maxColumn = l->width - 1;\n    }\n    maxColumn -= buf->COLS - 1;\n    if (column < maxColumn)\n\tmaxColumn = column;\n    if (maxColumn < 0)\n\tmaxColumn = 0;\n\n    if (buf->currentColumn == maxColumn)\n\treturn 0;\n    buf->currentColumn = maxColumn;\n    return 1;\n}\n\nint\ncolumnPos(Line *line, int column)\n{\n    int i;\n\n    for (i = 1; i < line->len; i++) {\n\tif (COLPOS(line, i) > column)\n\t    break;\n    }\n#ifdef USE_M17N\n    for (i--; i > 0 && line->propBuf[i] & PC_WCHAR2; i--) ;\n    return i;\n#else\n    return i - 1;\n#endif\n}\n\nLine *\nlineSkip(Buffer *buf, Line *line, int offset, int last)\n{\n    int i;\n    Line *l;\n\n    l = currentLineSkip(buf, line, offset, last);\n    if (!nextpage_topline)\n\tfor (i = buf->LINES - 1 - (buf->lastLine->linenumber - l->linenumber);\n\t     i > 0 && l->prev != NULL; i--, l = l->prev) ;\n    return l;\n}\n\nLine *\ncurrentLineSkip(Buffer *buf, Line *line, int offset, int last)\n{\n    int i, n;\n    Line *l = line;\n\n    if (buf->pagerSource && !(buf->bufferprop & BP_CLOSE)) {\n\tn = line->linenumber + offset + buf->LINES;\n\tif (buf->lastLine->linenumber < n)\n\t    getNextPage(buf, n - buf->lastLine->linenumber);\n\twhile ((last || (buf->lastLine->linenumber < n)) &&\n\t       (getNextPage(buf, 1) != NULL)) ;\n\tif (last)\n\t    l = buf->lastLine;\n    }\n\n    if (offset == 0)\n\treturn l;\n    if (offset > 0)\n\tfor (i = 0; i < offset && l->next != NULL; i++, l = l->next) ;\n    else\n\tfor (i = 0; i < -offset && l->prev != NULL; i++, l = l->prev) ;\n    return l;\n}\n\n#define MAX_CMD_LEN 128\n\nint\ngethtmlcmd(char **s)\n{\n    extern Hash_si tagtable;\n    char cmdstr[MAX_CMD_LEN];\n    char *p = cmdstr;\n    char *save = *s;\n    int cmd;\n\n    (*s)++;\n    /* first character */\n    if (IS_ALNUM(**s) || **s == '_' || **s == '/') {\n\t*(p++) = TOLOWER(**s);\n\t(*s)++;\n    }\n    else\n\treturn HTML_UNKNOWN;\n    if (p[-1] == '/')\n\tSKIP_BLANKS(*s);\n    while ((IS_ALNUM(**s) || **s == '_') && p - cmdstr < MAX_CMD_LEN) {\n\t*(p++) = TOLOWER(**s);\n\t(*s)++;\n    }\n    if (p - cmdstr == MAX_CMD_LEN) {\n\t/* buffer overflow: perhaps caused by bad HTML source */\n\t*s = save + 1;\n\treturn HTML_UNKNOWN;\n    }\n    *p = '\\0';\n\n    /* hash search */\n    cmd = getHash_si(&tagtable, cmdstr, HTML_UNKNOWN);\n    while (**s && **s != '>')\n\t(*s)++;\n    if (**s == '>')\n\t(*s)++;\n    return cmd;\n}\n\n#ifdef USE_ANSI_COLOR\nstatic int\nparse_ansi_color(char **str, Lineprop *effect, Linecolor *color)\n{\n    char *p = *str, *q;\n    Lineprop e = *effect;\n    Linecolor c = *color;\n    int i;\n\n    if (*p != ESC_CODE || *(p + 1) != '[')\n\treturn 0;\n    p += 2;\n    for (q = p; IS_DIGIT(*q) || *q == ';'; q++) ;\n    if (*q != 'm')\n\treturn 0;\n    *str = q + 1;\n    while (1) {\n\tif (*p == 'm') {\n\t    e = PE_NORMAL;\n\t    c = 0;\n\t    break;\n\t}\n\tif (IS_DIGIT(*p)) {\n\t    q = p;\n\t    for (p++; IS_DIGIT(*p); p++) ;\n\t    i = atoi(allocStr(q, p - q));\n\t    switch (i) {\n\t    case 0:\n\t\te = PE_NORMAL;\n\t\tc = 0;\n\t\tbreak;\n\t    case 1:\n\t    case 5:\n\t\te = PE_BOLD;\n\t\tbreak;\n\t    case 4:\n\t\te = PE_UNDER;\n\t\tbreak;\n\t    case 7:\n\t\te = PE_STAND;\n\t\tbreak;\n\t    case 100:\t\t/* for EWS4800 kterm */\n\t\tc = 0;\n\t\tbreak;\n\t    case 39:\n\t\tc &= 0xf0;\n\t\tbreak;\n\t    case 49:\n\t\tc &= 0x0f;\n\t\tbreak;\n\t    default:\n\t\tif (i >= 30 && i <= 37)\n\t\t    c = (c & 0xf0) | (i - 30) | 0x08;\n\t\telse if (i >= 40 && i <= 47)\n\t\t    c = (c & 0x0f) | ((i - 40) << 4) | 0x80;\n\t\tbreak;\n\t    }\n\t    if (*p == 'm')\n\t\tbreak;\n\t}\n\telse {\n\t    e = PE_NORMAL;\n\t    c = 0;\n\t    break;\n\t}\n\tp++;\t\t\t/* *p == ';' */\n    }\n    *effect = e;\n    *color = c;\n    return 1;\n}\n#endif\n/* \n * Check character type\n */\n\nStr\ncheckType(Str s, Lineprop **oprop, Linecolor **ocolor)\n{\n    Lineprop mode;\n    Lineprop effect = PE_NORMAL;\n    Lineprop *prop;\n    static Lineprop *prop_buffer = NULL;\n    static int prop_size = 0;\n    char *str = s->ptr, *endp = &s->ptr[s->length], *bs = NULL;\n#ifdef USE_ANSI_COLOR\n    Lineprop ceffect = PE_NORMAL;\n    Linecolor cmode = 0;\n    int check_color = FALSE;\n    Linecolor *color = NULL;\n    static Linecolor *color_buffer = NULL;\n    static int color_size = 0;\n    char *es = NULL;\n#endif\n    int do_copy = FALSE;\n#ifdef USE_M17N\n    int i;\n    int plen = 0, clen;\n    int *plens = NULL;\n    static int *plens_buffer = NULL;\n    static int plens_size = 0;\n#endif\n\n    if (prop_size < s->length) {\n\tprop_size = (s->length > LINELEN) ? s->length : LINELEN;\n\tprop_buffer = New_Reuse(Lineprop, prop_buffer, prop_size);\n    }\n    prop = prop_buffer;\n#ifdef USE_M17N\n    if (plens_size < s->length) {\n\tplens_size = (s->length > LINELEN) ? s->length : LINELEN;\n\tplens_buffer = New_Reuse(int, plens_buffer, plens_size);\n    }\n    plens = plens_buffer;\n#endif\n\n    if (ShowEffect) {\n\tbs = memchr(str, '\\b', s->length);\n#ifdef USE_ANSI_COLOR\n\tif (ocolor) {\n\t    es = memchr(str, ESC_CODE, s->length);\n\t    if (es) {\n\t\tif (color_size < s->length) {\n\t\t    color_size = (s->length > LINELEN) ? s->length : LINELEN;\n\t\t    color_buffer = New_Reuse(Linecolor, color_buffer,\n\t\t\t\t\t     color_size);\n\t\t}\n\t\tcolor = color_buffer;\n\t    }\n\t}\n#endif\n\tif ((bs != NULL)\n#ifdef USE_ANSI_COLOR\n\t    || (es != NULL)\n#endif\n\t    ) {\n\t    char *sp = str, *ep;\n\t    s = Strnew_size(s->length);\n\t    do_copy = TRUE;\n\t    ep = endp;\n\t    if (bs && ep > bs - 2)\n\t\tep = bs - 2;\n#ifdef USE_ANSI_COLOR\n\t    if (es && ep > es - 2)\n\t\tep = es - 2;\n#endif\n\t    for (; str < ep && IS_ASCII(*str); str++) {\n\t\t*(prop++) = PE_NORMAL | (IS_CNTRL(*str) ? PC_CTRL : PC_ASCII);\n#ifdef USE_ANSI_COLOR\n\t\tif (color)\n\t\t    *(color++) = 0;\n#endif\n#ifdef USE_M17N\n\t\t*(plens++) = plen = 1;\n#endif\n\t    }\n\t    Strcat_charp_n(s, sp, (int)(str - sp));\n\t}\n    }\n    if (!do_copy) {\n\tfor (; str < endp && IS_ASCII(*str); str++) {\n\t    *(prop++) = PE_NORMAL | (IS_CNTRL(*str) ? PC_CTRL : PC_ASCII);\n#ifdef USE_ANSI_COLOR\n\t    if (color)\n\t\t*(color++) = 0;\n#endif\n#ifdef USE_M17N\n\t    *(plens++) = plen = 1;\n#endif\n\t}\n    }\n\n    while (str < endp) {\n\tif (prop - prop_buffer >= prop_size)\n\t    break;\n\tif (bs != NULL) {\n#ifdef USE_M17N\n\t    if (str == bs - 2 && !strncmp(str, \"__\\b\\b\", 4)) {\n\t\tstr += 4;\n\t\teffect = PE_UNDER;\n\t\tif (str < endp)\n\t\t    bs = memchr(str, '\\b', endp - str);\n\t\tcontinue;\n\t    }\n\t    else\n#endif\n\t    if (str == bs - 1 && *str == '_') {\n\t\tstr += 2;\n\t\teffect = PE_UNDER;\n\t\tif (str < endp)\n\t\t    bs = memchr(str, '\\b', endp - str);\n\t\tcontinue;\n\t    }\n\t    else if (str == bs) {\n\t\tif (*(str + 1) == '_') {\n\t\t    if (s->length) {\n\t\t\tstr += 2;\n#ifdef USE_M17N\n\t\t\tfor (i = 1; i <= plen; i++)\n\t\t\t    *(prop - i) |= PE_UNDER;\n#else\n\t\t\t*(prop - 1) |= PE_UNDER;\n#endif\n\t\t    }\n\t\t    else {\n\t\t\tstr++;\n\t\t    }\n\t\t}\n#ifdef USE_M17N\n\t\telse if (!strncmp(str + 1, \"\\b__\", 3)) {\n\t\t    if (s->length) {\n\t\t\tstr += (plen == 1) ? 3 : 4;\n\t\t\tfor (i = 1; i <= plen; i++)\n\t\t\t    *(prop - i) |= PE_UNDER;\n\t\t    }\n\t\t    else {\n\t\t\tstr += 2;\n\t\t    }\n\t\t}\n\t\telse if (*(str + 1) == '\\b') {\n\t\t    if (s->length) {\n\t\t\tclen = get_mclen(str + 2);\n\t\t\tif (plen == clen &&\n\t\t\t    !strncmp(str - plen, str + 2, plen)) {\n\t\t\t    for (i = 1; i <= plen; i++)\n\t\t\t\t*(prop - i) |= PE_BOLD;\n\t\t\t    str += 2 + clen;\n\t\t\t}\n\t\t\telse {\n\t\t\t    Strshrink(s, plen);\n\t\t\t    prop -= plen;\n#ifdef USE_ANSI_COLOR\n\t\t\t    if (color)\n\t\t\t\tcolor -= plen;\n#endif\n\t\t\t    plen = *(--plens);\n\t\t\t    str += 2;\n\t\t\t}\n\t\t    }\n\t\t    else {\n\t\t\tstr += 2;\n\t\t    }\n\t\t}\n#endif\n\t\telse {\n\t\t    if (s->length) {\n#ifdef USE_M17N\n\t\t\tclen = get_mclen(str + 1);\n\t\t\tif (plen == clen &&\n\t\t\t    !strncmp(str - plen, str + 1, plen)) {\n\t\t\t    for (i = 1; i <= plen; i++)\n\t\t\t\t*(prop - i) |= PE_BOLD;\n\t\t\t    str += 1 + clen;\n\t\t\t}\n\t\t\telse {\n\t\t\t    Strshrink(s, plen);\n\t\t\t    prop -= plen;\n#ifdef USE_ANSI_COLOR\n\t\t\t    if (color)\n\t\t\t\tcolor -= plen;\n#endif\n\t\t\t    plen = *(--plens);\n\t\t\t    str++;\n\t\t\t}\n#else\n\t\t\tif (*(str - 1) == *(str + 1)) {\n\t\t\t    *(prop - 1) |= PE_BOLD;\n\t\t\t    str += 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t    Strshrink(s, 1);\n\t\t\t    prop--;\n#ifdef USE_ANSI_COLOR\n\t\t\t    if (color)\n\t\t\t\tcolor--;\n#endif\n\t\t\t    str++;\n\t\t\t}\n#endif\n\t\t    }\n\t\t    else {\n\t\t\tstr++;\n\t\t    }\n\t\t}\n\t\tif (str < endp)\n\t\t    bs = memchr(str, '\\b', endp - str);\n\t\tcontinue;\n\t    }\n#ifdef USE_ANSI_COLOR\n\t    else if (str > bs)\n\t\tbs = memchr(str, '\\b', endp - str);\n#endif\n\t}\n#ifdef USE_ANSI_COLOR\n\tif (es != NULL) {\n\t    if (str == es) {\n\t\tint ok = parse_ansi_color(&str, &ceffect, &cmode);\n\t\tif (str < endp)\n\t\t    es = memchr(str, ESC_CODE, endp - str);\n\t\tif (ok) {\n\t\t    if (cmode)\n\t\t\tcheck_color = TRUE;\n\t\t    continue;\n\t\t}\n\t    }\n\t    else if (str > es)\n\t\tes = memchr(str, ESC_CODE, endp - str);\n\t}\n#endif\n\n\tmode = get_mctype(str) | effect;\n#ifdef USE_ANSI_COLOR\n\tif (color) {\n\t    *(color++) = cmode;\n\t    mode |= ceffect;\n\t}\n#endif\n\t*(prop++) = mode;\n#ifdef USE_M17N\n\tplen = get_mclen(str);\n\tif (str + plen > endp)\n\t    plen = endp - str;\n\t*(plens++) = plen;\n\tif (plen > 1) {\n\t    mode = (mode & ~PC_WCHAR1) | PC_WCHAR2;\n\t    for (i = 1; i < plen; i++) {\n\t\t*(prop++) = mode;\n#ifdef USE_ANSI_COLOR\n\t\tif (color)\n\t\t    *(color++) = cmode;\n#endif\n\t    }\n\t    if (do_copy)\n\t\tStrcat_charp_n(s, (char *)str, plen);\n\t    str += plen;\n\t}\n\telse\n#endif\n\t{\n\t    if (do_copy)\n\t\tStrcat_char(s, (char)*str);\n\t    str++;\n\t}\n\teffect = PE_NORMAL;\n    }\n    *oprop = prop_buffer;\n#ifdef USE_ANSI_COLOR\n    if (ocolor)\n\t*ocolor = check_color ? color_buffer : NULL;\n#endif\n    return s;\n}\n\nstatic int\nnextColumn(int n, char *p, Lineprop *pr)\n{\n    if (*pr & PC_CTRL) {\n\tif (*p == '\\t')\n\t    return (n + Tabstop) / Tabstop * Tabstop;\n\telse if (*p == '\\n')\n\t    return n + 1;\n\telse if (*p != '\\r')\n\t    return n + 2;\n\treturn n;\n    }\n#ifdef USE_M17N\n    if (*pr & PC_UNKNOWN)\n\treturn n + 4;\n    return n + wtf_width((wc_uchar *) p);\n#else\n    return n + 1;\n#endif\n}\n\nint\ncalcPosition(char *l, Lineprop *pr, int len, int pos, int bpos, int mode)\n{\n    static int *realColumn = NULL;\n    static int size = 0;\n    static char *prevl = NULL;\n    int i, j;\n\n    if (l == NULL || len == 0 || pos < 0)\n\treturn bpos;\n    if (l == prevl && mode == CP_AUTO) {\n\tif (pos <= len)\n\t    return realColumn[pos];\n    }\n    if (size < len + 1) {\n\tsize = (len + 1 > LINELEN) ? (len + 1) : LINELEN;\n\trealColumn = New_N(int, size);\n    }\n    prevl = l;\n    i = 0;\n    j = bpos;\n#ifdef USE_M17N\n    if (pr[i] & PC_WCHAR2) {\n\tfor (; i < len && pr[i] & PC_WCHAR2; i++)\n\t    realColumn[i] = j;\n\tif (i > 0 && pr[i - 1] & PC_KANJI && WcOption.use_wide)\n\t    j++;\n    }\n#endif\n    while (1) {\n\trealColumn[i] = j;\n\tif (i == len)\n\t    break;\n\tj = nextColumn(j, &l[i], &pr[i]);\n\ti++;\n#ifdef USE_M17N\n\tfor (; i < len && pr[i] & PC_WCHAR2; i++)\n\t    realColumn[i] = realColumn[i - 1];\n#endif\n    }\n    if (pos >= i)\n\treturn j;\n    return realColumn[pos];\n}\n\nint\ncolumnLen(Line *line, int column)\n{\n    int i, j;\n\n    for (i = 0, j = 0; i < line->len;) {\n\tj = nextColumn(j, &line->lineBuf[i], &line->propBuf[i]);\n\tif (j > column)\n\t    return i;\n\ti++;\n#ifdef USE_M17N\n\twhile (i < line->len && line->propBuf[i] & PC_WCHAR2)\n\t    i++;\n#endif\n    }\n    return line->len;\n}\n\nchar *\nlastFileName(char *path)\n{\n    char *p, *q;\n\n    p = q = path;\n    while (*p != '\\0') {\n\tif (*p == '/')\n\t    q = p + 1;\n\tp++;\n    }\n\n    return allocStr(q, -1);\n}\n\n#ifdef USE_INCLUDED_SRAND48\nstatic unsigned long R1 = 0x1234abcd;\nstatic unsigned long R2 = 0x330e;\n#define A1 0x5deec\n#define A2 0xe66d\n#define C 0xb\n\nvoid\nsrand48(long seed)\n{\n    R1 = (unsigned long)seed;\n    R2 = 0x330e;\n}\n\nlong\nlrand48(void)\n{\n    R1 = (A1 * R1 << 16) + A1 * R2 + A2 * R1 + ((A2 * R2 + C) >> 16);\n    R2 = (A2 * R2 + C) & 0xffff;\n    return (long)(R1 >> 1);\n}\n#endif\n\nchar *\nmybasename(char *s)\n{\n    char *p = s;\n    while (*p)\n\tp++;\n    while (s <= p && *p != '/')\n\tp--;\n    if (*p == '/')\n\tp++;\n    else\n\tp = s;\n    return allocStr(p, -1);\n}\n\nchar *\nmydirname(char *s)\n{\n    char *p = s;\n    while (*p)\n\tp++;\n    if (s != p)\n\tp--;\n    while (s != p && *p == '/')\n\tp--;\n    while (s != p && *p != '/')\n\tp--;\n    if (*p != '/')\n\treturn \".\";\n    while (s != p && *p == '/')\n\tp--;\n    return allocStr(s, strlen(s) - strlen(p) + 1);\n}\n\n#ifndef HAVE_STRERROR\nchar *\nstrerror(int errno)\n{\n    extern char *sys_errlist[];\n    return sys_errlist[errno];\n}\n#endif\t\t\t\t/* not HAVE_STRERROR */\n\nint\nnext_status(char c, int *status)\n{\n    switch (*status) {\n    case R_ST_NORMAL:\n\tif (c == '<') {\n\t    *status = R_ST_TAG0;\n\t    return 0;\n\t}\n\telse if (c == '&') {\n\t    *status = R_ST_AMP;\n\t    return 1;\n\t}\n\telse\n\t    return 1;\n\tbreak;\n    case R_ST_TAG0:\n\tif (c == '!') {\n\t    *status = R_ST_CMNT1;\n\t    return 0;\n\t}\n\t*status = R_ST_TAG;\n\t/* continues to next case */\n    case R_ST_TAG:\n\tif (c == '>')\n\t    *status = R_ST_NORMAL;\n\telse if (c == '=')\n\t    *status = R_ST_EQL;\n\treturn 0;\n    case R_ST_EQL:\n\tif (c == '\"')\n\t    *status = R_ST_DQUOTE;\n\telse if (c == '\\'')\n\t    *status = R_ST_QUOTE;\n\telse if (IS_SPACE(c))\n\t    *status = R_ST_EQL;\n\telse if (c == '>')\n\t    *status = R_ST_NORMAL;\n\telse\n\t    *status = R_ST_VALUE;\n\treturn 0;\n    case R_ST_QUOTE:\n\tif (c == '\\'')\n\t    *status = R_ST_TAG;\n\treturn 0;\n    case R_ST_DQUOTE:\n\tif (c == '\"')\n\t    *status = R_ST_TAG;\n\treturn 0;\n    case R_ST_VALUE:\n\tif (c == '>')\n\t    *status = R_ST_NORMAL;\n\telse if (IS_SPACE(c))\n\t    *status = R_ST_TAG;\n\treturn 0;\n    case R_ST_AMP:\n\tif (c == ';') {\n\t    *status = R_ST_NORMAL;\n\t    return 0;\n\t}\n\telse if (c != '#' && !IS_ALNUM(c) && c != '_') {\n\t    /* something's wrong! */\n\t    *status = R_ST_NORMAL;\n\t    return 0;\n\t}\n\telse\n\t    return 0;\n    case R_ST_CMNT1:\n\tswitch (c) {\n\tcase '-':\n\t    *status = R_ST_CMNT2;\n\t    break;\n\tcase '>':\n\t    *status = R_ST_NORMAL;\n\t    break;\n\tcase 'D':\n\tcase 'd':\n\t    /* could be a !doctype */\n\t    *status = R_ST_TAG;\n\t    break;\n\tdefault:\n\t    *status = R_ST_IRRTAG;\n\t}\n\treturn 0;\n    case R_ST_CMNT2:\n\tswitch (c) {\n\tcase '-':\n\t    *status = R_ST_CMNT;\n\t    break;\n\tcase '>':\n\t    *status = R_ST_NORMAL;\n\t    break;\n\tdefault:\n\t    *status = R_ST_IRRTAG;\n\t}\n\treturn 0;\n    case R_ST_CMNT:\n\tif (c == '-')\n\t    *status = R_ST_NCMNT1;\n\treturn 0;\n    case R_ST_NCMNT1:\n\tif (c == '-')\n\t    *status = R_ST_NCMNT2;\n\telse\n\t    *status = R_ST_CMNT;\n\treturn 0;\n    case R_ST_NCMNT2:\n\tswitch (c) {\n\tcase '>':\n\t    *status = R_ST_NORMAL;\n\t    break;\n\tcase '-':\n\t    *status = R_ST_NCMNT2;\n\t    break;\n\tdefault:\n\t    if (IS_SPACE(c))\n\t\t*status = R_ST_NCMNT3;\n\t    else\n\t\t*status = R_ST_CMNT;\n\t    break;\n\t}\n\tbreak;\n    case R_ST_NCMNT3:\n\tswitch (c) {\n\tcase '>':\n\t    *status = R_ST_NORMAL;\n\t    break;\n\tcase '-':\n\t    *status = R_ST_NCMNT1;\n\t    break;\n\tdefault:\n\t    if (IS_SPACE(c))\n\t\t*status = R_ST_NCMNT3;\n\t    else\n\t\t*status = R_ST_CMNT;\n\t    break;\n\t}\n\treturn 0;\n    case R_ST_IRRTAG:\n\tif (c == '>')\n\t    *status = R_ST_NORMAL;\n\treturn 0;\n    }\n    /* notreached */\n    return 0;\n}\n\nint\nread_token(Str buf, char **instr, int *status, int pre, int append)\n{\n    char *p;\n    int prev_status;\n\n    if (!append)\n\tStrclear(buf);\n    if (**instr == '\\0')\n\treturn 0;\n    for (p = *instr; *p; p++) {\n\t/* Drop Unicode soft hyphen */\n\tif (*(unsigned char *)p == 0210\n\t    && *(unsigned char *)(p + 1) == 0200\n\t    && *(unsigned char *)(p + 2) == 0201\n\t    && *(unsigned char *)(p + 3) == 0255) {\n\t    p += 3;\n\t    continue;\n\t}\n\n\tprev_status = *status;\n\tnext_status(*p, status);\n\tswitch (*status) {\n\tcase R_ST_NORMAL:\n\t    if (prev_status == R_ST_AMP && *p != ';') {\n\t\tp--;\n\t\tbreak;\n\t    }\n\t    if (prev_status == R_ST_NCMNT2 || prev_status == R_ST_NCMNT3 ||\n\t\tprev_status == R_ST_IRRTAG || prev_status == R_ST_CMNT1) {\n\t\tif (prev_status == R_ST_CMNT1 && !append && !pre)\n\t\t    Strclear(buf);\n\t\tif (pre)\n\t\t    Strcat_char(buf, *p);\n\t\tp++;\n\t\tgoto proc_end;\n\t    }\n\t    Strcat_char(buf, (!pre && IS_SPACE(*p)) ? ' ' : *p);\n\t    if (ST_IS_REAL_TAG(prev_status)) {\n\t\t*instr = p + 1;\n\t\tif (buf->length < 2 ||\n\t\t    buf->ptr[buf->length - 2] != '<' ||\n\t\t    buf->ptr[buf->length - 1] != '>')\n\t\t    return 1;\n\t\tStrshrink(buf, 2);\n\t    }\n\t    break;\n\tcase R_ST_TAG0:\n\tcase R_ST_TAG:\n\t    if (prev_status == R_ST_NORMAL && p != *instr) {\n\t\t*instr = p;\n\t\t*status = prev_status;\n\t\treturn 1;\n\t    }\n\t    if (*status == R_ST_TAG0 && !REALLY_THE_BEGINNING_OF_A_TAG(p)) {\n\t\t/* it seems that this '<' is not a beginning of a tag */\n\t\t/*\n\t\t * Strcat_charp(buf, \"&lt;\");\n\t\t */\n\t\tStrcat_char(buf, '<');\n\t\t*status = R_ST_NORMAL;\n\t    }\n\t    else\n\t\tStrcat_char(buf, *p);\n\t    break;\n\tcase R_ST_EQL:\n\tcase R_ST_QUOTE:\n\tcase R_ST_DQUOTE:\n\tcase R_ST_VALUE:\n\tcase R_ST_AMP:\n\t    Strcat_char(buf, *p);\n\t    break;\n\tcase R_ST_CMNT:\n\tcase R_ST_IRRTAG:\n\t    if (pre)\n\t\tStrcat_char(buf, *p);\n\t    else if (!append)\n\t\tStrclear(buf);\n\t    break;\n\tcase R_ST_CMNT1:\n\tcase R_ST_CMNT2:\n\tcase R_ST_NCMNT1:\n\tcase R_ST_NCMNT2:\n\tcase R_ST_NCMNT3:\n\t    /* do nothing */\n\t    if (pre)\n\t\tStrcat_char(buf, *p);\n\t    break;\n\t}\n    }\n  proc_end:\n    *instr = p;\n    return 1;\n}\n\nStr\ncorrect_irrtag(int status)\n{\n    char c;\n    Str tmp = Strnew();\n\n    while (status != R_ST_NORMAL) {\n\tswitch (status) {\n\tcase R_ST_CMNT:\t/* required \"-->\" */\n\tcase R_ST_NCMNT1:\t/* required \"->\" */\n\t    c = '-';\n\t    break;\n\tcase R_ST_NCMNT2:\n\tcase R_ST_NCMNT3:\n\tcase R_ST_IRRTAG:\n\tcase R_ST_CMNT1:\n\tcase R_ST_CMNT2:\n\tcase R_ST_TAG:\n\tcase R_ST_TAG0:\n\tcase R_ST_EQL:\t\t/* required \">\" */\n\tcase R_ST_VALUE:\n\t    c = '>';\n\t    break;\n\tcase R_ST_QUOTE:\n\t    c = '\\'';\n\t    break;\n\tcase R_ST_DQUOTE:\n\t    c = '\"';\n\t    break;\n\tcase R_ST_AMP:\n\t    c = ';';\n\t    break;\n\tdefault:\n\t    return tmp;\n\t}\n\tnext_status(c, &status);\n\tStrcat_char(tmp, c);\n    }\n    return tmp;\n}\n\n/*\n * RFC2617: 1.2 Access Authentication Framework\n *\n * The realm value (case-sensitive), in combination with the canonical root\n * URL (the absoluteURI for the server whose abs_path is empty; see section\n * 5.1.2 of RFC2616 ) of the server being accessed, defines the protection\n * space. These realms allow the protected resources on a server to be\n * partitioned into a set of protection spaces, each with its own\n * authentication scheme and/or authorization database.\n *\n */\nstatic void\nadd_auth_pass_entry(const struct auth_pass *ent, int netrc, int override)\n{\n    if ((ent->host || netrc)\t/* netrc accept default (host == NULL) */\n\t&&(ent->is_proxy || ent->realm || netrc)\n\t&& ent->uname && ent->pwd) {\n\tstruct auth_pass *newent = New(struct auth_pass);\n\tmemcpy(newent, ent, sizeof(struct auth_pass));\n\tif (override) {\n\t    newent->next = passwords;\n\t    passwords = newent;\n\t} \n\telse {\n\t    if (passwords == NULL)\n\t\tpasswords = newent;\n\t    else if (passwords->next == NULL)\n\t\tpasswords->next = newent;\n\t    else {\n\t\tstruct auth_pass *ep = passwords;\n\t\tfor (; ep->next; ep = ep->next) ;\n\t\tep->next = newent;\n\t    }\n\t}\n    }\n    /* ignore invalid entries */\n}\n\nstatic struct auth_pass *\nfind_auth_pass_entry(char *host, int port, char *realm, char *uname, \n\t\t     int is_proxy)\n{\n    struct auth_pass *ent;\n    for (ent = passwords; ent != NULL; ent = ent->next) {\n\tif (ent->is_proxy == is_proxy\n\t    && (ent->bad != TRUE)\n\t    && (!ent->host || !Strcasecmp_charp(ent->host, host))\n\t    && (!ent->port || ent->port == port)\n\t    && (!ent->uname || !uname || !Strcmp_charp(ent->uname, uname))\n\t    && (!ent->realm || !realm || !Strcmp_charp(ent->realm, realm))\n\t    )\n\t    return ent;\n    }\n    return NULL;\n}\n\nint\nfind_auth_user_passwd(ParsedURL *pu, char *realm,\n\t\t      Str *uname, Str *pwd, int is_proxy)\n{\n    struct auth_pass *ent;\n\n    if (pu->user && pu->pass) {\n\t*uname = Strnew_charp(pu->user);\n\t*pwd = Strnew_charp(pu->pass);\n\treturn 1;\n    }\n    ent = find_auth_pass_entry(pu->host, pu->port, realm, pu->user, is_proxy);\n    if (ent) {\n\t*uname = ent->uname;\n\t*pwd = ent->pwd;\n\treturn 1;\n    }\n    return 0;\n}\n\nvoid\nadd_auth_user_passwd(ParsedURL *pu, char *realm, Str uname, Str pwd, \n\t\t     int is_proxy)\n{\n    struct auth_pass ent;\n    memset(&ent, 0, sizeof(ent));\n\n    ent.is_proxy = is_proxy;\n    ent.host = Strnew_charp(pu->host);\n    ent.port = pu->port;\n    ent.realm = Strnew_charp(realm);\n    ent.uname = uname;\n    ent.pwd = pwd;\n    add_auth_pass_entry(&ent, 0, 1);\n}\n\nvoid\ninvalidate_auth_user_passwd(ParsedURL *pu, char *realm, Str uname, Str pwd, \n\t\t\t    int is_proxy)\n{\n    struct auth_pass *ent;\n    ent = find_auth_pass_entry(pu->host, pu->port, realm, NULL, is_proxy);\n    if (ent) {\n\tent->bad = TRUE;\n    }\n    return;\n}\n\n/* passwd */\n/*\n * machine <host>\n * host <host>\n * port <port>\n * proxy\n * path <file>\t; not used\n * realm <realm>\n * login <login>\n * passwd <passwd>\n * password <passwd>\n */\n\nstatic Str\nnext_token(Str arg)\n{\n    Str narg = NULL;\n    char *p, *q;\n    if (arg == NULL || arg->length == 0)\n\treturn NULL;\n    p = arg->ptr;\n    q = p;\n    SKIP_NON_BLANKS(q);\n    if (*q != '\\0') {\n\t*q++ = '\\0';\n\tSKIP_BLANKS(q);\n\tif (*q != '\\0')\n\t    narg = Strnew_charp(q);\n    }\n    return narg;\n}\n\nstatic void\nparsePasswd(FILE * fp, int netrc)\n{\n    struct auth_pass ent;\n    Str line = NULL;\n\n    bzero(&ent, sizeof(struct auth_pass));\n    while (1) {\n\tStr arg = NULL;\n\tchar *p;\n\n\tif (line == NULL || line->length == 0)\n\t    line = Strfgets(fp);\n\tif (line->length == 0)\n\t    break;\n\tStrchop(line);\n\tStrremovefirstspaces(line);\n\tp = line->ptr;\n\tif (*p == '#' || *p == '\\0') {\n\t    line = NULL;\n\t    continue;\t\t/* comment or empty line */\n\t}\n\targ = next_token(line);\n\n\tif (!strcmp(p, \"machine\") || !strcmp(p, \"host\")\n\t    || (netrc && !strcmp(p, \"default\"))) {\n\t    add_auth_pass_entry(&ent, netrc, 0);\n\t    bzero(&ent, sizeof(struct auth_pass));\n\t    if (netrc)\n\t\tent.port = 21;\t/* XXX: getservbyname(\"ftp\"); ? */\n\t    if (strcmp(p, \"default\") != 0) {\n\t\tline = next_token(arg);\n\t\tent.host = arg;\n\t    }\n\t    else {\n\t\tline = arg;\n\t    }\n\t}\n\telse if (!netrc && !strcmp(p, \"port\") && arg) {\n\t    line = next_token(arg);\n\t    ent.port = atoi(arg->ptr);\n\t}\n\telse if (!netrc && !strcmp(p, \"proxy\")) {\n\t    ent.is_proxy = 1;\n\t    line = arg;\n\t}\n\telse if (!netrc && !strcmp(p, \"path\")) {\n\t    line = next_token(arg);\n\t    /* ent.file = arg; */\n\t}\n\telse if (!netrc && !strcmp(p, \"realm\")) {\n\t    /* XXX: rest of line becomes arg for realm */\n\t    line = NULL;\n\t    ent.realm = arg;\n\t}\n\telse if (!strcmp(p, \"login\")) {\n\t    line = next_token(arg);\n\t    ent.uname = arg;\n\t}\n\telse if (!strcmp(p, \"password\") || !strcmp(p, \"passwd\")) {\n\t    line = next_token(arg);\n\t    ent.pwd = arg;\n\t}\n\telse if (netrc && !strcmp(p, \"machdef\")) {\n\t    while ((line = Strfgets(fp))->length != 0) {\n\t\tif (*line->ptr == '\\n')\n\t\t    break;\n\t    }\n\t    line = NULL;\n\t}\n\telse if (netrc && !strcmp(p, \"account\")) {\n\t    /* ignore */\n\t    line = next_token(arg);\n\t}\n\telse {\n\t    /* ignore rest of line */\n\t    line = NULL;\n\t}\n    }\n    add_auth_pass_entry(&ent, netrc, 0);\n}\n\n/* FIXME: gettextize? */\n#define FILE_IS_READABLE_MSG \"SECURITY NOTE: file %s must not be accessible by others\"\n\nFILE *\nopenSecretFile(char *fname)\n{\n    char *efname;\n    struct stat st;\n\n    if (fname == NULL)\n\treturn NULL;\n    efname = expandPath(fname);\n    if (stat(efname, &st) < 0)\n\treturn NULL;\n\n    /* check permissions, if group or others readable or writable,\n     * refuse it, because it's insecure.\n     *\n     * XXX: disable_secret_security_check will introduce some\n     *    security issues, but on some platform such as Windows\n     *    it's not possible (or feasible) to disable group|other\n     *    readable and writable.\n     *   [w3m-dev 03368][w3m-dev 03369][w3m-dev 03370]\n     */\n    if (disable_secret_security_check)\n\t/* do nothing */ ;\n    else if ((st.st_mode & (S_IRWXG | S_IRWXO)) != 0) {\n\tif (fmInitialized) {\n\t    message(Sprintf(FILE_IS_READABLE_MSG, fname)->ptr, 0, 0);\n\t    refresh();\n\t}\n\telse {\n\t    fputs(Sprintf(FILE_IS_READABLE_MSG, fname)->ptr, stderr);\n\t    fputc('\\n', stderr);\n\t}\n\tsleep(2);\n\treturn NULL;\n    }\n\n    return fopen(efname, \"r\");\n}\n\nvoid\nloadPasswd(void)\n{\n    FILE *fp;\n\n    passwords = NULL;\n    fp = openSecretFile(passwd_file);\n    if (fp != NULL) {\n\tparsePasswd(fp, 0);\n\tfclose(fp);\n    }\n\n    /* for FTP */\n    fp = openSecretFile(\"~/.netrc\");\n    if (fp != NULL) {\n\tparsePasswd(fp, 1);\n\tfclose(fp);\n    }\n    return;\n}\n\n/* get last modified time */\nchar *\nlast_modified(Buffer *buf)\n{\n    TextListItem *ti;\n    struct stat st;\n\n    if (buf->document_header) {\n\tfor (ti = buf->document_header->first; ti; ti = ti->next) {\n\t    if (strncasecmp(ti->ptr, \"Last-modified: \", 15) == 0) {\n\t\treturn ti->ptr + 15;\n\t    }\n\t}\n\treturn \"unknown\";\n    }\n    else if (buf->currentURL.scheme == SCM_LOCAL) {\n\tif (stat(buf->currentURL.file, &st) < 0)\n\t    return \"unknown\";\n\treturn ctime(&st.st_mtime);\n    }\n    return \"unknown\";\n}\n\nstatic char roman_num1[] = {\n    'i', 'x', 'c', 'm', '*',\n};\nstatic char roman_num5[] = {\n    'v', 'l', 'd', '*',\n};\n\nstatic Str\nromanNum2(int l, int n)\n{\n    Str s = Strnew();\n\n    switch (n) {\n    case 1:\n    case 2:\n    case 3:\n\tfor (; n > 0; n--)\n\t    Strcat_char(s, roman_num1[l]);\n\tbreak;\n    case 4:\n\tStrcat_char(s, roman_num1[l]);\n\tStrcat_char(s, roman_num5[l]);\n\tbreak;\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n\tStrcat_char(s, roman_num5[l]);\n\tfor (n -= 5; n > 0; n--)\n\t    Strcat_char(s, roman_num1[l]);\n\tbreak;\n    case 9:\n\tStrcat_char(s, roman_num1[l]);\n\tStrcat_char(s, roman_num1[l + 1]);\n\tbreak;\n    }\n    return s;\n}\n\nStr\nromanNumeral(int n)\n{\n    Str r = Strnew();\n\n    if (n <= 0)\n\treturn r;\n    if (n >= 4000) {\n\tStrcat_charp(r, \"**\");\n\treturn r;\n    }\n    Strcat(r, romanNum2(3, n / 1000));\n    Strcat(r, romanNum2(2, (n % 1000) / 100));\n    Strcat(r, romanNum2(1, (n % 100) / 10));\n    Strcat(r, romanNum2(0, n % 10));\n\n    return r;\n}\n\nStr\nromanAlphabet(int n)\n{\n    Str r = Strnew();\n    int l;\n    char buf[14];\n\n    if (n <= 0)\n\treturn r;\n\n    l = 0;\n    while (n) {\n\tbuf[l++] = 'a' + (n - 1) % 26;\n\tn = (n - 1) / 26;\n    }\n    l--;\n    for (; l >= 0; l--)\n\tStrcat_char(r, buf[l]);\n\n    return r;\n}\n\n#ifndef SIGIOT\n#define SIGIOT SIGABRT\n#endif\t\t\t\t/* not SIGIOT */\n\nstatic void\nreset_signals(void)\n{\n#ifdef SIGHUP\n    mySignal(SIGHUP, SIG_DFL);\t/* terminate process */\n#endif\n    mySignal(SIGINT, SIG_DFL);\t/* terminate process */\n#ifdef SIGQUIT\n    mySignal(SIGQUIT, SIG_DFL);\t/* terminate process */\n#endif\n    mySignal(SIGTERM, SIG_DFL);\t/* terminate process */\n    mySignal(SIGILL, SIG_DFL);\t/* create core image */\n    mySignal(SIGIOT, SIG_DFL);\t/* create core image */\n    mySignal(SIGFPE, SIG_DFL);\t/* create core image */\n#ifdef SIGBUS\n    mySignal(SIGBUS, SIG_DFL);\t/* create core image */\n#endif\t\t\t\t/* SIGBUS */\n#ifdef SIGCHLD\n    mySignal(SIGCHLD, SIG_IGN);\n#endif\n#ifdef SIGPIPE\n    mySignal(SIGPIPE, SIG_IGN);\n#endif\n}\n\n#ifndef FOPEN_MAX\n#define FOPEN_MAX 1024\t\t/* XXX */\n#endif\n\nstatic void\nclose_all_fds_except(int i, int f)\n{\n    switch (i) {\t\t/* fall through */\n    case 0:\n\tdup2(open(DEV_NULL_PATH, O_RDONLY), 0);\n    case 1:\n\tdup2(open(DEV_NULL_PATH, O_WRONLY), 1);\n    case 2:\n\tdup2(open(DEV_NULL_PATH, O_WRONLY), 2);\n    }\n    /* close all other file descriptors (socket, ...) */\n    for (i = 3; i < FOPEN_MAX; i++) {\n\tif (i != f)\n\t    close(i);\n    }\n}\n\nvoid\nsetup_child(int child, int i, int f)\n{\n    reset_signals();\n    mySignal(SIGINT, SIG_IGN);\n#ifndef __MINGW32_VERSION\n    if (!child)\n\tSETPGRP();\n#endif /* __MINGW32_VERSION */\n    /*\n     * I don't know why but close_tty() sometimes interrupts loadGeneralFile() in loadImage()\n     * and corrupt image data can be cached in ~/.w3m.\n     */\n#if 0\n    close_tty();\n#endif\n    close_all_fds_except(i, f);\n    QuietMessage = TRUE;\n    fmInitialized = FALSE;\n    TrapSignal = FALSE;\n}\n\n#ifndef __MINGW32_VERSION\npid_t\nopen_pipe_rw(FILE ** fr, FILE ** fw)\n{\n    int fdr[2];\n    int fdw[2];\n    pid_t pid;\n\n    if (fr && pipe(fdr) < 0)\n\tgoto err0;\n    if (fw && pipe(fdw) < 0)\n\tgoto err1;\n\n    flush_tty();\n    pid = fork();\n    if (pid < 0)\n\tgoto err2;\n    if (pid == 0) {\n\t/* child */\n\tif (fr) {\n\t    close(fdr[0]);\n\t    dup2(fdr[1], 1);\n\t}\n\tif (fw) {\n\t    close(fdw[1]);\n\t    dup2(fdw[0], 0);\n\t}\n    }\n    else {\n\tif (fr) {\n\t    close(fdr[1]);\n\t    if (*fr == stdin)\n\t\tdup2(fdr[0], 0);\n\t    else\n\t\t*fr = fdopen(fdr[0], \"r\");\n\t}\n\tif (fw) {\n\t    close(fdw[0]);\n\t    if (*fw == stdout)\n\t\tdup2(fdw[1], 1);\n\t    else\n\t\t*fw = fdopen(fdw[1], \"w\");\n\t}\n    }\n    return pid;\n  err2:\n    if (fw) {\n\tclose(fdw[0]);\n\tclose(fdw[1]);\n    }\n  err1:\n    if (fr) {\n\tclose(fdr[0]);\n\tclose(fdr[1]);\n    }\n  err0:\n    return (pid_t) - 1;\n}\n#endif /* __MINGW32_VERSION */\n\nvoid\nmyExec(char *command)\n{\n    mySignal(SIGINT, SIG_DFL);\n    execl(\"/bin/sh\", \"sh\", \"-c\", command, NULL);\n    exit(127);\n}\n\nvoid\nmySystem(char *command, int background)\n{\n#ifndef __MINGW32_VERSION\n    if (background) {\n#ifndef __EMX__\n\tflush_tty();\n\tif (!fork()) {\n\t    setup_child(FALSE, 0, -1);\n\t    myExec(command);\n\t}\n#else\n\tStr cmd = Strnew_charp(\"start /f \");\n\tStrcat_charp(cmd, command);\n\tsystem(cmd->ptr);\n#endif\n    }\n    else\n#endif /* __MINGW32_VERSION */\n\tsystem(command);\n}\n\nStr\nmyExtCommand(char *cmd, char *arg, int redirect)\n{\n    Str tmp = NULL;\n    char *p;\n    int set_arg = FALSE;\n\n    for (p = cmd; *p; p++) {\n\tif (*p == '%' && *(p + 1) == 's' && !set_arg) {\n\t    if (tmp == NULL)\n\t\ttmp = Strnew_charp_n(cmd, (int)(p - cmd));\n\t    Strcat_charp(tmp, arg);\n\t    set_arg = TRUE;\n\t    p++;\n\t}\n\telse {\n\t    if (tmp)\n\t\tStrcat_char(tmp, *p);\n\t}\n    }\n    if (!set_arg) {\n\tif (redirect)\n\t    tmp = Strnew_m_charp(\"(\", cmd, \") < \", arg, NULL);\n\telse\n\t    tmp = Strnew_m_charp(cmd, \" \", arg, NULL);\n    }\n    return tmp;\n}\n\nStr\nmyEditor(char *cmd, char *file, int line)\n{\n    Str tmp = NULL;\n    char *p;\n    int set_file = FALSE, set_line = FALSE;\n\n    for (p = cmd; *p; p++) {\n\tif (*p == '%' && *(p + 1) == 's' && !set_file) {\n\t    if (tmp == NULL)\n\t\ttmp = Strnew_charp_n(cmd, (int)(p - cmd));\n\t    Strcat_charp(tmp, file);\n\t    set_file = TRUE;\n\t    p++;\n\t}\n\telse if (*p == '%' && *(p + 1) == 'd' && !set_line && line > 0) {\n\t    if (tmp == NULL)\n\t\ttmp = Strnew_charp_n(cmd, (int)(p - cmd));\n\t    Strcat(tmp, Sprintf(\"%d\", line));\n\t    set_line = TRUE;\n\t    p++;\n\t}\n\telse {\n\t    if (tmp)\n\t\tStrcat_char(tmp, *p);\n\t}\n    }\n    if (!set_file) {\n\tif (tmp == NULL)\n\t    tmp = Strnew_charp(cmd);\n\tif (!set_line && line > 1 && strcasestr(cmd, \"vi\"))\n\t    Strcat(tmp, Sprintf(\" +%d\", line));\n\tStrcat_m_charp(tmp, \" \", file, NULL);\n    }\n    return tmp;\n}\n\n#ifdef __MINGW32_VERSION\nchar *\nexpandName(char *name)\n{\n    return getenv(\"HOME\");\n}\n#else\nchar *\nexpandName(char *name)\n{\n    char *p;\n    struct passwd *passent, *getpwnam(const char *);\n    Str extpath = NULL;\n\n    if (name == NULL)\n\treturn NULL;\n    p = name;\n    if (*p == '/') {\n\tif ((*(p + 1) == '~' && IS_ALPHA(*(p + 2)))\n\t    && personal_document_root) {\n\t    char *q;\n\t    p += 2;\n\t    q = strchr(p, '/');\n\t    if (q) {\t\t/* /~user/dir... */\n\t\tpassent = getpwnam(allocStr(p, q - p));\n\t\tp = q;\n\t    }\n\t    else {\t\t/* /~user */\n\t\tpassent = getpwnam(p);\n\t\tp = \"\";\n\t    }\n\t    if (!passent)\n\t\tgoto rest;\n\t    extpath = Strnew_m_charp(passent->pw_dir, \"/\",\n\t\t\t\t     personal_document_root, NULL);\n\t    if (*personal_document_root == '\\0' && *p == '/')\n\t\tp++;\n\t}\n\telse\n\t    goto rest;\n\tif (Strcmp_charp(extpath, \"/\") == 0 && *p == '/')\n\t    p++;\n\tStrcat_charp(extpath, p);\n\treturn extpath->ptr;\n    }\n    else\n\treturn expandPath(p);\n  rest:\n    return name;\n}\n#endif\n\nint\nis_localhost(const char *host)\n{\n    if (!host ||\n\t!strcasecmp(host, \"localhost\") || !strcmp(host, \"127.0.0.1\") ||\n\t(HostName && !strcasecmp(host, HostName)) || !strcmp(host, \"[::1]\"))\n\treturn TRUE;\n    return FALSE;\n}\n\nchar *\nfile_to_url(char *file)\n{\n    Str tmp;\n#ifdef SUPPORT_DOS_DRIVE_PREFIX\n    char *drive = NULL;\n#endif\n#ifdef SUPPORT_NETBIOS_SHARE\n    char *host = NULL;\n#endif\n\n    if (!(file = expandPath(file)))\n\treturn NULL;\n#ifdef SUPPORT_NETBIOS_SHARE\n    if (file[0] == '/' && file[1] == '/') {\n\tchar *p;\n\tfile += 2;\n\tif (*file) {\n\t    p = strchr(file, '/');\n\t    if (p != NULL && p != file) {\n\t\thost = allocStr(file, (p - file));\n\t\tfile = p;\n\t    }\n\t}\n    }\n#endif\n#ifdef SUPPORT_DOS_DRIVE_PREFIX\n    if (IS_ALPHA(file[0]) && file[1] == ':') {\n\tdrive = allocStr(file, 2);\n\tfile += 2;\n    }\n    else\n#endif\n    if (file[0] != '/') {\n\ttmp = Strnew_charp(CurrentDir);\n\tif (Strlastchar(tmp) != '/')\n\t    Strcat_char(tmp, '/');\n\tStrcat_charp(tmp, file);\n\tfile = tmp->ptr;\n    }\n    tmp = Strnew_charp(\"file://\");\n#ifdef SUPPORT_NETBIOS_SHARE\n    if (host)\n\tStrcat_charp(tmp, host);\n#endif\n#ifdef SUPPORT_DOS_DRIVE_PREFIX\n    if (drive)\n\tStrcat_charp(tmp, drive);\n#endif\n    Strcat_charp(tmp, file_quote(cleanupName(file)));\n    return tmp->ptr;\n}\n\n#ifdef USE_M17N\nchar *\nurl_unquote_conv(char *url, wc_ces charset)\n#else\nchar *\nurl_unquote_conv0(char *url)\n#endif\n{\n#ifdef USE_M17N\n    wc_uint8 old_auto_detect = WcOption.auto_detect;\n#endif\n    Str tmp;\n    tmp = Str_url_unquote(Strnew_charp(url), FALSE, TRUE);\n#ifdef USE_M17N\n    if (!charset || charset == WC_CES_US_ASCII)\n\tcharset = SystemCharset;\n    WcOption.auto_detect = WC_OPT_DETECT_ON;\n    tmp = convertLine(NULL, tmp, RAW_MODE, &charset, charset);\n    WcOption.auto_detect = old_auto_detect;\n#endif\n    return tmp->ptr;\n}\n\nstatic char *tmpf_base[MAX_TMPF_TYPE] = {\n    \"tmp\", \"src\", \"frame\", \"cache\", \"cookie\", \"hist\",\n};\nstatic unsigned int tmpf_seq[MAX_TMPF_TYPE];\n\nStr\ntmpfname(int type, char *ext)\n{\n    Str tmpf;\n    char *dir;\n\n    switch(type) {\n    case TMPF_HIST:\n\tdir = rc_dir;\n\tbreak;\n    case TMPF_DFL:\n    case TMPF_COOKIE:\n    case TMPF_SRC:\n    case TMPF_FRAME:\n    case TMPF_CACHE:\n    default:\n\tdir = tmp_dir;\n    }\n\n    tmpf = Sprintf(\"%s/w3m%s%d-%d%s\",\n\t\t   dir,\n\t\t   tmpf_base[type],\n\t\t   CurrentPid, tmpf_seq[type]++, (ext) ? ext : \"\");\n    pushText(fileToDelete, tmpf->ptr);\n    return tmpf;\n}\n\nstatic char *monthtbl[] = {\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n};\n\nstatic int\nget_day(char **s)\n{\n    Str tmp = Strnew();\n    int day;\n    char *ss = *s;\n\n    if (!**s)\n\treturn -1;\n\n    while (**s && IS_DIGIT(**s))\n\tStrcat_char(tmp, *((*s)++));\n\n    day = atoi(tmp->ptr);\n\n    if (day < 1 || day > 31) {\n\t*s = ss;\n\treturn -1;\n    }\n    return day;\n}\n\nstatic int\nget_month(char **s)\n{\n    Str tmp = Strnew();\n    int mon;\n    char *ss = *s;\n\n    if (!**s)\n\treturn -1;\n\n    while (**s && IS_DIGIT(**s))\n\tStrcat_char(tmp, *((*s)++));\n    if (tmp->length > 0) {\n\tmon = atoi(tmp->ptr);\n    }\n    else {\n\twhile (**s && IS_ALPHA(**s))\n\t    Strcat_char(tmp, *((*s)++));\n\tfor (mon = 1; mon <= 12; mon++) {\n\t    if (strncmp(tmp->ptr, monthtbl[mon - 1], 3) == 0)\n\t\tbreak;\n\t}\n    }\n    if (mon < 1 || mon > 12) {\n\t*s = ss;\n\treturn -1;\n    }\n    return mon;\n}\n\nstatic int\nget_year(char **s)\n{\n    Str tmp = Strnew();\n    int year;\n    char *ss = *s;\n\n    if (!**s)\n\treturn -1;\n\n    while (**s && IS_DIGIT(**s))\n\tStrcat_char(tmp, *((*s)++));\n    if (tmp->length != 2 && tmp->length != 4) {\n\t*s = ss;\n\treturn -1;\n    }\n\n    year = atoi(tmp->ptr);\n    if (tmp->length == 2) {\n\tif (year >= 70)\n\t    year += 1900;\n\telse\n\t    year += 2000;\n    }\n    return year;\n}\n\nstatic int\nget_time(char **s, int *hour, int *min, int *sec)\n{\n    Str tmp = Strnew();\n    char *ss = *s;\n\n    if (!**s)\n\treturn -1;\n\n    while (**s && IS_DIGIT(**s))\n\tStrcat_char(tmp, *((*s)++));\n    if (**s != ':') {\n\t*s = ss;\n\treturn -1;\n    }\n    *hour = atoi(tmp->ptr);\n\n    (*s)++;\n    Strclear(tmp);\n    while (**s && IS_DIGIT(**s))\n\tStrcat_char(tmp, *((*s)++));\n    if (**s != ':') {\n\t*s = ss;\n\treturn -1;\n    }\n    *min = atoi(tmp->ptr);\n\n    (*s)++;\n    Strclear(tmp);\n    while (**s && IS_DIGIT(**s))\n\tStrcat_char(tmp, *((*s)++));\n    *sec = atoi(tmp->ptr);\n\n    if (*hour < 0 || *hour >= 24 ||\n\t*min < 0 || *min >= 60 || *sec < 0 || *sec >= 60) {\n\t*s = ss;\n\treturn -1;\n    }\n    return 0;\n}\n\nstatic int\nget_zone(char **s, int *z_hour, int *z_min)\n{\n    Str tmp = Strnew();\n    int zone;\n    char *ss = *s;\n\n    if (!**s)\n\treturn -1;\n\n    if (**s == '+' || **s == '-')\n\tStrcat_char(tmp, *((*s)++));\n    while (**s && IS_DIGIT(**s))\n\tStrcat_char(tmp, *((*s)++));\n    if (!(tmp->length == 4 && IS_DIGIT(*ss)) &&\n\t!(tmp->length == 5 && (*ss == '+' || *ss == '-'))) {\n\t*s = ss;\n\treturn -1;\n    }\n\n    zone = atoi(tmp->ptr);\n    *z_hour = zone / 100;\n    *z_min = zone - (zone / 100) * 100;\n    return 0;\n}\n\n/* RFC 1123 or RFC 850 or ANSI C asctime() format string -> time_t */\ntime_t\nmymktime(char *timestr)\n{\n    char *s;\n    int day, mon, year, hour, min, sec, z_hour = 0, z_min = 0;\n\n    if (!(timestr && *timestr))\n\treturn -1;\n    s = timestr;\n\n#ifdef DEBUG\n    fprintf(stderr, \"mktime: %s\\n\", timestr);\n#endif\t\t\t\t/* DEBUG */\n\n    while (*s && IS_ALPHA(*s))\n\ts++;\n    while (*s && !IS_ALNUM(*s))\n\ts++;\n\n    if (IS_DIGIT(*s)) {\n\t/* RFC 1123 or RFC 850 format */\n\tif ((day = get_day(&s)) == -1)\n\t    return -1;\n\n\twhile (*s && !IS_ALNUM(*s))\n\t    s++;\n\tif ((mon = get_month(&s)) == -1)\n\t    return -1;\n\n\twhile (*s && !IS_DIGIT(*s))\n\t    s++;\n\tif ((year = get_year(&s)) == -1)\n\t    return -1;\n\n\twhile (*s && !IS_DIGIT(*s))\n\t    s++;\n\tif (!*s) {\n\t    hour = 0;\n\t    min = 0;\n\t    sec = 0;\n\t}\n\telse {\n\t    if (get_time(&s, &hour, &min, &sec) == -1)\n\t\treturn -1;\n\t    while (*s && !IS_DIGIT(*s) && *s != '+' && *s != '-')\n\t\ts++;\n\t    get_zone(&s, &z_hour, &z_min);\n\t}\n    }\n    else {\n\t/* ANSI C asctime() format. */\n\twhile (*s && !IS_ALNUM(*s))\n\t    s++;\n\tif ((mon = get_month(&s)) == -1)\n\t    return -1;\n\n\twhile (*s && !IS_DIGIT(*s))\n\t    s++;\n\tif ((day = get_day(&s)) == -1)\n\t    return -1;\n\n\twhile (*s && !IS_DIGIT(*s))\n\t    s++;\n\tif (get_time(&s, &hour, &min, &sec) == -1)\n\t    return -1;\n\n\twhile (*s && !IS_DIGIT(*s))\n\t    s++;\n\tif ((year = get_year(&s)) == -1)\n\t    return -1;\n    }\n#ifdef DEBUG\n    fprintf(stderr,\n\t    \"year=%d month=%d day=%d hour:min:sec=%d:%d:%d zone=%d:%d\\n\", year,\n\t    mon, day, hour, min, sec, z_hour, z_min);\n#endif\t\t\t\t/* DEBUG */\n\n    mon -= 3;\n    if (mon < 0) {\n\tmon += 12;\n\tyear--;\n    }\n    day += (year - 1968) * 1461 / 4;\n    day += ((((mon * 153) + 2) / 5) - 672);\n    hour -= z_hour;\n    min -= z_min;\n    return (time_t) ((day * 60 * 60 * 24) +\n\t\t     (hour * 60 * 60) + (min * 60) + sec);\n}\n\n#ifdef USE_COOKIE\n#ifdef INET6\n#include <sys/socket.h>\n#endif\t\t\t\t/* INET6 */\n#ifndef __MINGW32_VERSION\n#include <netdb.h>\n#else\n#include <winsock.h>\n#endif\nchar *\nFQDN(char *host)\n{\n    char *p;\n#ifndef INET6\n    struct hostent *entry;\n#else\t\t\t\t/* INET6 */\n    int *af;\n#endif\t\t\t\t/* INET6 */\n\n    if (host == NULL)\n\treturn NULL;\n\n    if (strcasecmp(host, \"localhost\") == 0)\n\treturn host;\n\n    for (p = host; *p && *p != '.'; p++) ;\n\n    if (*p == '.')\n\treturn host;\n\n#ifndef INET6\n    if (!(entry = gethostbyname(host)))\n\treturn NULL;\n\n    return allocStr(entry->h_name, -1);\n#else\t\t\t\t/* INET6 */\n    for (af = ai_family_order_table[DNS_order];; af++) {\n\tint error;\n\tstruct addrinfo hints;\n\tstruct addrinfo *res, *res0;\n\tchar *namebuf;\n\n\tmemset(&hints, 0, sizeof(hints));\n\thints.ai_flags = AI_CANONNAME;\n\thints.ai_family = *af;\n\thints.ai_socktype = SOCK_STREAM;\n\terror = getaddrinfo(host, NULL, &hints, &res0);\n\tif (error) {\n\t    if (*af == PF_UNSPEC) {\n\t\t/* all done */\n\t\tbreak;\n\t    }\n\t    /* try next address family */\n\t    continue;\n\t}\n\tfor (res = res0; res != NULL; res = res->ai_next) {\n\t    if (res->ai_canonname) {\n\t\t/* found */\n\t\tnamebuf = strdup(res->ai_canonname);\n\t\tfreeaddrinfo(res0);\n\t\treturn namebuf;\n\t    }\n\t}\n\tfreeaddrinfo(res0);\n\tif (*af == PF_UNSPEC) {\n\t    break;\n\t}\n    }\n    /* all failed */\n    return NULL;\n#endif\t\t\t\t/* INET6 */\n}\n\n#endif\t\t\t\t/* USE_COOKIE */\n\nvoid (*mySignal(int signal_number, void (*action) (int))) (int) {\n#ifdef\tSA_RESTART\n    struct sigaction new_action, old_action;\n\n    sigemptyset(&new_action.sa_mask);\n    new_action.sa_handler = action;\n    if (signal_number == SIGALRM) {\n#ifdef\tSA_INTERRUPT\n\tnew_action.sa_flags = SA_INTERRUPT;\n#else\n\tnew_action.sa_flags = 0;\n#endif\n    }\n    else {\n\tnew_action.sa_flags = SA_RESTART;\n    }\n    sigaction(signal_number, &new_action, &old_action);\n    return (old_action.sa_handler);\n#else\n    return (signal(signal_number, action));\n#endif\n}\n\nstatic char Base64Table[] =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nStr\nbase64_encode(const char *src, size_t len)\n{\n    Str dest;\n    const unsigned char *in, *endw, *s;\n    unsigned long j;\n    size_t k;\n\n    s = (unsigned char*)src;\n\n    k = len;\n    if (k % 3)\n\tk += 3 - (k % 3);\n\n    k = k / 3 * 4;\n\n    if (!len || k + 1 < len)\n\treturn Strnew();\n\n    dest = Strnew_size(k);\n    if (dest->area_size <= k) {\n\tStrfree(dest);\n\treturn Strnew();\n    }\n\n    in = s;\n\n    endw = s + len - 2;\n\n    while (in < endw) {\n\tj = *in++;\n\tj = j << 8 | *in++;\n\tj = j << 8 | *in++;\n\n\tStrcatc(dest, Base64Table[(j >> 18) & 0x3f]);\n\tStrcatc(dest, Base64Table[(j >> 12) & 0x3f]);\n\tStrcatc(dest, Base64Table[(j >> 6) & 0x3f]);\n\tStrcatc(dest, Base64Table[j & 0x3f]);\n    }\n\n    if (s + len - in) {\n\tj = *in++;\n\tif (s + len - in) {\n\t    j = j << 8 | *in++;\n\t    j = j << 8;\n\t    Strcatc(dest, Base64Table[(j >> 18) & 0x3f]);\n\t    Strcatc(dest, Base64Table[(j >> 12) & 0x3f]);\n\t    Strcatc(dest, Base64Table[(j >> 6) & 0x3f]);\n\t} else {\n\t    j = j << 8;\n\t    j = j << 8;\n\t    Strcatc(dest, Base64Table[(j >> 18) & 0x3f]);\n\t    Strcatc(dest, Base64Table[(j >> 12) & 0x3f]);\n\t    Strcatc(dest, '=');\n\t}\n\tStrcatc(dest, '=');\n    }\n    Strnulterm(dest);\n    return dest;\n}\n</Code>"
                }
            ],
            "url": "https://github.com/tats/w3m/commit/edc602651c506aeeb60544b55534dd1722a340d3",
            "description": "An out-of-bounds write issue has been discovered in the backspace handling of the checkType() function in etc.c within the W3M application. This vulnerability is triggered by supplying a specially crafted HTML file to the w3m binary. Exploitation of this flaw could lead to application crashes, resulting in a denial of service condition.",
            "date": "2023-12-21",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-787\", \"CWE-125\", \"CWE-17\"],\n  \"severity\": \"low\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-787",
                    "CWE-17",
                    "CWE-125"
                ],
                "severity": "LOW"
            },
            "ground_truth_CVE": "CVE-2023-4255",
            "ground_truth_CWEs": [
                "CWE-787"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "GT_SUBSET_OF_PR"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Tuleap is a Libre and Open Source tool for end to end traceability of application and system developments. This is a follow up to GHSA-887w-pv2r-x8pm/CVE-2021-41276, the initial fix was incomplete. Tuleap does not sanitize properly the search filter built from the ldap_id attribute of a user during the daily synchronization. A malicious user could force accounts to be suspended or take over another account by forcing the update of the ldap_uid attribute. Note that the malicious user either need to have site administrator capability on the Tuleap instance or be an LDAP operator with the capability to create/modify account. The Tuleap instance needs to have the LDAP plugin activated and enabled for this issue to be exploitable. The following versions contain the fix: Tuleap Community Edition 13.2.99.83, Tuleap Enterprise Edition 13.1-6, and Tuleap Enterprise Edition 13.2-4.\nFile: plugins/ldap/include/LDAP_UserManager.class.php\nContent: \n<Code>\n<?php\n/**\n * Copyright (c) STMicroelectronics, 2008. All Rights Reserved.\n * Copyright (c) Enalean, 2012 - Present. All Rights Reserved.\n *\n * Originally written by Manuel Vacelet, 2008\n *\n * This file is a part of Tuleap.\n *\n * Tuleap is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * Tuleap is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.\n */\n\nuse Tuleap\\Cryptography\\ConcealedString;\nuse Tuleap\\LDAP\\Exception\\IdentifierTypeNotFoundException;\nuse Tuleap\\LDAP\\Exception\\IdentifierTypeNotRecognizedException;\nuse Tuleap\\User\\DataIncompatibleWithUsernameGenerationException;\nuse Tuleap\\User\\UserNameNormalizer;\n\n/**\n * Manage interaction between an LDAP group and Codendi user_group.\n */\nclass LDAP_UserManager\n{\n    public const EVENT_UPDATE_LOGIN = 'PLUGIN_LDAP_UPDATE_LOGIN';\n\n    /**\n     * @type LDAP\n     */\n    private $ldap;\n\n    /**\n     * @var array<string, LDAPResult|false>\n     */\n    private $ldapResultCache = [];\n\n    /**\n     * @var PFUser[]\n     */\n    private $usersLoginChanged = [];\n\n    /**\n     * @var LDAP_UserSync\n     */\n    private $user_sync;\n\n    public function __construct(LDAP $ldap, LDAP_UserSync $user_sync, private UserNameNormalizer $username_generator)\n    {\n        $this->ldap      = $ldap;\n        $this->user_sync = $user_sync;\n    }\n\n    /**\n     * Create an LDAP_User object out of a regular user if this user comes as\n     * a corresponding LDAP entry\n     */\n    public function getLDAPUserFromUser(PFUser $user): ?LDAP_User\n    {\n        $ldap_result = $this->getLdapFromUser($user);\n        if ($ldap_result) {\n            return new LDAP_User($user, $ldap_result);\n        }\n        return null;\n    }\n\n    /**\n     * Get LDAPResult object corresponding to an LDAP ID\n     *\n     * @param  $ldapId    The LDAP identifier\n     * @return LDAPResult|false\n     */\n    public function getLdapFromLdapId($ldapId)\n    {\n        if (! isset($this->ldapResultCache[$ldapId])) {\n            $lri = $this->getLdap()->searchEdUid($ldapId);\n            if ($lri && $lri->count() == 1) {\n                $this->ldapResultCache[$ldapId] = $lri->current();\n            } else {\n                $this->ldapResultCache[$ldapId] = false;\n            }\n        }\n        return $this->ldapResultCache[$ldapId];\n    }\n\n    /**\n     * Get LDAPResult object corresponding to a User object\n     *\n     * @param  PFUser $user\n     * @return LDAPResult|false\n     */\n    public function getLdapFromUser($user)\n    {\n        if ($user && ! $user->isAnonymous()) {\n            return $this->getLdapFromLdapId($user->getLdapId());\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Get LDAPResult object corresponding to a user name\n     *\n     * @param  string $userName  The user name\n     * @return LDAPResult|false\n     */\n    public function getLdapFromUserName($userName)\n    {\n        $user = $this->getUserManager()->getUserByUserName($userName);\n        return $this->getLdapFromUser($user);\n    }\n\n    /**\n     * Get LDAPResult object corresponding to a user id\n     *\n     * @param  int $userId    The user id\n     * @return LDAPResult|false\n     */\n    public function getLdapFromUserId($userId)\n    {\n        $user = $this->getUserManager()->getUserById($userId);\n        return $this->getLdapFromUser($user);\n    }\n\n    /**\n     * Get a User object from an LDAP result\n     *\n     * @param LDAPResult $lr The LDAP result\n     *\n     * @return PFUser|false\n     */\n    public function getUserFromLdap(LDAPResult $lr)\n    {\n        $user = $this->getUserManager()->getUserByLdapId($lr->getEdUid());\n        if (! $user) {\n            $user = $this->createAccountFromLdap($lr);\n        }\n        return $user;\n    }\n\n    /**\n     * Get the list of Codendi users corresponding to the given list of LDAP users.\n     *\n     * When a user doesn't exist, his account is created automaticaly.\n     *\n     * @param Array $ldapIds\n     * @return Array\n     */\n    public function getUserIdsForLdapUser($ldapIds)\n    {\n        $userIds = [];\n        $dao     = $this->getDao();\n        foreach ($ldapIds as $lr) {\n            $user = $this->getUserManager()->getUserByLdapId($lr->getEdUid());\n            if ($user) {\n                $userIds[$user->getId()] = $user->getId();\n            } else {\n                $user = $this->createAccountFromLdap($lr);\n                if ($user) {\n                    $userIds[$user->getId()] = $user->getId();\n                }\n            }\n        }\n        return $userIds;\n    }\n\n    /**\n     * Return an array of user ids corresponding to the give list of user identifiers\n     *\n     * @param String $userList A comma separated list of user identifiers\n     *\n     * @return Array\n     */\n    public function getUserIdsFromUserList($userList)\n    {\n        $userIds  = [];\n        $userList = array_map('trim', preg_split('/[,;]/', $userList));\n        foreach ($userList as $u) {\n            $user = $this->getUserManager()->findUser($u);\n            if ($user) {\n                $userIds[] = $user->getId();\n            } else {\n                $GLOBALS['Response']->addFeedback('error', sprintf(dgettext('tuleap-ldap', 'User not found: %1$s'), $u));\n            }\n        }\n        return $userIds;\n    }\n\n    /**\n     * Return LDAP logins stored in DB corresponding to given userIds.\n     *\n     * @param array $userIds Array of user ids\n     * @return DataAccessResult ldap logins\n     */\n    public function getLdapLoginFromUserIds(array $userIds)\n    {\n        $dao = $this->getDao();\n        return $dao->searchLdapLoginFromUserIds($userIds);\n    }\n\n    /**\n     * Check if a given name is not already a user name or a project name\n     *\n     * This should be in UserManager\n     *\n     * @param String $name Name to test\n     * @return bool\n     */\n    public function userNameIsAvailable($name)\n    {\n        $dao = $this->getDao();\n        return $dao->userNameIsAvailable($name);\n    }\n\n    /**\n     * Create user account based on LDAPResult info.\n     *\n     * @return PFUser|false\n     */\n    public function createAccountFromLdap(LDAPResult $lr)\n    {\n        $user = $this->createAccount($lr->getEdUid(), $lr->getLogin(), $lr->getCommonName(), $lr->getEmail());\n        return $user;\n    }\n\n    /**\n     * Create user account based on LDAP info.\n     *\n     * @param  String $eduid\n     * @param  String $uid\n     * @param  String $cn\n     * @param  String $email\n     * @return PFUser|false\n     */\n    public function createAccount($eduid, $uid, $cn, $email)\n    {\n        if (trim($uid) == '' || trim($eduid) == '') {\n            return false;\n        }\n\n        $user = new PFUser();\n        try {\n            $user->setUserName($this->username_generator->normalize($uid));\n        } catch (DataIncompatibleWithUsernameGenerationException $exception) {\n            return false;\n        }\n\n        $user->setLdapId($eduid);\n        $user->setRealName($cn);\n        $user->setEmail($email);\n        $mail_confirm_code_generator = new MailConfirmationCodeGenerator(\n            $this->getUserManager(),\n            new RandomNumberGenerator()\n        );\n        $mail_confirm_code           = $mail_confirm_code_generator->getConfirmationCode();\n        $user->setConfirmHash($mail_confirm_code);\n\n        // Default LDAP\n        $user->setStatus($this->getLdap()->getLDAPParam('default_user_status'));\n        $user->setRegisterPurpose('LDAP');\n        $user->setUnixStatus('S');\n        $user->setTimezone('GMT');\n        $user->setLanguageID($GLOBALS['Language']->getText('conf', 'language_id'));\n\n        $um   = $this->getUserManager();\n        $user = $um->createAccount($user);\n        if (! $user) {\n            return false;\n        }\n\n        return $user;\n    }\n\n    public function createLdapUser(LDAP_User $ldap_user): void\n    {\n        if (! $this->getDao()->hasLoginConfirmationDate($ldap_user)) {\n            $this->getDao()->createLdapUser($ldap_user->getId(), 0, $ldap_user->getUid());\n        }\n    }\n\n    /**\n     * @throws LDAP_AuthenticationFailedException\n     * @throws LDAP_UserNotFoundException\n     */\n    public function authenticate($username, ConcealedString $password): ?PFUser\n    {\n        if (! $this->ldap->authenticate($username, $password)) {\n            throw new LDAP_AuthenticationFailedException();\n        }\n\n        $ldap_user = $this->getUserFromServer($username);\n        $user      = $this->getUserManager()->getUserByLdapId($ldap_user->getEdUid());\n\n        if ($user === null) {\n            $user = $this->createAccountFromLdap($ldap_user);\n        }\n\n        if ($user) {\n            $this->synchronizeUser($user, $ldap_user, $password);\n            return $user;\n        }\n\n        return null;\n    }\n\n    private function mergeDefaultAttributesAndSiteAttributes()\n    {\n        return array_values(\n            array_unique(\n                array_merge(\n                    $this->ldap->getDefaultAttributes(),\n                    $this->user_sync->getSyncAttributes($this->ldap)\n                )\n            )\n        );\n    }\n\n    private function getUserFromServer($username)\n    {\n        $ldap_results_iterator = $this->ldap->searchLogin(\n            $username,\n            $this->mergeDefaultAttributesAndSiteAttributes()\n        );\n\n        if ($ldap_results_iterator === false || count($ldap_results_iterator) !== 1) {\n            throw new LDAP_UserNotFoundException();\n        }\n\n        return $ldap_results_iterator->current();\n    }\n\n    /**\n     * Synchronize user account with LDAP informations\n     *\n     * @return bool\n     */\n    public function synchronizeUser(PFUser $user, LDAPResult $lr, ConcealedString $password)\n    {\n        $user->setPassword($password);\n\n        $sync = LDAP_UserSync::instance();\n        $sync->sync($user, $lr);\n\n        // Perform DB update\n        $userUpdated = $this->getUserManager()->updateDb($user);\n\n        $ldapUpdated = true;\n        $user_id     = $this->getLdapLoginFromUserIds([$user->getId()])->getRow();\n        if ($user_id['ldap_uid'] != $lr->getLogin()) {\n            $ldapUpdated = $this->updateLdapUid($user, $lr->getLogin());\n            $this->triggerRenameOfUsers();\n        }\n\n        return ($userUpdated || $ldapUpdated);\n    }\n\n    /**\n     * Store new LDAP login in database\n     *\n     * Force update of SVNAccessFile in project the user belongs to as\n     * project member or user group member\n     *\n     * @param PFUser    $user    The user to update\n     * @param String  $ldapUid New LDAP login\n     *\n     * @return bool\n     */\n    public function updateLdapUid(PFUser $user, $ldapUid)\n    {\n        if ($this->getDao()->updateLdapUid($user->getId(), $ldapUid)) {\n            $this->addUserToRename($user);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Get the list of users whom LDAP uid changed\n     *\n     * @return Array of User\n     */\n    public function getUsersToRename()\n    {\n        return $this->usersLoginChanged;\n    }\n\n    /**\n     * Add a user whom login changed to the rename pipe\n     *\n     * @param PFUser $user A user to rename\n     */\n    public function addUserToRename(PFUser $user)\n    {\n        $this->usersLoginChanged[] = $user;\n    }\n\n    /**\n     * Create PLUGIN_LDAP_UPDATE_LOGIN event if there are user login updates pending\n     */\n    public function triggerRenameOfUsers()\n    {\n        if (count($this->usersLoginChanged)) {\n            $userIds = [];\n            foreach ($this->usersLoginChanged as $user) {\n                $userIds[] = $user->getId();\n            }\n            $sem = $this->getSystemEventManager();\n            $sem->createEvent(self::EVENT_UPDATE_LOGIN, implode(SystemEvent::PARAMETER_SEPARATOR, $userIds), SystemEvent::PRIORITY_MEDIUM);\n        }\n    }\n\n    /**\n     * Return array of users that will be suspended\n     *\n     * @return array of PFUser\n     *\n     */\n    public function getUsersToBeSuspended()\n    {\n        $users_to_be_suspended = [];\n        $active_users          = $this->getDao()->getActiveUsers();\n        foreach ($active_users as $active_user) {\n            if ($this->isUserDeletedFromLdap($active_user)) {\n                $user = new PFUser($active_user);\n                array_push($users_to_be_suspended, $user);\n            }\n        }\n        return $users_to_be_suspended;\n    }\n\n    /**\n     * Return number of active users\n     *\n     * @return int\n     *\n     */\n    public function getNbrActiveUsers()\n    {\n        $row = $this->getDao()->getNbrActiveUsers()->getRow();\n        return $row[\"count\"];\n    }\n\n    /**\n     * Return true if users could be suspended\n     *\n     * @param int $nbr_all_users\n     *\n     * @return bool\n     *\n     */\n    public function areUsersSupendable($nbr_all_users)\n    {\n        $nbr_users_to_suspend = count($this->getUsersToBeSuspended());\n        if ((! $threshold_users_suspension = $this->ldap->getLDAPParam('threshold_users_suspension')) || $nbr_users_to_suspend == 0) {\n            return true;\n        }\n        return $this->checkThreshold($nbr_users_to_suspend, $nbr_all_users);\n    }\n\n    /**\n     * Check that threshold is upper then percentage of users that will be suspended\n     *\n     * @param int $nbr_users_to_suspend\n     * @param int $nbr_all_users\n     *\n     * @return bool\n     *\n     */\n    public function checkThreshold($nbr_users_to_suspend, $nbr_all_users)\n    {\n        if ($nbr_users_to_suspend == 0 || $nbr_all_users == 0) {\n            return true;\n        }\n        $percentage_users_to_suspend = ($nbr_users_to_suspend / $nbr_all_users) * 100;\n        $threshold_users_suspension  = $this->ldap->getLDAPParam('threshold_users_suspension');\n        $logger                      = new \\Tuleap\\LDAP\\LdapLogger();\n        if ($percentage_users_to_suspend <= $threshold_users_suspension) {\n            $logger->info(\"[LDAP] Percentage of suspended users is ( \" . $percentage_users_to_suspend . \"% ) and threshold is ( \" . $threshold_users_suspension . \"% )\");\n            $logger->info(\"[LDAP] Number of suspended users is ( \" . $nbr_users_to_suspend . \" ) and number of active users is ( \" . $nbr_all_users . \" )\");\n            return true;\n        } else {\n            $logger->warning(\"[LDAP] Users not suspended: the percentage of users to suspend is ( \" . $percentage_users_to_suspend . \"% ) higher then threshold ( \" . $threshold_users_suspension . \"% )\");\n            $logger->warning(\"[LDAP] Number of users not suspended is ( \" . $nbr_users_to_suspend . \" ) and number of active users is ( \" . $nbr_all_users . \" )\");\n            return false;\n        }\n    }\n\n\n    /**\n     * Return true if user is deleted from ldap server\n     *\n     * @param array $row\n     *\n     * @return bool\n     *\n     */\n    public function isUserDeletedFromLdap($row)\n    {\n        $ldap_query = $this->ldap->getLDAPParam('eduid') . '=' . $row['ldap_id'];\n        $attributes = $this->user_sync->getSyncAttributes($this->ldap);\n        $ldapSearch = false;\n\n        foreach (explode(';', $this->ldap->getLDAPParam('people_dn') ?? '') as $people_dn) {\n            $ldapSearch = $this->ldap->search($people_dn, $ldap_query, LDAP::SCOPE_ONELEVEL, $attributes);\n            if ($ldapSearch !== false && count($ldapSearch) === 1) {\n                break;\n            }\n        }\n        if ($this->ldap->getErrno() === LDAP::ERR_SUCCESS && $ldapSearch) {\n            if (count($ldapSearch) == 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Wrapper for DAO\n     *\n     * @return LDAP_UserDao\n     */\n    public function getDao()\n    {\n        return new LDAP_UserDao(CodendiDataAccess::instance());\n    }\n\n    /**\n     * Wrapper for LDAP object\n     *\n     * @return LDAP\n     */\n    protected function getLdap()\n    {\n        return $this->ldap;\n    }\n\n    /**\n     * Wrapper for UserManager object\n     *\n     * @return UserManager\n     */\n    protected function getUserManager()\n    {\n        return UserManager::instance();\n    }\n\n    /**\n     * Wrapper for SystemEventManager object\n     *\n     * @return SystemEventManager\n     */\n    protected function getSystemEventManager()\n    {\n        return SystemEventManager::instance();\n    }\n\n    /**\n     * @return PFUser|null\n     */\n    public function getUserByIdentifier($identifier)\n    {\n        $separator_position = strpos($identifier, ':');\n        $type               = strtolower(substr($identifier, 0, $separator_position));\n        $value              = strtolower(substr($identifier, $separator_position + 1));\n\n        if (! $type) {\n            throw new IdentifierTypeNotFoundException();\n        }\n\n        $ldap = $this->getLdap();\n        $lri  = null;\n        switch ($type) {\n            case 'ldapid':\n                $lri = $ldap->searchEdUid($value);\n                break;\n            case 'ldapdn':\n                $lri = $ldap->searchDn($value);\n                break;\n            case 'ldapuid':\n                $lri = $ldap->searchLogin($value);\n                break;\n            default:\n                throw new IdentifierTypeNotRecognizedException();\n        }\n\n        if ($lri === false) {\n            return null;\n        }\n\n        return $this->getUserFromLdapIterator($lri);\n    }\n\n    /**\n     * Get a User object from an LDAP iterator\n     *\n     * @param LDAPResultIterator $lri An LDAP result iterator\n     *\n     * @return PFUser|null\n     */\n    public function getUserFromLdapIterator(?LDAPResultIterator $lri = null)\n    {\n        if ($lri && count($lri) === 1 && (($user = $this->getUserFromLdap($lri->current())) !== false)) {\n            return $user;\n        }\n\n        return null;\n    }\n}\n</Code>"
                }
            ],
            "url": "https://github.com/Enalean/tuleap/commit/64e77561eba9f8233199c2962b3497ed7294a7d2",
            "description": "Tuleap is a Libre and Open Source tool for end to end traceability of application and system developments. This is a follow up to GHSA-887w-pv2r-x8pm/CVE-2021-41276, the initial fix was incomplete. Tuleap does not sanitize properly the search filter built from the ldap_id attribute of a user during the daily synchronization. A malicious user could force accounts to be suspended or take over another account by forcing the update of the ldap_uid attribute. Note that the malicious user either need to have site administrator capability on the Tuleap instance or be an LDAP operator with the capability to create/modify account. The Tuleap instance needs to have the LDAP plugin activated and enabled for this issue to be exploitable. The following versions contain the fix: Tuleap Community Edition 13.2.99.83, Tuleap Enterprise Edition 13.1-6, and Tuleap Enterprise Edition 13.2-4.",
            "date": "2021-12-15",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-732\"],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-732"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2021-43782",
            "ground_truth_CWEs": [
                "CWE-74"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS  . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\n\"CVSS v3.0 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: No description provided.\nFile: packages/backend/src/api/v1/template-versions.ts\nContent: \n<Code>\nimport sql from \"@/src/utils/db\"\nimport Router from \"koa-router\"\nimport { Context } from \"koa\"\nimport postgres from \"postgres\"\nimport { unCamelObject } from \"@/src/utils/misc\"\nimport { checkAccess } from \"@/src/utils/authorization\"\n\nconst versions = new Router({\n  prefix: \"/template_versions\",\n})\n\n// Use unCameledSql to avoid camel casing the results so they're compatible with openai's SDK\n// Otherwise it returns stuff like maxTokens instead of max_tokens and OpenAI breaks\nconst unCameledSql = postgres(process.env.DATABASE_URL!)\n\n//Warning: Route used by SDK to fetch the latest version of a template\nversions.get(\"/latest\", async (ctx: Context) => {\n  const { projectId } = ctx.state\n\n  const { slug } = ctx.request.query as {\n    slug: string\n  }\n\n  const [latestVersion] = await unCameledSql`\n    SELECT t.id::text, t.slug, tv.id::text, tv.content, tv.extra, tv.created_at, tv.version\n    FROM template t\n    INNER JOIN template_version tv ON t.id = tv.template_id\n    WHERE \n      t.project_id = ${projectId}\n      AND t.slug = ${slug}\n      AND tv.is_draft = false\n    ORDER BY tv.created_at DESC\n    LIMIT 1\n  `\n\n  if (!latestVersion) {\n    ctx.throw(\"Template not found, is the project ID correct?\", 404)\n  }\n\n  latestVersion.extra = unCamelObject(latestVersion.extra)\n\n  // This makes sure OpenAI messages are not camel cased as used in the app\n  // For example: message.toolCallId instead of message.tool_call_id\n  if (typeof latestVersion.content !== \"string\") {\n    latestVersion.content = latestVersion.content?.map((c: any) =>\n      unCamelObject(c),\n    )\n  }\n\n  ctx.body = latestVersion\n})\n\nversions.get(\"/:id\", async (ctx: Context) => {\n  const [version] = await sql`\n    select * from template_version where id = ${ctx.params.id}\n  `\n\n  version.extra = unCamelObject(version.extra)\n\n  const [template] = await sql`\n    select * from template where project_id = ${ctx.state.projectId} and id = ${version.templateId}\n  `\n\n  ctx.body = { ...version, template }\n})\n\nversions.patch(\n  \"/:id\",\n  checkAccess(\"prompts\", \"update\"),\n  async (ctx: Context) => {\n    const { content, extra, testValues, isDraft } = ctx.request.body as {\n      id: string\n      content: any[]\n      extra: any\n      testValues: any\n      isDraft: boolean\n    }\n\n    const [templateVersion] = await sql`\n    update template_version set\n      content = ${sql.json(content)},\n      extra = ${sql.json(unCamelObject(extra))},\n      test_values = ${sql.json(testValues)},\n      is_draft = ${isDraft}\n    where id = ${ctx.params.id}\n    returning *\n  `\n\n    ctx.body = templateVersion\n  },\n)\n\nexport default versions\n</Code>"
                }
            ],
            "url": "https://github.com/lunary-ai/lunary/commit/b7bd3a830a0f47ba07d0fd57bf78c4dd8a216297",
            "description": "In lunary-ai/lunary versions 1.2.2 through 1.2.25, an improper access control vulnerability allows users on the Free plan to invite other members and assign them any role, including those intended for Paid and Enterprise plans only. This issue arises due to insufficient backend validation of roles and permissions, enabling unauthorized users to join a project and potentially exploit roles and permissions not intended for their use. The vulnerability specifically affects the Team feature, where the backend fails to validate whether a user has paid for a plan before allowing them to send invite links with any role assigned. This could lead to unauthorized access and manipulation of project settings or data.",
            "date": "2024-06-06",
            "github_description": "No description provided.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-89\"],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-89"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2024-5127",
            "ground_truth_CWEs": [
                "CWE-284"
            ],
            "ground_truth_severities": {},
            "ground_truth_CVSS_version": [],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: TensorFlow is an open source platform for machine learning. The implementation of `AvgPool3DGradOp` does not fully validate the input `orig_input_shape`. This results in an overflow that results in a `CHECK` failure which can be used to trigger a denial of service attack. We have patched the issue in GitHub commit 9178ac9d6389bdc54638ab913ea0e419234d14eb. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.\nFile: tensorflow/python/kernel_tests/nn_ops/pooling_ops_3d_test.py\nContent: \n<Code>\n# Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\n\"\"\"Functional tests for 3d pooling operations.\"\"\"\n\nimport numpy as np\n\nfrom tensorflow.python.eager import context\nfrom tensorflow.python.framework import constant_op\nfrom tensorflow.python.framework import errors\nfrom tensorflow.python.framework import errors_impl\nfrom tensorflow.python.framework import test_util\nfrom tensorflow.python.ops import array_ops\nfrom tensorflow.python.ops import gen_nn_ops\nfrom tensorflow.python.ops import gradient_checker\nfrom tensorflow.python.ops import gradients_impl\nfrom tensorflow.python.ops import nn_ops\nimport tensorflow.python.ops.nn_grad  # pylint: disable=unused-import\nfrom tensorflow.python.platform import test\n\n\ndef GetTestConfigs():\n  \"\"\"Get all the valid tests configs to run.\n\n  Returns:\n    all the valid test configs as tuples of data_format and use_gpu.\n  \"\"\"\n  test_configs = [(\"NDHWC\", False), (\"NDHWC\", True)]\n  if test.is_gpu_available(cuda_only=True):\n    # \"NCHW\" format is currently supported exclusively on CUDA GPUs.\n    test_configs += [(\"NCDHW\", True)]\n  return test_configs\n\n\n# TODO(mjanusz): Add microbenchmarks for 3d pooling.\n@test_util.with_eager_op_as_function\nclass PoolingTest(test.TestCase):\n\n  def _VerifyOneTest(self, pool_func, input_sizes, window, strides, padding,\n                     data_format, expected, use_gpu):\n    \"\"\"Verifies the output values of the pooling function.\n\n    Args:\n      pool_func: Function to be called: co.MaxPool, co.AvgPool.\n      input_sizes: Input tensor dimensions.\n      window: Tuple of kernel dims: planes, rows, cols.\n      strides: Tuple of strides for dims: planes, rows, cols.\n      padding: Padding type.\n      data_format: The data format we use to run the pooling operation.\n      expected: An array containing the expected operation outputs.\n      use_gpu: Whether to run ops on GPU.\n    \"\"\"\n    total_size = 1\n    for s in input_sizes:\n      total_size *= s\n    # Initializes the input tensor with array containing incrementing\n    # numbers from 1.\n    x = [f * 1.0 for f in range(1, total_size + 1)]\n    with self.cached_session(use_gpu=use_gpu) as sess:\n      t = constant_op.constant(x, shape=input_sizes)\n      window = [1] + list(window) + [1]\n      strides = [1] + list(strides) + [1]\n      if data_format == \"NCDHW\":\n        t = test_util.NHWCToNCHW(t)\n        window = test_util.NHWCToNCHW(window)\n        strides = test_util.NHWCToNCHW(strides)\n      t = pool_func(\n          t,\n          ksize=window,\n          strides=strides,\n          padding=padding,\n          data_format=data_format)\n      if data_format == \"NCDHW\":\n        t = test_util.NCHWToNHWC(t)\n      vals = self.evaluate(t)\n    # Verifies values.\n    actual = vals.flatten()\n    self.assertAllClose(expected, actual)\n\n  def _VerifyValues(self, pool_func, input_sizes, window, strides,\n                    padding, expected):\n    for data_format, use_gpu in GetTestConfigs():\n      self._VerifyOneTest(pool_func, input_sizes, window, strides, padding,\n                          data_format, expected, use_gpu)\n\n  def testAvgPool3dValidPadding(self):\n    expected_output = [20.5, 21.5, 22.5]\n    self._VerifyValues(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 3, 3, 3, 3],\n        window=(2, 2, 2),\n        strides=(2, 2, 2),\n        padding=\"VALID\",\n        expected=expected_output)\n\n  def testAvgPool3dSamePadding(self):\n    expected_output = [20.5, 21.5, 22.5, 26.5, 27.5, 28.5]\n    self._VerifyValues(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 2, 2, 4, 3],\n        window=(2, 2, 2),\n        strides=(2, 2, 2),\n        padding=\"SAME\",\n        expected=expected_output)\n\n  def testAvgPool3dSamePaddingDifferentStrides(self):\n    expected_output = [1.5, 4.5, 7.5, 17.5, 20.5, 23.5, 33.5, 36.5, 39.5]\n    self._VerifyValues(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 5, 8, 1, 1],\n        window=(1, 2, 3),\n        strides=(2, 3, 1),\n        padding=\"SAME\",\n        expected=expected_output)\n\n  def testMaxPool3dValidPadding(self):\n    expected_output = [40.0, 41.0, 42.0]\n    self._VerifyValues(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 3, 3, 3, 3],\n        window=(2, 2, 2),\n        strides=(2, 2, 2),\n        padding=\"VALID\",\n        expected=expected_output)\n\n  def testMaxPool3dSamePadding(self):\n    expected_output = [31., 32., 33., 34., 35., 36.]\n    self._VerifyValues(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 2, 2, 3, 3],\n        window=(2, 2, 2),\n        strides=(2, 2, 2),\n        padding=\"SAME\",\n        expected=expected_output)\n\n  def testMaxPool3dSamePaddingDifferentStrides(self):\n    expected_output = [2., 5., 8., 18., 21., 24., 34., 37., 40.]\n    self._VerifyValues(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 5, 8, 1, 1],\n        window=(1, 2, 3),\n        strides=(2, 3, 1),\n        padding=\"SAME\",\n        expected=expected_output)\n\n    # Test pooling on a larger input, with different stride and kernel\n    # size for the 'z' dimension.\n\n    # Simulate max pooling in numpy to get the expected output.\n    input_data = np.arange(1, 5 * 27 * 27 * 64 + 1).reshape((5, 27, 27, 64))\n    input_data = np.pad(input_data, [[0, 0], [0, 1], [0, 1], [0, 0]],\n                        mode=\"constant\")\n    expected_output = input_data[:, 1::2, 1::2, :]\n    expected_output[:, -1, :, :] = input_data[:, -2, 1::2, :]\n    expected_output[:, :, -1, :] = input_data[:, 1::2, -2, :]\n    expected_output[:, -1, -1, :] = input_data[:, -2, -2, :]\n\n    self._VerifyValues(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 5, 27, 27, 64],\n        window=(1, 2, 2),\n        strides=(1, 2, 2),\n        padding=\"SAME\",\n        expected=expected_output.flatten())\n\n  def testKernelSmallerThanStride(self):\n    self._VerifyValues(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 3, 3, 3, 1],\n        window=[1, 1, 1],\n        strides=[2, 2, 2],\n        padding=\"SAME\",\n        expected=[1, 3, 7, 9, 19, 21, 25, 27])\n\n    self._VerifyValues(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 7, 7, 7, 1],\n        window=[2, 2, 2],\n        strides=[3, 3, 3],\n        padding=\"VALID\",\n        expected=[58, 61, 79, 82, 205, 208, 226, 229])\n\n    self._VerifyValues(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 3, 3, 3, 1],\n        window=[1, 1, 1],\n        strides=[2, 2, 2],\n        padding=\"SAME\",\n        expected=[1, 3, 7, 9, 19, 21, 25, 27])\n\n    self._VerifyValues(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 7, 7, 7, 1],\n        window=[2, 2, 2],\n        strides=[3, 3, 3],\n        padding=\"VALID\",\n        expected=[29.5, 32.5, 50.5, 53.5, 176.5, 179.5, 197.5, 200.5])\n\n  def testMaxPool3DEmptyTensorOutputShape(self):\n    \"\"\"Verifies the output shape of the max pooling function when tensor is empty.\n\n    Args: none\n    \"\"\"\n    input_sizes = [0, 112, 112, 112, 64]\n\n    input_data = 1.\n    input_tensor = constant_op.constant(\n        input_data, shape=input_sizes, name=\"input\")\n    max_pool_3d = nn_ops.max_pool3d(\n        input_tensor,\n        ksize=[2, 2, 2],\n        strides=[2, 2, 2],\n        padding=\"VALID\",\n        data_format=\"NDHWC\",\n        name=\"max_pool_3d\")\n    values = self.evaluate(max_pool_3d)\n    self.assertEqual(values.shape, (0, 56, 56, 56, 64))\n\n  def _ConstructAndTestGradientForConfig(self,\n                                         pool_func,\n                                         input_sizes,\n                                         output_sizes,\n                                         window,\n                                         strides,\n                                         padding,\n                                         data_format,\n                                         use_gpu):\n    \"\"\"Verifies the gradients of a pooling function.\n\n    Args:\n      pool_func: Function to be called, co.MaxPool, co.AvgPool,\n        or the Lua version.\n      input_sizes: Input tensor dimensions.\n      output_sizes: Output tensor dimensions.\n      window: Tuple of kernel dims: planes, rows, cols.\n      strides: Tuple of strides for dims: planes, rows, cols.\n      padding: Padding type.\n      data_format: Data format string.\n      use_gpu: Whether to run on GPU.\n    \"\"\"\n    total_size = 1\n    for s in input_sizes:\n      total_size *= s\n    # Initializes the input tensor with array containing incrementing\n    # numbers from 1.\n    x = np.arange(1, total_size + 1, dtype=np.float32)\n    with self.cached_session(use_gpu=use_gpu):\n      input_tensor = constant_op.constant(x, shape=input_sizes, name=\"input\")\n      err_g_margin = 1e-3\n      err_gg_margin = 1.5e-2\n      if pool_func == nn_ops.avg_pool3d:\n        func_name = \"avg_pool3d\"\n        x_init_value = None\n      else:\n        x_init_value = np.asfarray(np.arange(1, total_size + 1),\n                                   dtype=np.float32).reshape(input_sizes)\n        func_name = \"max_pool3d\"\n\n      ksize = [1, window[0], window[1], window[2], 1]\n      strides = [1, strides[0], strides[1], strides[2], 1]\n      t = input_tensor\n\n      if data_format == \"NCDHW\":\n        ksize = test_util.NHWCToNCHW(ksize)\n        strides = test_util.NHWCToNCHW(strides)\n        t = test_util.NHWCToNCHW(t)\n        output_sizes = test_util.NHWCToNCHW(output_sizes)\n\n      t = pool_func(\n          t,\n          ksize=ksize,\n          strides=strides,\n          padding=padding,\n          data_format=data_format,\n          name=func_name)\n      t_g = gradients_impl.gradients(t**2, input_tensor)[0]\n\n      err_g = gradient_checker.compute_gradient_error(\n          input_tensor,\n          input_sizes,\n          t,\n          output_sizes,\n          x_init_value=x_init_value,\n          delta=1e-2)\n      err_gg = gradient_checker.compute_gradient_error(\n          input_tensor,\n          input_sizes,\n          t_g,\n          input_sizes,\n          x_init_value=x_init_value,\n          delta=1e-2)\n\n    print(\"%s gradient error = \" % func_name, err_g)\n    self.assertLess(err_g, err_g_margin)\n    print(\"%s second-order gradient error = \" % func_name, err_gg)\n    self.assertLess(err_gg, err_gg_margin)\n\n  def _ConstructAndTestGradient(self,\n                                pool_func,\n                                **kwargs):\n    \"\"\"Runs _ConstructAndTestGradientForConfig for all tests configurations.\"\"\"\n\n    for data_format, use_gpu in GetTestConfigs():\n      self._ConstructAndTestGradientForConfig(pool_func,\n                                              data_format=data_format,\n                                              use_gpu=use_gpu,\n                                              **kwargs)\n\n  @test_util.run_deprecated_v1\n  def testMaxPoolGradValidPadding1_1_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 3, 3, 3, 1],\n        output_sizes=[1, 3, 3, 3, 1],\n        window=(1, 1, 1),\n        strides=(1, 1, 1),\n        padding=\"VALID\")\n\n  @test_util.run_deprecated_v1\n  def testMaxPoolGradValidPadding2_1_6_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 2, 3, 4, 2],\n        output_sizes=[1, 1, 2, 3, 2],\n        window=(2, 2, 2),\n        strides=(1, 1, 1),\n        padding=\"VALID\")\n\n  @test_util.run_deprecated_v1\n  def testMaxPoolGradValidPadding2_1_7_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 3, 2, 7, 1],\n        output_sizes=[1, 2, 1, 6, 1],\n        window=(2, 2, 2),\n        strides=(1, 1, 1),\n        padding=\"VALID\")\n\n  @test_util.run_deprecated_v1\n  def testMaxPoolGradValidPadding1_2_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 3, 3, 3, 1],\n        output_sizes=[1, 2, 2, 2, 1],\n        window=(1, 1, 1),\n        strides=(2, 2, 2),\n        padding=\"VALID\")\n\n  @test_util.run_deprecated_v1\n  def testMaxPoolGradValidPadding2_2_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.max_pool3d,\n        input_sizes=[2, 2, 2, 2, 1],\n        output_sizes=[2, 1, 1, 1, 1],\n        window=(2, 2, 2),\n        strides=(2, 2, 2),\n        padding=\"VALID\")\n\n  @test_util.run_deprecated_v1\n  def testMaxPoolGradSamePadding1_1_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 3, 2, 4, 1],\n        output_sizes=[1, 3, 2, 4, 1],\n        window=(1, 1, 1),\n        strides=(1, 1, 1),\n        padding=\"SAME\")\n\n  @test_util.run_deprecated_v1\n  def testMaxPoolGradSamePadding1_2_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 3, 2, 4, 1],\n        output_sizes=[1, 2, 1, 2, 1],\n        window=(1, 1, 1),\n        strides=(2, 2, 2),\n        padding=\"SAME\")\n\n  @test_util.run_deprecated_v1\n  def testMaxPoolGradSamePadding2_1_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 3, 2, 4, 1],\n        output_sizes=[1, 3, 2, 4, 1],\n        window=(2, 2, 2),\n        strides=(1, 1, 1),\n        padding=\"SAME\")\n\n  @test_util.run_deprecated_v1\n  def testMaxPoolGradSamePadding2_2_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 5, 2, 4, 2],\n        output_sizes=[1, 3, 1, 2, 2],\n        window=(2, 2, 2),\n        strides=(2, 2, 2),\n        padding=\"SAME\")\n\n  @test_util.run_deprecated_v1\n  def testMaxPoolGradSamePadding3_1_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.max_pool3d,\n        input_sizes=[1, 3, 4, 2, 1],\n        output_sizes=[1, 3, 4, 2, 1],\n        window=(3, 3, 3),\n        strides=(1, 1, 1),\n        padding=\"SAME\")\n\n  @test_util.run_deprecated_v1\n  def testAvgPoolGradValidPadding1_1_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 3, 3, 3, 1],\n        output_sizes=[1, 3, 3, 3, 1],\n        window=(1, 1, 1),\n        strides=(1, 1, 1),\n        padding=\"VALID\")\n\n  @test_util.run_deprecated_v1\n  def testAvgPoolGradValidPadding1_2_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 3, 3, 3, 1],\n        output_sizes=[1, 2, 2, 2, 1],\n        window=(1, 1, 1),\n        strides=(2, 2, 2),\n        padding=\"VALID\")\n\n  @test_util.run_deprecated_v1\n  def testAvgPoolGradValidPadding2_1_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 3, 3, 3, 2],\n        output_sizes=[1, 2, 2, 2, 2],\n        window=(2, 2, 2),\n        strides=(1, 1, 1),\n        padding=\"VALID\")\n\n  @test_util.run_deprecated_v1\n  def testAvgPoolGradValidPadding2_2_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.avg_pool3d,\n        input_sizes=[2, 2, 2, 2, 2],\n        output_sizes=[2, 1, 1, 1, 2],\n        window=(2, 2, 2),\n        strides=(2, 2, 2),\n        padding=\"VALID\")\n\n  @test_util.run_deprecated_v1\n  def testAvgPoolGradSamePadding1_1_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 3, 2, 4, 2],\n        output_sizes=[1, 3, 2, 4, 2],\n        window=(1, 1, 1),\n        strides=(1, 1, 1),\n        padding=\"SAME\")\n\n  @test_util.run_deprecated_v1\n  def testAvgPoolGradSamePadding1_2_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 3, 2, 4, 2],\n        output_sizes=[1, 2, 1, 2, 2],\n        window=(1, 1, 1),\n        strides=(2, 2, 2),\n        padding=\"SAME\")\n\n  @test_util.run_deprecated_v1\n  def testAvgPoolGradSamePadding2_1_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 2, 2, 2, 1],\n        output_sizes=[1, 2, 2, 2, 1],\n        window=(2, 2, 2),\n        strides=(1, 1, 1),\n        padding=\"SAME\")\n\n  @test_util.run_deprecated_v1\n  def testAvgPoolGradSamePadding2_2_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 5, 2, 4, 1],\n        output_sizes=[1, 3, 1, 2, 1],\n        window=(2, 2, 2),\n        strides=(2, 2, 2),\n        padding=\"SAME\")\n\n  @test_util.run_deprecated_v1\n  def testAvgPoolGradSamePadding3_1_3d(self):\n    self._ConstructAndTestGradient(\n        nn_ops.avg_pool3d,\n        input_sizes=[1, 3, 6, 2, 1],\n        output_sizes=[1, 3, 6, 2, 1],\n        window=(3, 3, 3),\n        strides=(1, 1, 1),\n        padding=\"SAME\")\n\n  def testMaxPool3DZeroPoolSize(self):\n    # Test case for GitHub issue 51936.\n    for f in [nn_ops.max_pool3d, nn_ops.avg_pool3d]:\n      with self.session():\n        with self.assertRaises((errors.InvalidArgumentError, ValueError)):\n          input_sizes = [3, 4, 10, 11, 12]\n\n          input_data = 1.\n          input_tensor = constant_op.constant(\n              input_data, shape=input_sizes, name=\"input\")\n          pool_3d = f(input_tensor, ksize=[2, 2, 0], strides=1, padding=\"VALID\")\n          self.evaluate(pool_3d)\n\n  @test_util.disable_xla(\"b/205634417\")  # XLA does not raise these errors.\n  def testMaxPoolGradEagerShapeErrors(self):\n    with context.eager_mode():\n      orig_in = array_ops.ones((1, 1, 1, 1, 1))\n\n      # Test invalid orig_out shape\n      orig_out = array_ops.ones((1, 1, 1, 1, 2))\n      grad = array_ops.ones((1, 1, 1, 1, 1))\n      with self.assertRaisesRegex(\n          errors_impl.InvalidArgumentError,\n          r\"Expected orig_output shape to be \\[1,1,1,1,1\\], but got \"\n          r\"\\[1,1,1,1,2\\]\"):\n        gen_nn_ops.max_pool3d_grad(\n            orig_in, orig_out, grad, ksize=[1, 1, 1, 1, 1],\n            strides=[1, 1, 1, 1, 1], padding=\"VALID\")\n      with self.assertRaisesRegex(\n          errors_impl.InvalidArgumentError,\n          r\"Expected orig_output shape to be \\[1,1,1,1,1\\], but got \"\n          r\"\\[1,1,1,1,2\\]\"):\n        gen_nn_ops.max_pool3d_grad_grad(\n            orig_in, orig_out, grad, ksize=[1, 1, 1, 1, 1],\n            strides=[1, 1, 1, 1, 1], padding=\"VALID\")\n\n      # Test invalid grad shape\n      orig_out = array_ops.ones((1, 1, 1, 1, 1))\n      grad = array_ops.ones((1, 1, 1, 1, 2))\n      with self.assertRaisesRegex(\n          errors_impl.InvalidArgumentError,\n          r\"Expected grad shape to be \\[1,1,1,1,1\\], but got \\[1,1,1,1,2\\]\"):\n        gen_nn_ops.max_pool3d_grad(\n            orig_in, orig_out, grad, ksize=[1, 1, 1, 1, 1],\n            strides=[1, 1, 1, 1, 1], padding=\"VALID\")\n      with self.assertRaisesRegex(\n          errors_impl.InvalidArgumentError,\n          r\"Expected grad shape to be \\[1,1,1,1,1\\], but got \\[1,1,1,1,2\\]\"):\n        gen_nn_ops.max_pool3d_grad_grad(\n            orig_in, orig_out, grad, ksize=[1, 1, 1, 1, 1],\n            strides=[1, 1, 1, 1, 1], padding=\"VALID\")\n\n\nif __name__ == \"__main__\":\n  test.main()\n</Code>"
                }
            ],
            "url": "https://github.com/tensorflow/tensorflow/commit/9178ac9d6389bdc54638ab913ea0e419234d14eb",
            "description": "TensorFlow is an open source platform for machine learning. The implementation of `AvgPool3DGradOp` does not fully validate the input `orig_input_shape`. This results in an overflow that results in a `CHECK` failure which can be used to trigger a denial of service attack. We have patched the issue in GitHub commit 9178ac9d6389bdc54638ab913ea0e419234d14eb. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
            "date": "2022-09-16",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n\t\"CWE_IDS\": [\"CWE-190\"],\n\t\"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-190"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2022-35959",
            "ground_truth_CWEs": [
                "CWE-617"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: With this vulnerability an attacker can read many sensitive files like configuration files, or the /proc/self/environ file, that contains the environment variable used by the web server that includes database credentials. If the web server user is root, an attacker will be able to read any file in the system.\nFile: server/api/controllers/attachments/download-thumbnail.js\nContent: \n<Code>\nconst fs = require('fs');\nconst path = require('path');\n\nconst Errors = {\n  ATTACHMENT_NOT_FOUND: {\n    attachmentNotFound: 'Attachment not found',\n  },\n};\n\nmodule.exports = {\n  inputs: {\n    id: {\n      type: 'string',\n      regex: /^[0-9]+$/,\n      required: true,\n    },\n    filename: {\n      type: 'string',\n      required: true,\n    },\n  },\n\n  exits: {\n    attachmentNotFound: {\n      responseType: 'notFound',\n    },\n  },\n\n  async fn(inputs, exits) {\n    const { currentUser } = this.req;\n\n    const { attachment, card, project } = await sails.helpers.attachments\n      .getProjectPath(inputs.id)\n      .intercept('pathNotFound', () => Errors.ATTACHMENT_NOT_FOUND);\n\n    const isBoardMember = await sails.helpers.users.isBoardMember(currentUser.id, card.boardId);\n\n    if (!isBoardMember) {\n      const isProjectManager = await sails.helpers.users.isProjectManager(\n        currentUser.id,\n        project.id,\n      );\n\n      if (!isProjectManager) {\n        throw Errors.ATTACHMENT_NOT_FOUND; // Forbidden\n      }\n    }\n\n    if (!attachment.image) {\n      throw Errors.ATTACHMENT_NOT_FOUND;\n    }\n\n    const filePath = path.join(\n      sails.config.custom.attachmentsPath,\n      attachment.dirname,\n      'thumbnails',\n      inputs.filename,\n    );\n\n    if (!fs.existsSync(filePath)) {\n      throw Errors.ATTACHMENT_NOT_FOUND;\n    }\n\n    this.res.type(attachment.filename);\n    this.res.set('Cache-Control', 'private, max-age=900'); // TODO: move to config\n\n    return exits.success(fs.createReadStream(filePath));\n  },\n};\n</Code>\n\nFile: server/config/routes.js\nContent: \n<Code>\n/**\n * Route Mappings\n * (sails.config.routes)\n *\n * Your routes tell Sails what to do each time it receives a request.\n *\n * For more information on configuring custom routes, check out:\n * https://sailsjs.com/anatomy/config/routes-js\n */\n\nmodule.exports.routes = {\n  'POST /api/access-tokens': 'access-tokens/create',\n\n  'GET /api/users': 'users/index',\n  'POST /api/users': 'users/create',\n  'GET /api/users/:id': 'users/show',\n  'PATCH /api/users/:id': 'users/update',\n  'PATCH /api/users/:id/email': 'users/update-email',\n  'PATCH /api/users/:id/password': 'users/update-password',\n  'PATCH /api/users/:id/username': 'users/update-username',\n  'POST /api/users/:id/avatar': 'users/update-avatar',\n  'DELETE /api/users/:id': 'users/delete',\n\n  'GET /api/projects': 'projects/index',\n  'POST /api/projects': 'projects/create',\n  'GET /api/projects/:id': 'projects/show',\n  'PATCH /api/projects/:id': 'projects/update',\n  'POST /api/projects/:id/background-image': 'projects/update-background-image',\n  'DELETE /api/projects/:id': 'projects/delete',\n\n  'POST /api/projects/:projectId/managers': 'project-managers/create',\n  'DELETE /api/project-managers/:id': 'project-managers/delete',\n\n  'POST /api/projects/:projectId/boards': 'boards/create',\n  'GET /api/boards/:id': 'boards/show',\n  'PATCH /api/boards/:id': 'boards/update',\n  'DELETE /api/boards/:id': 'boards/delete',\n\n  'POST /api/boards/:boardId/memberships': 'board-memberships/create',\n  'DELETE /api/board-memberships/:id': 'board-memberships/delete',\n\n  'POST /api/boards/:boardId/labels': 'labels/create',\n  'PATCH /api/labels/:id': 'labels/update',\n  'DELETE /api/labels/:id': 'labels/delete',\n\n  'POST /api/boards/:boardId/lists': 'lists/create',\n  'PATCH /api/lists/:id': 'lists/update',\n  'DELETE /api/lists/:id': 'lists/delete',\n\n  'GET /api/boards/:boardId/cards': 'cards/index',\n  'POST /api/boards/:boardId/cards': 'cards/create',\n  'GET /api/cards/:id': 'cards/show',\n  'PATCH /api/cards/:id': 'cards/update',\n  'DELETE /api/cards/:id': 'cards/delete',\n  'POST /api/cards/:cardId/memberships': 'card-memberships/create',\n  'DELETE /api/cards/:cardId/memberships': 'card-memberships/delete',\n  'POST /api/cards/:cardId/labels': 'card-labels/create',\n  'DELETE /api/cards/:cardId/labels/:labelId': 'card-labels/delete',\n\n  'POST /api/cards/:cardId/tasks': 'tasks/create',\n  'PATCH /api/tasks/:id': 'tasks/update',\n  'DELETE /api/tasks/:id': 'tasks/delete',\n\n  'POST /api/cards/:cardId/attachments': 'attachments/create',\n  'PATCH /api/attachments/:id': 'attachments/update',\n  'DELETE /api/attachments/:id': 'attachments/delete',\n\n  'GET /api/cards/:cardId/actions': 'actions/index',\n\n  'POST /api/cards/:cardId/comment-actions': 'comment-actions/create',\n  'PATCH /api/comment-actions/:id': 'comment-actions/update',\n  'DELETE /api/comment-actions/:id': 'comment-actions/delete',\n\n  'GET /api/notifications': 'notifications/index',\n  'GET /api/notifications/:id': 'notifications/show',\n  'PATCH /api/notifications/:ids': 'notifications/update',\n\n  'GET /attachments/:id/download/:filename': {\n    action: 'attachments/download',\n    skipAssets: false,\n  },\n\n  'GET /attachments/:id/download/thumbnails/:filename': {\n    action: 'attachments/download-thumbnail',\n    skipAssets: false,\n  },\n\n  'GET /*': {\n    view: 'index',\n    skipAssets: true,\n  },\n};\n</Code>"
                }
            ],
            "url": "https://github.com/plankanban/planka/commit/ac1df5201dfdaf68d37f7e1b272bc137870d7418",
            "description": "With this vulnerability an attacker can read many sensitive files like configuration files, or the /proc/self/environ file, that contains the environment variable used by the web server that includes database credentials. If the web server user is root, an attacker will be able to read any file in the system.",
            "date": "2022-08-04",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-22\"],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-22"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2022-2653",
            "ground_truth_CWEs": [
                "CWE-22"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: No description provided.\nFile: web/src/labs/highlighter/index.ts\nContent: \n<Code>\nconst escapeRegExp = (str: string): string => {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n};\n\nconst walkthroughNodeWithKeyword = (node: HTMLElement, keyword: string) => {\n  if (node.nodeType === 3) {\n    const span = document.createElement(\"span\");\n    span.innerHTML = node.nodeValue?.replace(new RegExp(keyword, \"g\"), `<mark>${keyword}</mark>`) ?? \"\";\n    node.parentNode?.insertBefore(span, node);\n    node.parentNode?.removeChild(node);\n  }\n  for (const child of Array.from(node.childNodes)) {\n    walkthroughNodeWithKeyword(<HTMLElement>child, keyword);\n  }\n  return node.innerHTML;\n};\n\nexport const highlightWithWord = (html: string, keyword?: string): string => {\n  if (!keyword) {\n    return html;\n  }\n  keyword = escapeRegExp(keyword);\n  const wrap = document.createElement(\"div\");\n  wrap.innerHTML = html;\n  return walkthroughNodeWithKeyword(wrap, keyword);\n};\n</Code>\n\nFile: web/src/labs/marked/parser/Bold.ts\nContent: \n<Code>\nimport { marked } from \"..\";\nimport Link from \"./Link\";\n\nexport const BOLD_REG = /\\*\\*(.+?)\\*\\*/;\n\nconst matcher = (rawStr: string) => {\n  const matchResult = rawStr.match(BOLD_REG);\n  return matchResult;\n};\n\nconst renderer = (rawStr: string): string => {\n  const matchResult = matcher(rawStr);\n  if (!matchResult) {\n    return rawStr;\n  }\n\n  const parsedContent = marked(matchResult[1], [], [Link]);\n  return `<strong>${parsedContent}</strong>`;\n};\n\nexport default {\n  name: \"bold\",\n  regex: BOLD_REG,\n  matcher,\n  renderer,\n};\n</Code>\n\nFile: web/src/labs/marked/parser/BoldEmphasis.ts\nContent: \n<Code>\nimport { marked } from \"..\";\nimport Link from \"./Link\";\n\nexport const BOLD_EMPHASIS_REG = /\\*\\*\\*(.+?)\\*\\*\\*/;\n\nconst matcher = (rawStr: string) => {\n  const matchResult = rawStr.match(BOLD_EMPHASIS_REG);\n  return matchResult;\n};\n\nconst renderer = (rawStr: string): string => {\n  const matchResult = matcher(rawStr);\n  if (!matchResult) {\n    return rawStr;\n  }\n\n  const parsedContent = marked(matchResult[1], [], [Link]);\n  return `<strong><em>${parsedContent}</em></strong>`;\n};\n\nexport default {\n  name: \"bold emphasis\",\n  regex: BOLD_EMPHASIS_REG,\n  matcher,\n  renderer,\n};\n</Code>\n\nFile: web/src/labs/marked/parser/Emphasis.ts\nContent: \n<Code>\nimport { marked } from \"..\";\nimport Link from \"./Link\";\n\nexport const EMPHASIS_REG = /\\*(.+?)\\*/;\n\nconst matcher = (rawStr: string) => {\n  const matchResult = rawStr.match(EMPHASIS_REG);\n  return matchResult;\n};\n\nconst renderer = (rawStr: string): string => {\n  const matchResult = matcher(rawStr);\n  if (!matchResult) {\n    return rawStr;\n  }\n\n  const parsedContent = marked(matchResult[1], [], [Link]);\n  return `<em>${parsedContent}</em>`;\n};\n\nexport default {\n  name: \"emphasis\",\n  regex: EMPHASIS_REG,\n  matcher,\n  renderer,\n};\n</Code>\n\nFile: web/src/labs/marked/parser/Link.ts\nContent: \n<Code>\nimport { escape } from \"lodash-es\";\nimport Emphasis from \"./Emphasis\";\nimport Bold from \"./Bold\";\nimport { marked } from \"..\";\nimport InlineCode from \"./InlineCode\";\nimport BoldEmphasis from \"./BoldEmphasis\";\n\nexport const LINK_REG = /\\[(.*?)\\]\\((.+?)\\)+/;\n\nconst matcher = (rawStr: string) => {\n  const matchResult = rawStr.match(LINK_REG);\n  return matchResult;\n};\n\nconst renderer = (rawStr: string): string => {\n  const matchResult = matcher(rawStr);\n  if (!matchResult) {\n    return rawStr;\n  }\n  const parsedContent = marked(matchResult[1], [], [InlineCode, BoldEmphasis, Emphasis, Bold]);\n  return `<a class='link' target='_blank' rel='noreferrer' href='${escape(matchResult[2])}'>${parsedContent}</a>`;\n};\n\nexport default {\n  name: \"link\",\n  regex: LINK_REG,\n  matcher,\n  renderer,\n};\n</Code>"
                }
            ],
            "url": "https://github.com/usememos/memos/commit/65cc19c12efa392f792f6bb154b4838547e0af5e",
            "description": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.0.",
            "date": "2022-12-27",
            "github_description": "No description provided.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-79\"],\n  \"severity\": null\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-79"
                ],
                "severity": null
            },
            "ground_truth_CVE": "CVE-2022-4695",
            "ground_truth_CWEs": [
                "CWE-79"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any user with the right to add an object on a page can execute arbitrary Groovy, Python or Velocity code in XWiki leading to full access to the XWiki installation. The root cause is improper escaping of the styles properties `FlamingoThemesCode.WebHome`. This page is installed by default. The vulnerability has been patched in XWiki versions 13.10.11, 14.4.7 and 14.10.\nFile: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-theme/xwiki-platform-flamingo-theme-ui/src/test/java/org/xwiki/flamingo/WebHomeSheetPageTest.java\nContent: \n<Code>\n/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.flamingo;\n\nimport org.jsoup.nodes.Document;\nimport org.junit.jupiter.api.Test;\nimport org.xwiki.localization.macro.internal.TranslationMacro;\nimport org.xwiki.model.reference.DocumentReference;\nimport org.xwiki.rendering.RenderingScriptServiceComponentList;\nimport org.xwiki.rendering.internal.configuration.DefaultExtendedRenderingConfiguration;\nimport org.xwiki.rendering.internal.configuration.RenderingConfigClassDocumentConfigurationSource;\nimport org.xwiki.rendering.internal.macro.message.ErrorMessageMacro;\nimport org.xwiki.test.annotation.ComponentList;\nimport org.xwiki.test.page.HTML50ComponentList;\nimport org.xwiki.test.page.PageTest;\nimport org.xwiki.test.page.TestNoScriptMacro;\nimport org.xwiki.test.page.XWikiSyntax21ComponentList;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\n/**\n * Test of the {@code FlamingoThemesCode.WebHomeSheet} page.\n *\n * @version $Id$\n * @since 13.10.10\n * @since 14.4.6\n * @since 14.9RC1\n */\n@HTML50ComponentList\n@XWikiSyntax21ComponentList\n@RenderingScriptServiceComponentList\n@ComponentList({\n    ErrorMessageMacro.class,\n    TranslationMacro.class,\n    TestNoScriptMacro.class,\n    DefaultExtendedRenderingConfiguration.class,\n    RenderingConfigClassDocumentConfigurationSource.class\n})\nclass WebHomeSheetPageTest extends PageTest\n{\n    @Test\n    void createAction() throws Exception\n    {\n        this.request.put(\"newThemeName\", \"some content\\\"/}}{{noscript/}}\");\n        this.request.put(\"form_token\", \"1\");\n        this.request.put(\"action\", \"create\");\n\n        Document document = this.renderHTMLPage(new DocumentReference(\"xwiki\", \"FlamingoThemesCode\", \"WebHomeSheet\"));\n\n        assertEquals(\"platform.flamingo.themes.home.create.csrf [some content\\\"/}}{{noscript/}}]\",\n            document.select(\".box.errormessage\").text());\n    }\n}\n</Code>"
                }
            ],
            "url": "https://github.com/xwiki/xwiki-platform/commit/df596f15368342236f8899ca122af8f3df0fe2e8",
            "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any user with the right to add an object on a page can execute arbitrary Groovy, Python or Velocity code in XWiki leading to full access to the XWiki installation. The root cause is improper escaping of the styles properties `FlamingoThemesCode.WebHome`. This page is installed by default. The vulnerability has been patched in XWiki versions 13.10.11, 14.4.7 and 14.10.",
            "date": "2023-04-16",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-79\", \"CWE-73\"],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-79",
                    "CWE-73"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2023-30537",
            "ground_truth_CWEs": [
                "CWE-94"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Prevents even more php file types being uploaded.\nFile: src/Http/Controllers/CP/Assets/AssetsController.php\nContent: \n<Code>\n<?php\n\nnamespace Statamic\\Http\\Controllers\\CP\\Assets;\n\nuse Illuminate\\Http\\Request;\nuse Statamic\\Contracts\\Assets\\Asset as AssetContract;\nuse Statamic\\Contracts\\Assets\\AssetContainer as AssetContainerContract;\nuse Statamic\\Exceptions\\AuthorizationException;\nuse Statamic\\Facades\\Asset;\nuse Statamic\\Facades\\AssetContainer;\nuse Statamic\\Facades\\User;\nuse Statamic\\Http\\Controllers\\CP\\CpController;\nuse Statamic\\Http\\Resources\\CP\\Assets\\Asset as AssetResource;\n\nclass AssetsController extends CpController\n{\n    use RedirectsToFirstAssetContainer;\n\n    public function index()\n    {\n        $this->redirectToFirstContainer();\n\n        if (User::current()->can('create', AssetContainerContract::class)) {\n            return view('statamic::assets.index');\n        }\n\n        throw new AuthorizationException;\n    }\n\n    public function show($asset)\n    {\n        $asset = Asset::find(base64_decode($asset));\n\n        // TODO: Auth\n\n        return new AssetResource($asset);\n    }\n\n    public function update(Request $request, $asset)\n    {\n        $asset = Asset::find(base64_decode($asset));\n\n        $this->authorize('edit', $asset);\n\n        $fields = $asset->blueprint()->fields()->addValues($request->all());\n\n        $fields->validate();\n\n        $values = $fields->process()->values()->merge([\n            'focus' => $request->focus,\n        ]);\n\n        foreach ($values as $key => $value) {\n            $asset->set($key, $value);\n        }\n\n        $asset->save();\n\n        return [\n            'success' => true,\n            'message' => 'Asset updated',\n            'asset' => (new AssetResource($asset))->resolve()['data'],\n        ];\n    }\n\n    public function store(Request $request)\n    {\n        $request->validate([\n            'container' => 'required',\n            'folder' => 'required',\n            'file' => ['file', function ($attribute, $value, $fail) {\n                if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'phtml'])) {\n                    $fail(__('validation.uploaded'));\n                }\n            }],\n        ]);\n\n        $container = AssetContainer::find($request->container);\n\n        abort_unless($container->allowUploads(), 403);\n\n        $this->authorize('store', [AssetContract::class, $container]);\n\n        $file = $request->file('file');\n        $path = ltrim($request->folder.'/'.$file->getClientOriginalName(), '/');\n\n        $asset = $container->makeAsset($path)->upload($file);\n\n        return new AssetResource($asset);\n    }\n\n    public function download($asset)\n    {\n        $asset = Asset::find(base64_decode($asset));\n\n        // TODO: Auth\n\n        return $asset->download();\n    }\n\n    public function destroy($asset)\n    {\n        $asset = Asset::find(base64_decode($asset));\n\n        // TODO: Auth\n\n        $asset->delete();\n\n        return response('', 204);\n    }\n}\n</Code>\n\nFile: src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php\nContent: \n<Code>\n<?php\n\nnamespace Statamic\\Http\\Controllers\\CP\\Fieldtypes;\n\nuse Illuminate\\Http\\Request;\nuse Statamic\\Assets\\FileUploader as Uploader;\nuse Statamic\\Http\\Controllers\\CP\\CpController;\n\nclass FilesFieldtypeController extends CpController\n{\n    public function upload(Request $request)\n    {\n        $request->validate([\n            'file' => ['file', function ($attribute, $value, $fail) {\n                if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'phtml'])) {\n                    $fail(__('validation.uploaded'));\n                }\n            }],\n        ]);\n\n        $file = $request->file('file');\n\n        $path = Uploader::container($request->container)->upload($file);\n\n        return ['data' => ['id' => $path]];\n    }\n}\n</Code>\n\nFile: src/Http/Controllers/FormController.php\nContent: \n<Code>\n<?php\n\nnamespace Statamic\\Http\\Controllers;\n\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse Illuminate\\Support\\Facades\\URL;\nuse Illuminate\\Support\\MessageBag;\nuse Illuminate\\Support\\Traits\\Localizable;\nuse Illuminate\\Validation\\ValidationException;\nuse Statamic\\Contracts\\Forms\\Submission;\nuse Statamic\\Events\\FormSubmitted;\nuse Statamic\\Events\\SubmissionCreated;\nuse Statamic\\Exceptions\\SilentFormFailureException;\nuse Statamic\\Facades\\Form;\nuse Statamic\\Facades\\Site;\nuse Statamic\\Forms\\Exceptions\\FileContentTypeRequiredException;\nuse Statamic\\Forms\\SendEmails;\nuse Statamic\\Support\\Arr;\nuse Statamic\\Support\\Str;\n\nclass FormController extends Controller\n{\n    use Localizable;\n\n    /**\n     * Handle a form submission request.\n     *\n     * @return mixed\n     */\n    public function submit(Request $request, $form)\n    {\n        $site = Site::findByUrl(URL::previous()) ?? Site::default();\n        $fields = $form->blueprint()->fields();\n        $this->validateContentType($request, $form);\n        $values = array_merge($request->all(), $assets = $this->normalizeAssetsValues($fields, $request));\n        $params = collect($request->all())->filter(function ($value, $key) {\n            return Str::startsWith($key, '_');\n        })->all();\n\n        $fields = $fields->addValues($values);\n\n        $submission = $form->makeSubmission();\n\n        try {\n            $this->withLocale($site->lang(), function () use ($fields) {\n                $fields->validate($this->extraRules($fields));\n            });\n\n            throw_if(Arr::get($values, $form->honeypot()), new SilentFormFailureException);\n\n            $values = array_merge($values, $submission->uploadFiles($assets));\n\n            $submission->data(\n                $fields->addValues($values)->process()->values()\n            );\n\n            // If any event listeners return false, we'll do a silent failure.\n            // If they want to add validation errors, they can throw an exception.\n            throw_if(FormSubmitted::dispatch($submission) === false, new SilentFormFailureException);\n        } catch (ValidationException $e) {\n            return $this->formFailure($params, $e->errors(), $form->handle());\n        } catch (SilentFormFailureException $e) {\n            return $this->formSuccess($params, $submission, true);\n        }\n\n        if ($form->store()) {\n            $submission->save();\n        } else {\n            // When the submission is saved, this same created event will be dispatched.\n            // We'll also fire it here if submissions are not configured to be stored\n            // so that developers may continue to listen and modify it as needed.\n            SubmissionCreated::dispatch($submission);\n        }\n\n        SendEmails::dispatch($submission, $site);\n\n        return $this->formSuccess($params, $submission);\n    }\n\n    private function validateContentType($request, $form)\n    {\n        $type = Str::before($request->headers->get('CONTENT_TYPE'), ';');\n\n        if ($type !== 'multipart/form-data' && $form->hasFiles()) {\n            throw new FileContentTypeRequiredException;\n        }\n    }\n\n    /**\n     * The steps for a successful form submission.\n     *\n     * Used for actual success and by honeypot.\n     *\n     * @param  array  $params\n     * @param  Submission  $submission\n     * @param  bool  $silentFailure\n     * @return Response\n     */\n    private function formSuccess($params, $submission, $silentFailure = false)\n    {\n        $redirect = $this->formSuccessRedirect($params, $submission);\n\n        if (request()->ajax() || request()->wantsJson()) {\n            return response([\n                'success' => true,\n                'submission_created' => ! $silentFailure,\n                'submission' => $submission->data(),\n                'redirect' => $redirect,\n            ]);\n        }\n\n        $response = $redirect ? redirect($redirect) : back();\n\n        if (! \\Statamic\\Facades\\URL::isExternal($redirect)) {\n            session()->flash(\"form.{$submission->form()->handle()}.success\", __('Submission successful.'));\n            session()->flash(\"form.{$submission->form()->handle()}.submission_created\", ! $silentFailure);\n            session()->flash('submission', $submission);\n        }\n\n        return $response;\n    }\n\n    private function formSuccessRedirect($params, $submission)\n    {\n        if (! $redirect = Form::getSubmissionRedirect($submission)) {\n            $redirect = Arr::get($params, '_redirect');\n        }\n\n        return $redirect;\n    }\n\n    /**\n     * The steps for a failed form submission.\n     *\n     * @param  array  $params\n     * @param  array  $submission\n     * @param  string  $form\n     * @return Response|RedirectResponse\n     */\n    private function formFailure($params, $errors, $form)\n    {\n        if (request()->ajax()) {\n            return response([\n                'errors' => (new MessageBag($errors))->all(),\n                'error' => collect($errors)->map(function ($errors, $field) {\n                    return $errors[0];\n                })->all(),\n            ], 400);\n        }\n\n        $redirect = Arr::get($params, '_error_redirect');\n\n        $response = $redirect ? redirect($redirect) : back();\n\n        return $response->withInput()->withErrors($errors, 'form.'.$form);\n    }\n\n    protected function normalizeAssetsValues($fields, $request)\n    {\n        // The assets fieldtype is expecting an array, even for `max_files: 1`, but we don't want to force that on the front end.\n        return $fields->all()\n            ->filter(function ($field) {\n                return $field->fieldtype()->handle() === 'assets' && request()->hasFile($field->handle());\n            })\n            ->map(function ($field) use ($request) {\n                return Arr::wrap($request->file($field->handle()));\n            })\n            ->all();\n    }\n\n    protected function extraRules($fields)\n    {\n        $assetFieldRules = $fields->all()\n            ->filter(function ($field) {\n                return $field->fieldtype()->handle() === 'assets';\n            })\n            ->mapWithKeys(function ($field) {\n                return [$field->handle().'.*' => ['file', function ($attribute, $value, $fail) {\n                    if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'phtml'])) {\n                        $fail(__('validation.uploaded'));\n                    }\n                }]];\n            })\n            ->all();\n\n        return $assetFieldRules;\n    }\n}\n</Code>"
                }
            ],
            "url": "https://github.com/statamic/cms/commit/4c6fe041e2203a8033e5949ce4a5d9d6c0ad2411",
            "description": "Statamic is a flat-first, Laravel + Git powered CMS designed for building websites. In affected versions certain additional PHP files crafted to look like images may be uploaded regardless of mime type validation rules. This affects front-end forms using the \"Forms\" feature, and asset upload fields in the control panel. Malicious users could leverage this vulnerability to upload and execute code. This issue has been patched in versions 3.4.14 and 4.34.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
            "date": "2023-11-14",
            "github_description": "Prevents even more php file types being uploaded.",
            "llm_raw_output": "{\n    \"CWE_IDS\": [\n        \"CWE-434\"\n    ],\n    \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-434"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2023-48217",
            "ground_truth_CWEs": [
                "CWE-434"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: versionn, software for changing version information across multiple files, has a command injection vulnerability in all versions prior to version 1.1.0. This issue is patched in version 1.1.0.\nFile: lib/gitfn.js\nContent: \n<Code>\n'use strict'\n\nvar child = require('child_process')\n\nfunction GitFn (version, options) {\n  this._version = version\n  this._options = {\n    cwd: options.dir,\n    env: process.env,\n    setsid: false,\n    stdio: [0, 1, 2]\n  }\n}\nmodule.exports = GitFn\n\nGitFn.prototype = {\n  tag: function (cb) {\n    var cmd = ['git', 'tag', 'v' + this._version].join(' ')\n    this._exec(cmd, cb)\n  },\n  untag: function (cb) {\n    var cmd = ['git', 'tag', '-d', 'v' + this._version].join(' ')\n    this._exec(cmd, cb)\n  },\n  commit: function (cb) {\n    var cmd = ['git', 'commit', '-am', '\"' + this._version + '\"'].join(' ')\n    this._exec(cmd, cb)\n  },\n  _exec: function (cmd, cb) {\n    child.exec(cmd, this._options, cb)\n  }\n}\n</Code>"
                }
            ],
            "url": "https://github.com/commenthol/versionn/commit/2ca128823efe962b37f2698f0eb530c2b124842d",
            "description": "versionn, software for changing version information across multiple files, has a command injection vulnerability in all versions prior to version 1.1.0. This issue is patched in version 1.1.0.",
            "date": "2023-02-20",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-78\"],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-78"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2023-25805",
            "ground_truth_CWEs": [
                "CWE-77"
            ],
            "ground_truth_severities": {
                "V3.1": "CRITICAL"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: icingaweb2-module-jira provides integration with Atlassian Jira. Starting in version 1.3.0 and prior to version 1.3.2, template and field configuration forms perform the deletion action before user input is validated, including the cross site request forgery token. This issue is fixed in version 1.3.2. There are no known workarounds.\nFile: application/forms/Config/FieldConfigForm.php\nContent: \n<Code>\n<?php\n\n// Icinga Web Jira Integration | (c) 2023 Icinga GmbH | GPLv2\n\nnamespace Icinga\\Module\\Jira\\Forms\\Config;\n\nuse Icinga\\Application\\Config;\nuse Icinga\\Module\\Jira\\RestApi;\nuse Icinga\\Web\\Session;\nuse ipl\\Html\\Contract\\FormSubmitElement;\nuse ipl\\Validator\\CallbackValidator;\nuse ipl\\Web\\Common\\CsrfCounterMeasure;\nuse ipl\\Web\\Compat\\CompatForm;\n\nclass FieldConfigForm extends CompatForm\n{\n    use CsrfCounterMeasure;\n\n    /** @var RestApi */\n    private $jira;\n\n    /** @var array|null */\n    protected $fields = [];\n\n    /** @var Config */\n    protected $templateConfig;\n\n    /** @var string */\n    protected $fieldValue;\n\n    /** @var string */\n    protected $templateName;\n\n    /** @var bool Hack used for delete button */\n    protected $callOnSuccess;\n\n    /** @var string */\n    protected $fieldId;\n\n    public function __construct(RestApi $jira, string $templateName, $fieldId = null)\n    {\n        $this->jira = $jira;\n        $this->fields = $this->enumAllowedFields();\n\n        $this->templateConfig = Config::module('jira', 'templates');\n\n        $this->templateName = $templateName;\n\n        if ($fieldId !== null) {\n            if (! array_key_exists($fieldId, $this->fields)) {\n                $this->fieldId = array_search($fieldId, $this->fields);\n            } else {\n                $this->fieldId = $fieldId;\n            }\n\n            $templateFields = $this->templateConfig->getSection($templateName)->toArray();\n\n            $this->fieldValue = $templateFields[$fieldId];\n        }\n    }\n\n    /**\n     * Returns fieldId-fieldLabel pairs of all the custom fields including duedate field\n     *\n     * Supported field types are string, array, number and date\n     *\n     * @return array\n     *\n     * @throws \\Icinga\\Exception\\NotFoundError\n     */\n    public function enumAllowedFields(): array\n    {\n        $fieldTypes = ['string', 'number', 'array', 'date'];\n        $fields = [];\n\n        foreach ($this->jira->get('field')->getResult() as $field) {\n            if ($field->custom && in_array($field->schema->type, $fieldTypes)) {\n                if ($field->schema->type === 'array' && $field->schema->items !== 'string') {\n                    continue;\n                }\n\n                $fields[$field->id] = $field->name;\n            }\n        }\n\n        $fields['duedate'] = 'Due Date';\n\n        $icingaKey = Config::module('jira')\n            ->get('key_fields', 'icingaKey', 'icingaKey');\n\n        $icingaStatus = Config::module('jira')\n            ->get('key_fields', 'icingaStatus', 'icingaStatus');\n\n        if (($key = array_search($icingaKey, $fields)) !== false) {\n            unset($fields[$key]);\n        }\n\n        if (($status = array_search($icingaStatus, $fields)) !== false) {\n            unset($fields[$status]);\n        }\n\n        return $fields;\n    }\n\n    protected function assemble()\n    {\n        $this->addElement($this->createCsrfCounterMeasure(Session::getSession()->getId()));\n\n        $this->addElement(\n            'select',\n            'fields',\n            [\n                'label'      => $this->translate('Jira Field'),\n                'class'      => 'autosubmit',\n                'options'    => $this->optionalEnum($this->fields),\n                'required'   => true,\n                'validators' => [\n                    'Callback' => function ($value, $validator) {\n                        /** @var CallbackValidator $validator */\n                        $templateFieldKeys = $this->templateConfig->getSection($this->templateName)->keys();\n                        $selected = $this->fields[$value];\n\n                        if (\n                            $value !== $this->fieldId\n                            && (in_array($value, $templateFieldKeys) || in_array($selected, $templateFieldKeys))\n                        ) {\n                            $validator->addMessage(sprintf(\n                                $this->translate('Field \"%s\" already exists in the template \"%s\"'),\n                                $selected,\n                                $this->templateName\n                            ));\n\n                            return false;\n                        }\n\n                        return true;\n                    }\n                ]\n            ]\n        );\n\n        if ($this->fieldId !== null) {\n            $this->getElement('fields')\n                ->setValue($this->fieldId)\n                ->addAttributes(['disabled' => true]);\n        }\n\n        $isFieldsDisabled = $this->getElement('fields')\n            ->getAttributes()\n            ->get('disabled');\n\n        if (($this->hasBeenSent() || $isFieldsDisabled) && $this->getValue('fields') !== null) {\n            $fieldsAssociation = [\n                'hostgroup'    => $this->translate('Host Group'),\n                'servicegroup' => $this->translate('Service Group'),\n                'customvar'    => $this->translate('Custom Variable'),\n            ];\n\n            $this->addElement(\n                'text',\n                'type',\n                [\n                    'label'    => $this->translate('Field Type'),\n                    'disabled' => true,\n                    'required' => true,\n                ]\n            );\n\n            $this->getElement('type')->setValue($this->jira->getFieldType($this->getValue('fields')));\n\n            if ($this->getValue('type') !== 'array') {\n                $fieldsAssociation['other'] = $this->translate('Others');\n            }\n\n            $this->addElement(\n                'select',\n                'associated',\n                [\n                    'label'      => $this->translate('Associated Icinga Object Property'),\n                    'class'      => 'autosubmit',\n                    'options'    => $this->optionalEnum($fieldsAssociation),\n                    'required'   => true,\n                    'validators' => [\n                        'Callback' => function ($value, $validator) use ($fieldsAssociation) {\n                            /** @var CallbackValidator $validator */\n                            if (\n                                ($value === 'hostgroup' || $value === 'servicegroup')\n                                && $this->getValue('type') !== 'array'\n                            ) {\n                                $validator->addMessage(sprintf(\n                                    $this->translate('%s can only be an array type field.'),\n                                    $fieldsAssociation[$value]\n                                ));\n\n                                return false;\n                            }\n\n                            return true;\n                        }\n                    ]\n                ]\n            );\n\n            $matches = [];\n            if ($this->fieldId !== null && ! $this->hasBeenSent()) {\n                if (preg_match('/\\${([^}\\s]+)}/', $this->fieldValue, $matches)) {\n                    if (preg_match('/^(?:host|service)\\./', $matches[1])) {\n                        $this->getElement('associated')->setValue('customvar');\n                    } elseif ($matches[1] === 'hostgroup' || $matches[1] === 'servicegroup') {\n                        $this->getElement('associated')->setValue($matches[1]);\n                    } else {\n                        $this->getElement('associated')->setValue('other');\n                    }\n                } else {\n                    $this->getElement('associated')->setValue('other');\n                }\n            }\n\n            if (($this->hasBeenSent() || $this->fieldId !== null)) {\n                if ($this->getValue('associated') === 'customvar') {\n                    $this->addElement(\n                        'text',\n                        $this->getValue('fields') . '_cv',\n                        [\n                            'label'       => $this->translate('Custom Variable'),\n                            'required'    => true,\n                            'description' => $this->translate(\n                                'Enter appropriate custom variable. For example host.vars.customvar or'\n                                . ' service.vars.customvar.'\n                            ),\n                            'placeholder' => 'host.vars.customvar / service.vars.customvar'\n                        ]\n                    );\n                }\n\n                if ($this->getValue('associated') === 'other') {\n                    $this->addElement(\n                        'text',\n                        $this->getValue('fields') . '_value',\n                        [\n                            'label'       => $this->translate('Field Value'),\n                            'required'    => true,\n                            'description' => $this->translate(\n                                'Enter the value for the field.'\n                            ),\n                            'validators'  => [\n                                'Callback' => function ($value, $validator) use ($fieldsAssociation) {\n                                    /** @var CallbackValidator $validator */\n\n                                    if ($value !== null) {\n                                        if (\n                                            $this->getValue('type') === 'number'\n                                            && ! is_numeric($value)\n                                        ) {\n                                            $validator->addMessage(sprintf(\n                                                $this->translate('Field %s expects a numeric value.'),\n                                                $this->enumAllowedFields()[$this->getValue('fields')]\n                                            ));\n\n                                            return false;\n                                        }\n\n                                        if (\n                                            $this->getValue('type') === 'date'\n                                            && ! strtotime($value)\n                                        ) {\n                                            $validator->addMessage(sprintf(\n                                                $this->translate('Field %s expects english textual datetime.'),\n                                                $this->enumAllowedFields()[$this->getValue('fields')]\n                                            ));\n\n                                            return false;\n                                        }\n\n                                        if (preg_match('/\\${([^}\\s]+)}/', $value, $matches)) {\n                                            if (preg_match('/^(?:host|service)\\./', $matches[1])) {\n                                                $validator->addMessage(sprintf(\n                                                    $this->translate('Field %s cannot be a custom variable.'),\n                                                    $this->enumAllowedFields()[$this->getValue('fields')]\n                                                ));\n\n                                                return false;\n                                            } elseif ($matches[1] === 'hostgroup' || $matches[1] === 'servicegroup') {\n                                                $validator->addMessage(sprintf(\n                                                    $this->translate('Field %s cannot be %s.'),\n                                                    $this->enumAllowedFields()[$this->getValue('fields')],\n                                                    strtolower($fieldsAssociation[$matches[1]])\n                                                ));\n\n                                                return false;\n                                            }\n                                        }\n                                    }\n\n                                    return true;\n                                }\n                            ]\n                        ]\n                    );\n                }\n\n                if (! $this->hasBeenSent() && $this->fieldId !== null) {\n                    if ($this->getValue('associated') === 'other') {\n                        $this->getElement($this->getValue('fields') . '_value')\n                            ->setValue($this->fieldValue);\n                    }\n\n                    if ($this->getValue('associated') === 'customvar' && ! empty($matches)) {\n                        $this->getElement($this->getValue('fields') . '_cv')\n                            ->setValue($matches[1]);\n                    }\n                }\n            }\n        }\n\n        $this->addElement(\n            'submit',\n            'submit',\n            [\n                'label' => $this->fieldId ? $this->translate('Edit Field') : $this->translate('Add Field')\n            ]\n        );\n\n        if ($this->fieldId !== null) {\n            /** @var FormSubmitElement $deleteButton */\n            $deleteButton = $this->createElement(\n                'submit',\n                'delete',\n                [\n                    'label'          => $this->translate('Delete'),\n                    'class'          => 'btn-remove',\n                    'formnovalidate' => true\n                ]\n            );\n\n            $this->registerElement($deleteButton);\n            $this->getElement('submit')\n                ->getWrapper()\n                ->prepend($deleteButton);\n\n            if ($deleteButton->hasBeenPressed()) {\n                $templateFields =  $this->templateConfig->getSection($this->templateName)->toArray();\n\n                $field = isset($templateFields[$this->fieldId]) ? $this->fieldId : $this->fields[$this->fieldId];\n\n                unset($templateFields[$field]);\n\n                $this->templateConfig->setSection($this->templateName, $templateFields);\n                $this->templateConfig->saveIni();\n                $this->getSubmitButton()->setValue($this->getSubmitButton()->getButtonLabel());\n\n                $this->callOnSuccess = false;\n\n                return;\n            }\n        }\n    }\n\n    /**\n     * Appends a null option to the given key-value pairs\n     *\n     * @param $enum\n     * @param $nullLabel\n     *\n     * @return array|null[]\n     */\n    public function optionalEnum($enum, $nullLabel = null)\n    {\n        if ($nullLabel === null) {\n            $nullLabel = $this->translate('- please choose -');\n        }\n\n        return [null => $nullLabel] + $enum;\n    }\n\n    public function onSuccess()\n    {\n        if ($this->callOnSuccess === false) {\n            $this->getPressedSubmitElement()->setValue($this->getElement('delete')->getLabel());\n\n            return;\n        }\n\n        $fields = $this->templateConfig->getSection($this->templateName)->toArray();\n\n        $fieldId = $this->getValue('fields');\n        $fieldName = isset($fields[$fieldId]) ? $fieldId : $this->fields[$fieldId];\n        $associated = $this->getValue('associated');\n\n        if ($associated === 'hostgroup' || $associated === 'servicegroup') {\n            $fieldValue = '${' . $associated . '}';\n        } elseif ($associated === 'customvar') {\n            $fieldValue = $this->getValue($fieldId . '_cv');\n            $fieldValue = '${' . $fieldValue . '}';\n        } else {\n            $fieldValue = $this->getValue($fieldId . '_value');\n        }\n\n        if ($fieldId === 'duedate') {\n            $fields[$fieldId] = $fieldValue;\n        } else {\n            $fields[$fieldName] = $fieldValue;\n        }\n\n        $this->templateConfig->setSection($this->templateName, $fields);\n        $this->templateConfig->saveIni();\n    }\n}\n</Code>\n\nFile: application/forms/Config/TemplateConfigForm.php\nContent: \n<Code>\n<?php\n\n// Icinga Web Jira Integration | (c) 2023 Icinga GmbH | GPLv2\n\nnamespace Icinga\\Module\\Jira\\Forms\\Config;\n\nuse Icinga\\Application\\Config;\nuse Icinga\\Web\\Session;\nuse ipl\\Html\\Contract\\FormSubmitElement;\nuse ipl\\Validator\\CallbackValidator;\nuse ipl\\Web\\Common\\CsrfCounterMeasure;\nuse ipl\\Web\\Compat\\CompatForm;\n\nclass TemplateConfigForm extends CompatForm\n{\n    use CsrfCounterMeasure;\n\n    /** @var Config */\n    protected $config;\n\n    /** @var string|null */\n    protected $templateName;\n\n    /** @var bool Hack used for delete button */\n    protected $callOnSuccess;\n\n    public function __construct($templateName = null)\n    {\n        $this->config = Config::module('jira', 'templates');\n\n        $this->templateName = $templateName;\n\n        if ($this->templateName !== null) {\n            $this->populate(['template' => $templateName]);\n        }\n    }\n\n    protected function assemble()\n    {\n        $this->addElement($this->createCsrfCounterMeasure(Session::getSession()->getId()));\n\n        $this->addElement(\n            'text',\n            'template',\n            [\n                'label'      => $this->translate('Template'),\n                'required'   => true,\n                'validators' => [\n                    'Callback' => function ($value, $validator) {\n                        /** @var CallbackValidator $validator */\n                        if ($value !== $this->templateName && in_array($value, $this->config->keys())) {\n                            $validator->addMessage(sprintf(\n                                $this->translate('Template with name \"%s\" already exists'),\n                                $value\n                            ));\n\n                            return false;\n                        }\n\n                        return true;\n                    }\n                ]\n            ]\n        );\n\n        $this->addElement(\n            'submit',\n            'submit',\n            [\n                'label' => $this->templateName ? $this->translate('Save Changes') : $this->translate('Add Template')\n            ]\n        );\n\n        if ($this->templateName !== null) {\n            /** @var FormSubmitElement $deleteButton */\n            $deleteButton = $this->createElement(\n                'submit',\n                'delete',\n                [\n                    'label'          => $this->translate('Delete'),\n                    'class'          => 'btn-remove',\n                    'formnovalidate' => true\n                ]\n            );\n\n            $this->registerElement($deleteButton);\n            $this->getElement('submit')->getWrapper()->prepend($deleteButton);\n\n            if ($deleteButton->hasBeenPressed()) {\n                $this->config->removeSection($this->templateName);\n                $this->config->saveIni();\n\n                // Stupid cheat because ipl/html is not capable of multiple submit buttons\n                $this->getSubmitButton()->setValue($this->getSubmitButton()->getButtonLabel());\n                $this->callOnSuccess = false;\n\n                return;\n            }\n        }\n    }\n\n    public function onSuccess()\n    {\n        if ($this->callOnSuccess === false) {\n            $this->getSubmitButton()->setValue($this->getElement('delete')->getButtonLabel());\n            return;\n        }\n\n        $templateConfig = Config::fromIni($this->config->getConfigFile());\n        $value = $this->getValue('template');\n\n        if ($this->templateName !== null && $value !== $this->templateName) {\n            $template = $templateConfig->getSection($this->templateName);\n            $templateConfig->removeSection($this->templateName);\n            $templateConfig->setSection($value, $template);\n        } else {\n            $template = $templateConfig->getSection($value);\n            $templateConfig->setSection($this->getValue('template'), $template);\n        }\n\n        $templateConfig->saveIni($templateConfig->getConfigFile());\n    }\n}\n</Code>"
                }
            ],
            "url": "https://github.com/Icinga/icingaweb2-module-jira/commit/7f0c53b7a3e87be2f4c2e8840805d7b7c9762424",
            "description": "icingaweb2-module-jira provides integration with Atlassian Jira. Starting in version 1.3.0 and prior to version 1.3.2, template and field configuration forms perform the deletion action before user input is validated, including the cross site request forgery token. This issue is fixed in version 1.3.2. There are no known workarounds.",
            "date": "2023-07-05",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-352\"],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-352"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2023-30607",
            "ground_truth_CWEs": [
                "CWE-352"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": true,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: fastify is a fast and low overhead web framework, for Node.js. Affected versions of fastify are subject to a denial of service via malicious use of the Content-Type header. An attacker can send an invalid Content-Type header that can cause the application to crash. This issue has been addressed in commit `fbb07e8d` and will be included in release version 4.8.1. Users are advised to upgrade. Users unable to upgrade may manually filter out http content with malicious Content-Type headers.\nFile: lib/contentTypeParser.js\nContent: \n<Code>\n'use strict'\n\nconst { AsyncResource } = require('async_hooks')\nconst lru = require('tiny-lru').lru\n\nconst secureJson = require('secure-json-parse')\nconst {\n  kDefaultJsonParse,\n  kContentTypeParser,\n  kBodyLimit,\n  kRequestPayloadStream,\n  kState,\n  kTestInternals,\n  kReplyIsError,\n  kRouteContext\n} = require('./symbols')\n\nconst {\n  FST_ERR_CTP_INVALID_TYPE,\n  FST_ERR_CTP_EMPTY_TYPE,\n  FST_ERR_CTP_ALREADY_PRESENT,\n  FST_ERR_CTP_INVALID_HANDLER,\n  FST_ERR_CTP_INVALID_PARSE_TYPE,\n  FST_ERR_CTP_BODY_TOO_LARGE,\n  FST_ERR_CTP_INVALID_MEDIA_TYPE,\n  FST_ERR_CTP_INVALID_CONTENT_LENGTH,\n  FST_ERR_CTP_EMPTY_JSON_BODY\n} = require('./errors')\n\nfunction ContentTypeParser (bodyLimit, onProtoPoisoning, onConstructorPoisoning) {\n  this[kDefaultJsonParse] = getDefaultJsonParser(onProtoPoisoning, onConstructorPoisoning)\n  this.customParsers = {}\n  this.customParsers['application/json'] = new Parser(true, false, bodyLimit, this[kDefaultJsonParse])\n  this.customParsers['text/plain'] = new Parser(true, false, bodyLimit, defaultPlainTextParser)\n  this.parserList = ['application/json', 'text/plain']\n  this.parserRegExpList = []\n  this.cache = lru(100)\n}\n\nContentTypeParser.prototype.add = function (contentType, opts, parserFn) {\n  const contentTypeIsString = typeof contentType === 'string'\n\n  if (!contentTypeIsString && !(contentType instanceof RegExp)) throw new FST_ERR_CTP_INVALID_TYPE()\n  if (contentTypeIsString && contentType.length === 0) throw new FST_ERR_CTP_EMPTY_TYPE()\n  if (typeof parserFn !== 'function') throw new FST_ERR_CTP_INVALID_HANDLER()\n\n  if (this.existingParser(contentType)) {\n    throw new FST_ERR_CTP_ALREADY_PRESENT(contentType)\n  }\n\n  if (opts.parseAs !== undefined) {\n    if (opts.parseAs !== 'string' && opts.parseAs !== 'buffer') {\n      throw new FST_ERR_CTP_INVALID_PARSE_TYPE(opts.parseAs)\n    }\n  }\n\n  const parser = new Parser(\n    opts.parseAs === 'string',\n    opts.parseAs === 'buffer',\n    opts.bodyLimit,\n    parserFn\n  )\n\n  if (contentTypeIsString && contentType === '*') {\n    this.customParsers[''] = parser\n  } else {\n    if (contentTypeIsString) {\n      this.parserList.unshift(contentType)\n    } else {\n      this.parserRegExpList.unshift(contentType)\n    }\n    this.customParsers[contentType] = parser\n  }\n}\n\nContentTypeParser.prototype.hasParser = function (contentType) {\n  return contentType in this.customParsers\n}\n\nContentTypeParser.prototype.existingParser = function (contentType) {\n  if (contentType === 'application/json') {\n    return this.customParsers['application/json'] && this.customParsers['application/json'].fn !== this[kDefaultJsonParse]\n  }\n  if (contentType === 'text/plain') {\n    return this.customParsers['text/plain'] && this.customParsers['text/plain'].fn !== defaultPlainTextParser\n  }\n\n  return contentType in this.customParsers\n}\n\nContentTypeParser.prototype.getParser = function (contentType) {\n  if (contentType in this.customParsers) {\n    return this.customParsers[contentType]\n  }\n\n  if (this.cache.has(contentType)) {\n    return this.cache.get(contentType)\n  }\n\n  // eslint-disable-next-line no-var\n  for (var i = 0; i !== this.parserList.length; ++i) {\n    const parserName = this.parserList[i]\n    if (contentType.indexOf(parserName) !== -1) {\n      const parser = this.customParsers[parserName]\n      this.cache.set(contentType, parser)\n      return parser\n    }\n  }\n\n  // eslint-disable-next-line no-var\n  for (var j = 0; j !== this.parserRegExpList.length; ++j) {\n    const parserRegExp = this.parserRegExpList[j]\n    if (parserRegExp.test(contentType)) {\n      const parser = this.customParsers[parserRegExp]\n      this.cache.set(contentType, parser)\n      return parser\n    }\n  }\n\n  return this.customParsers['']\n}\n\nContentTypeParser.prototype.removeAll = function () {\n  this.customParsers = {}\n  this.parserRegExpList = []\n  this.parserList = []\n  this.cache = lru(100)\n}\n\nContentTypeParser.prototype.remove = function (contentType) {\n  if (!(typeof contentType === 'string' || contentType instanceof RegExp)) throw new FST_ERR_CTP_INVALID_TYPE()\n\n  delete this.customParsers[contentType]\n\n  const parsers = typeof contentType === 'string' ? this.parserList : this.parserRegExpList\n\n  const idx = parsers.findIndex(ct => ct.toString() === contentType.toString())\n\n  if (idx > -1) {\n    parsers.splice(idx, 1)\n  }\n}\n\nContentTypeParser.prototype.run = function (contentType, handler, request, reply) {\n  const parser = this.getParser(contentType)\n  const resource = new AsyncResource('content-type-parser:run', request)\n\n  if (parser === undefined) {\n    if (request.is404) {\n      handler(request, reply)\n    } else {\n      reply.send(new FST_ERR_CTP_INVALID_MEDIA_TYPE(contentType || undefined))\n    }\n  } else if (parser.asString === true || parser.asBuffer === true) {\n    rawBody(\n      request,\n      reply,\n      reply[kRouteContext]._parserOptions,\n      parser,\n      done\n    )\n  } else {\n    const result = parser.fn(request, request[kRequestPayloadStream], done)\n\n    if (result && typeof result.then === 'function') {\n      result.then(body => done(null, body), done)\n    }\n  }\n\n  function done (error, body) {\n    // We cannot use resource.bind() because it is broken in node v12 and v14\n    resource.runInAsyncScope(() => {\n      if (error) {\n        reply[kReplyIsError] = true\n        reply.send(error)\n      } else {\n        request.body = body\n        handler(request, reply)\n      }\n    })\n  }\n}\n\nfunction rawBody (request, reply, options, parser, done) {\n  const asString = parser.asString\n  const limit = options.limit === null ? parser.bodyLimit : options.limit\n  const contentLength = request.headers['content-length'] === undefined\n    ? NaN\n    : Number(request.headers['content-length'])\n\n  if (contentLength > limit) {\n    reply.send(new FST_ERR_CTP_BODY_TOO_LARGE())\n    return\n  }\n\n  let receivedLength = 0\n  let body = asString === true ? '' : []\n\n  const payload = request[kRequestPayloadStream] || request.raw\n\n  if (asString === true) {\n    payload.setEncoding('utf8')\n  }\n\n  payload.on('data', onData)\n  payload.on('end', onEnd)\n  payload.on('error', onEnd)\n  payload.resume()\n\n  function onData (chunk) {\n    receivedLength += chunk.length\n\n    if ((payload.receivedEncodedLength || receivedLength) > limit) {\n      payload.removeListener('data', onData)\n      payload.removeListener('end', onEnd)\n      payload.removeListener('error', onEnd)\n      reply.send(new FST_ERR_CTP_BODY_TOO_LARGE())\n      return\n    }\n\n    if (asString === true) {\n      body += chunk\n    } else {\n      body.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    payload.removeListener('data', onData)\n    payload.removeListener('end', onEnd)\n    payload.removeListener('error', onEnd)\n\n    if (err !== undefined) {\n      err.statusCode = 400\n      reply[kReplyIsError] = true\n      reply.code(err.statusCode).send(err)\n      return\n    }\n\n    if (asString === true) {\n      receivedLength = Buffer.byteLength(body)\n    }\n\n    if (!Number.isNaN(contentLength) && (payload.receivedEncodedLength || receivedLength) !== contentLength) {\n      reply.send(new FST_ERR_CTP_INVALID_CONTENT_LENGTH())\n      return\n    }\n\n    if (asString === false) {\n      body = Buffer.concat(body)\n    }\n\n    const result = parser.fn(request, body, done)\n    if (result && typeof result.then === 'function') {\n      result.then(body => done(null, body), done)\n    }\n  }\n}\n\nfunction getDefaultJsonParser (onProtoPoisoning, onConstructorPoisoning) {\n  return defaultJsonParser\n\n  function defaultJsonParser (req, body, done) {\n    if (body === '' || body == null) {\n      return done(new FST_ERR_CTP_EMPTY_JSON_BODY(), undefined)\n    }\n    let json\n    try {\n      json = secureJson.parse(body, { protoAction: onProtoPoisoning, constructorAction: onConstructorPoisoning })\n    } catch (err) {\n      err.statusCode = 400\n      return done(err, undefined)\n    }\n    done(null, json)\n  }\n}\n\nfunction defaultPlainTextParser (req, body, done) {\n  done(null, body)\n}\n\nfunction Parser (asString, asBuffer, bodyLimit, fn) {\n  this.asString = asString\n  this.asBuffer = asBuffer\n  this.bodyLimit = bodyLimit\n  this.fn = fn\n}\n\nfunction buildContentTypeParser (c) {\n  const contentTypeParser = new ContentTypeParser()\n  contentTypeParser[kDefaultJsonParse] = c[kDefaultJsonParse]\n  Object.assign(contentTypeParser.customParsers, c.customParsers)\n  contentTypeParser.parserList = c.parserList.slice()\n  return contentTypeParser\n}\n\nfunction addContentTypeParser (contentType, opts, parser) {\n  if (this[kState].started) {\n    throw new Error('Cannot call \"addContentTypeParser\" when fastify instance is already started!')\n  }\n\n  if (typeof opts === 'function') {\n    parser = opts\n    opts = {}\n  }\n\n  if (!opts) opts = {}\n  if (!opts.bodyLimit) opts.bodyLimit = this[kBodyLimit]\n\n  if (Array.isArray(contentType)) {\n    contentType.forEach((type) => this[kContentTypeParser].add(type, opts, parser))\n  } else {\n    this[kContentTypeParser].add(contentType, opts, parser)\n  }\n\n  return this\n}\n\nfunction hasContentTypeParser (contentType) {\n  return this[kContentTypeParser].hasParser(contentType)\n}\n\nfunction removeContentTypeParser (contentType) {\n  if (this[kState].started) {\n    throw new Error('Cannot call \"removeContentTypeParser\" when fastify instance is already started!')\n  }\n\n  if (Array.isArray(contentType)) {\n    for (const type of contentType) {\n      this[kContentTypeParser].remove(type)\n    }\n  } else {\n    this[kContentTypeParser].remove(contentType)\n  }\n}\n\nfunction removeAllContentTypeParsers () {\n  if (this[kState].started) {\n    throw new Error('Cannot call \"removeAllContentTypeParsers\" when fastify instance is already started!')\n  }\n\n  this[kContentTypeParser].removeAll()\n}\n\nmodule.exports = ContentTypeParser\nmodule.exports.helpers = {\n  buildContentTypeParser,\n  addContentTypeParser,\n  hasContentTypeParser,\n  removeContentTypeParser,\n  removeAllContentTypeParsers\n}\nmodule.exports.defaultParsers = {\n  getDefaultJsonParser,\n  defaultTextParser: defaultPlainTextParser\n}\nmodule.exports[kTestInternals] = { rawBody }\n</Code>\n\nFile: test/content-parser.test.js\nContent: \n<Code>\n'use strict'\n\nconst t = require('tap')\nconst test = t.test\nconst Fastify = require('..')\nconst keys = require('../lib/symbols')\nconst { FST_ERR_CTP_ALREADY_PRESENT, FST_ERR_CTP_INVALID_TYPE, FST_ERR_CTP_INVALID_MEDIA_TYPE } = require('../lib/errors')\n\nconst first = function (req, payload, done) {}\nconst second = function (req, payload, done) {}\nconst third = function (req, payload, done) {}\n\ntest('hasContentTypeParser', t => {\n  test('should know about internal parsers', t => {\n    t.plan(4)\n\n    const fastify = Fastify()\n    fastify.ready(err => {\n      t.error(err)\n      t.ok(fastify.hasContentTypeParser('application/json'))\n      t.ok(fastify.hasContentTypeParser('text/plain'))\n      t.notOk(fastify.hasContentTypeParser('application/jsoff'))\n    })\n  })\n\n  test('should work with string and RegExp', t => {\n    t.plan(7)\n\n    const fastify = Fastify()\n    fastify.addContentTypeParser(/^image\\/.*/, first)\n    fastify.addContentTypeParser(/^application\\/.+\\+xml/, first)\n    fastify.addContentTypeParser('image/gif', first)\n\n    t.ok(fastify.hasContentTypeParser('application/json'))\n    t.ok(fastify.hasContentTypeParser(/^image\\/.*/))\n    t.ok(fastify.hasContentTypeParser(/^application\\/.+\\+xml/))\n    t.ok(fastify.hasContentTypeParser('image/gif'))\n    t.notOk(fastify.hasContentTypeParser(/^image\\/.+\\+xml/))\n    t.notOk(fastify.hasContentTypeParser('image/png'))\n    t.notOk(fastify.hasContentTypeParser('*'))\n  })\n\n  t.end()\n})\n\ntest('getParser', t => {\n  test('should return matching parser', t => {\n    t.plan(3)\n\n    const fastify = Fastify()\n\n    fastify.addContentTypeParser(/^image\\/.*/, first)\n    fastify.addContentTypeParser(/^application\\/.+\\+xml/, second)\n    fastify.addContentTypeParser('text/html', third)\n\n    t.equal(fastify[keys.kContentTypeParser].getParser('application/t+xml').fn, second)\n    t.equal(fastify[keys.kContentTypeParser].getParser('image/png').fn, first)\n    t.equal(fastify[keys.kContentTypeParser].getParser('text/html').fn, third)\n  })\n\n  test('should return matching parser with caching', t => {\n    t.plan(6)\n\n    const fastify = Fastify()\n\n    fastify.addContentTypeParser('text/html', first)\n\n    t.equal(fastify[keys.kContentTypeParser].getParser('text/html').fn, first)\n    t.equal(fastify[keys.kContentTypeParser].cache.size, 0)\n    t.equal(fastify[keys.kContentTypeParser].getParser('text/html ').fn, first)\n    t.equal(fastify[keys.kContentTypeParser].cache.size, 1)\n    t.equal(fastify[keys.kContentTypeParser].getParser('text/html ').fn, first)\n    t.equal(fastify[keys.kContentTypeParser].cache.size, 1)\n  })\n\n  test('should prefer content type parser with string value', t => {\n    t.plan(2)\n\n    const fastify = Fastify()\n\n    fastify.addContentTypeParser(/^image\\/.*/, first)\n    fastify.addContentTypeParser('image/gif', second)\n\n    t.equal(fastify[keys.kContentTypeParser].getParser('image/gif').fn, second)\n    t.equal(fastify[keys.kContentTypeParser].getParser('image/png').fn, first)\n  })\n\n  test('should return parser that catches all if no other is set', t => {\n    t.plan(3)\n\n    const fastify = Fastify()\n\n    fastify.addContentTypeParser('*', first)\n    fastify.addContentTypeParser(/^text\\/.*/, second)\n\n    t.equal(fastify[keys.kContentTypeParser].getParser('image/gif').fn, first)\n    t.equal(fastify[keys.kContentTypeParser].getParser('text/html').fn, second)\n    t.equal(fastify[keys.kContentTypeParser].getParser('text').fn, first)\n  })\n\n  test('should return undefined if no matching parser exist', t => {\n    t.plan(2)\n\n    const fastify = Fastify()\n\n    fastify.addContentTypeParser(/^weirdType\\/.+/, first)\n    fastify.addContentTypeParser('application/javascript', first)\n\n    t.notOk(fastify[keys.kContentTypeParser].getParser('application/xml'))\n    t.notOk(fastify[keys.kContentTypeParser].getParser('weirdType/'))\n  })\n\n  t.end()\n})\n\ntest('existingParser', t => {\n  test('returns always false for \"*\"', t => {\n    t.plan(2)\n\n    const fastify = Fastify()\n\n    fastify.addContentTypeParser(/^image\\/.*/, first)\n    fastify.addContentTypeParser(/^application\\/.+\\+xml/, first)\n    fastify.addContentTypeParser('text/html', first)\n\n    t.notOk(fastify[keys.kContentTypeParser].existingParser('*'))\n\n    fastify.addContentTypeParser('*', first)\n\n    t.notOk(fastify[keys.kContentTypeParser].existingParser('*'))\n  })\n\n  test('let you override the default parser once', t => {\n    t.plan(2)\n\n    const fastify = Fastify()\n\n    fastify.addContentTypeParser('application/json', first)\n    fastify.addContentTypeParser('text/plain', first)\n\n    t.throws(\n      () => fastify.addContentTypeParser('application/json', first),\n      FST_ERR_CTP_ALREADY_PRESENT,\n      \"Content type parser 'application/json' already present\"\n    )\n    t.throws(\n      () => fastify.addContentTypeParser('text/plain', first),\n      FST_ERR_CTP_ALREADY_PRESENT,\n      \"Content type parser 'text/plain' already present\"\n    )\n  })\n\n  const fastify = Fastify()\n  const contentTypeParser = fastify[keys.kContentTypeParser]\n\n  fastify.addContentTypeParser(/^image\\/.*/, first)\n  fastify.addContentTypeParser(/^application\\/.+\\+xml/, first)\n  fastify.addContentTypeParser('text/html', first)\n\n  t.ok(contentTypeParser.existingParser(/^image\\/.*/))\n  t.ok(contentTypeParser.existingParser('text/html'))\n  t.ok(contentTypeParser.existingParser(/^application\\/.+\\+xml/))\n  t.notOk(contentTypeParser.existingParser('application/json'))\n  t.notOk(contentTypeParser.existingParser('text/plain'))\n  t.notOk(contentTypeParser.existingParser('image/png'))\n  t.notOk(contentTypeParser.existingParser(/^application\\/.+\\+json/))\n\n  t.end()\n})\n\ntest('add', t => {\n  test('should only accept string and RegExp', t => {\n    t.plan(4)\n\n    const fastify = Fastify()\n    const contentTypeParser = fastify[keys.kContentTypeParser]\n\n    t.error(contentTypeParser.add('test', {}, first))\n    t.error(contentTypeParser.add(/test/, {}, first))\n    t.throws(\n      () => contentTypeParser.add({}, {}, first),\n      FST_ERR_CTP_INVALID_TYPE,\n      'The content type should be a string or a RegExp'\n    )\n    t.throws(\n      () => contentTypeParser.add(1, {}, first),\n      FST_ERR_CTP_INVALID_TYPE,\n      'The content type should be a string or a RegExp'\n    )\n  })\n\n  test('should set \"*\" as parser that catches all', t => {\n    t.plan(1)\n\n    const fastify = Fastify()\n    const contentTypeParser = fastify[keys.kContentTypeParser]\n\n    contentTypeParser.add('*', {}, first)\n    t.equal(contentTypeParser.customParsers[''].fn, first)\n  })\n\n  t.end()\n})\n\ntest('non-Error thrown from content parser is properly handled', t => {\n  t.plan(3)\n\n  const fastify = Fastify()\n\n  const throwable = 'test'\n  const payload = 'error'\n\n  fastify.addContentTypeParser('text/test', (request, payload, done) => {\n    done(throwable)\n  })\n\n  fastify.post('/', (req, reply) => {\n  })\n\n  fastify.setErrorHandler((err, req, res) => {\n    t.equal(err, throwable)\n\n    res.send(payload)\n  })\n\n  fastify.inject({\n    method: 'POST',\n    url: '/',\n    headers: { 'Content-Type': 'text/test' },\n    body: 'some text'\n  }, (err, res) => {\n    t.error(err)\n    t.equal(res.payload, payload)\n  })\n})\n\ntest('Error thrown 415 from content type is null and make post request to server', t => {\n  t.plan(3)\n\n  const fastify = Fastify()\n  const errMsg = new FST_ERR_CTP_INVALID_MEDIA_TYPE(undefined).message\n\n  fastify.post('/', (req, reply) => {\n  })\n\n  fastify.inject({\n    method: 'POST',\n    url: '/',\n    body: 'some text'\n  }, (err, res) => {\n    t.error(err)\n    t.equal(res.statusCode, 415)\n    t.equal(JSON.parse(res.body).message, errMsg)\n  })\n})\n\ntest('remove', t => {\n  test('should remove default parser', t => {\n    t.plan(2)\n\n    const fastify = Fastify()\n    const contentTypeParser = fastify[keys.kContentTypeParser]\n\n    contentTypeParser.remove('application/json')\n\n    t.notOk(contentTypeParser.customParsers['application/json'])\n    t.notOk(contentTypeParser.parserList.find(parser => parser === 'application/json'))\n  })\n\n  test('should remove RegExp parser', t => {\n    t.plan(2)\n\n    const fastify = Fastify()\n    fastify.addContentTypeParser(/^text\\/*/, first)\n\n    const contentTypeParser = fastify[keys.kContentTypeParser]\n\n    contentTypeParser.remove(/^text\\/*/)\n\n    t.notOk(contentTypeParser.customParsers[/^text\\/*/])\n    t.notOk(contentTypeParser.parserRegExpList.find(parser => parser.toString() === /^text\\/*/.toString()))\n  })\n\n  test('should throw an error if content type is neither string nor RegExp', t => {\n    t.plan(1)\n\n    const fastify = Fastify()\n\n    t.throws(() => fastify[keys.kContentTypeParser].remove(12), FST_ERR_CTP_INVALID_TYPE)\n  })\n\n  test('should not throw error if content type does not exist', t => {\n    t.plan(1)\n\n    const fastify = Fastify()\n\n    t.doesNotThrow(() => fastify[keys.kContentTypeParser].remove('image/png'))\n  })\n\n  test('should not remove any content type parser if content type does not exist', t => {\n    t.plan(1)\n\n    const fastify = Fastify()\n\n    const contentTypeParser = fastify[keys.kContentTypeParser]\n\n    contentTypeParser.remove('image/png')\n\n    t.same(Object.keys(contentTypeParser.customParsers).length, 2)\n  })\n\n  t.end()\n})\n\ntest('remove all should remove all existing parsers and reset cache', t => {\n  t.plan(4)\n\n  const fastify = Fastify()\n  fastify.addContentTypeParser('application/xml', first)\n  fastify.addContentTypeParser(/^image\\/.*/, first)\n\n  const contentTypeParser = fastify[keys.kContentTypeParser]\n\n  contentTypeParser.getParser('application/xml') // fill cache with one entry\n  contentTypeParser.removeAll()\n\n  t.same(contentTypeParser.cache.size, 0)\n  t.same(contentTypeParser.parserList.length, 0)\n  t.same(contentTypeParser.parserRegExpList.length, 0)\n  t.same(Object.keys(contentTypeParser.customParsers).length, 0)\n})\n</Code>"
                }
            ],
            "url": "https://github.com/fastify/fastify/commit/fbb07e8dfad74c69cd4cd2211aedab87194618e3",
            "description": "fastify is a fast and low overhead web framework, for Node.js. Affected versions of fastify are subject to a denial of service via malicious use of the Content-Type header. An attacker can send an invalid Content-Type header that can cause the application to crash. This issue has been addressed in commit `fbb07e8d` and will be included in release version 4.8.1. Users are advised to upgrade. Users unable to upgrade may manually filter out http content with malicious Content-Type headers.",
            "date": "2022-10-10",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-400\"],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-400"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2022-39288",
            "ground_truth_CWEs": [
                "CWE-754"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: The \"File upload question\" functionality in LimeSurvey 3.x-LTS through 3.27.18 allows XSS in assets/scripts/modaldialog.js and assets/scripts/uploader.js.\nFile: assets/scripts/modaldialog.js\nContent: \n<Code>\n$(function() {\n    openUploadModalDialog();\n});\n\nfunction openUploadModalDialog(){\n    $('.upload').click(function(e) {\n\n        e.preventDefault();\n\n        var $this = $(this);\n        var show_title   = getQueryVariable('show_title', this.href);\n        var show_comment = getQueryVariable('show_comment', this.href);\n        var pos          = getQueryVariable('pos', this.href);\n        var fieldname    = getQueryVariable('fieldname', this.href);\n        var buttonsOpts = {};\n        buttonsOpts[uploadLang.returnTxt] = function() {\n            $(this).dialog(\"close\");\n        };\n\n        $('#file-upload-modal-' + fieldname).appendTo('body').modal();\n        $(document).on('shown.bs.modal','#file-upload-modal-' + fieldname, function()\n        {\n            updateMaxHeightModalbody($(this));\n        });\n        $('#file-upload-modal-' + fieldname).on('hide.bs.modal', function() {\n            var pass;\n            var uploaderId = 'uploader' + fieldname;\n            if(document.getElementById(uploaderId).contentDocument) {\n                if(document.getElementById(uploaderId).contentDocument.defaultView)\n                    {       /*Firefox*/\n                    pass=document.getElementById(uploaderId).contentDocument.defaultView.saveAndExit(fieldname,show_title,show_comment,pos);\n                }else{       /*IE8*/\n                    pass=document.getElementById(uploaderId).contentWindow.saveAndExit(fieldname,show_title,show_comment,pos);\n                }\n            }else{    /*IE6*/\n                pass=document.getElementById(uploaderId).contentWindow.saveAndExit(fieldname,show_title,show_comment,pos);\n            }\n            return pass;\n        });\n    });\n}\n\n/* Function to update upload frame\n *\n * @param frameName name of the frame (here it's id too :) )\n * @param integer heigth\n */\nfunction updateUploadFrame(frameName,heigth)\n{\n    $(\"#\"+frameName).innerHeight(heigth);\n}\n/* Function to update modal body max height\n *\n * @param modal jquery object : the modal\n */\nfunction updateMaxHeightModalbody(modal)\n{\n    var modalHeader=$(modal).find(\".modal-header\").outerHeight();\n    var modalFooter=$(modal).find(\".modal-footer\").outerHeight();\n    console.ls.log([$(window).height(),modalHeader,modalFooter,(modalHeader+modalFooter)]);\n    var finalMaxHeight=Math.max(150,$(window).height()-(modalHeader+modalFooter+16));// Not less than 150px\n    $(modal).find(\".modal-body\").css(\"max-height\",finalMaxHeight);\n}\n\nfunction getQueryVariable(variable, url) {\n    var vars = url.split(\"/\");\n    for (var i=0;i<vars.length;i++) {\n        //var pair = vars[i].split(\"=\");\n        if (vars[i] == variable) {\n        return vars[i+1];\n        }\n    }\n    // If not found try with ?\n    // TODO : replace by a regexp\n   var vars = url.replace(/\\&amp;/g,'&').split(\"&\");\n   for (var i=0;i<vars.length;i++) {\n           var pair = vars[i].split(\"=\");\n           if(pair[0] == variable){return pair[1];}\n   }\n   return null;\n}\n\nfunction isValueInArray(arr, val) {\n    inArray = false;\n    for (i = 0; i < arr.length; i++) {\n        if (val.toLowerCase() == arr[i].toLowerCase()) {\n            inArray = true;\n        }\n    }\n\n    return inArray;\n}\n\nfunction displayUploadedFiles(jsonstring, filecount, fieldname, show_title, show_comment) {\n    var jsonobj;\n    var i;\n    var display = '';\n\n    if (jsonstring == '[]') {\n        $('#'+fieldname+'_uploadedfiles').html(display);\n        return;\n    }\n\n    if (jsonstring !== '')\n    {\n        jsonobj = eval('(' + jsonstring + ')');\n        display = '<table width=\"100%\" class=\"question uploadedfiles\"><thead><tr><td width=\"20%\">&nbsp;</td>';\n        if (show_title != 0)\n            display += '<th>'+uploadLang.headTitle+'</th>';\n        if (show_comment != 0)\n            display += '<th>'+uploadLang.headComment+'</th>';\n        display += '<th>'+uploadLang.headFileName+'</th><th class=\"edit\"></th></tr></thead><tbody>';\n        var image_extensions = new Array('gif', 'jpeg', 'jpg', 'png', 'swf', 'psd', 'bmp', 'tiff', 'jp2', 'iff', 'bmp', 'xbm', 'ico');\n\n        for (i = 0; i < filecount; i++)\n        {\n            if (isValueInArray(image_extensions, jsonobj[i].ext))\n                display += '<tr><td class=\"upload image\"><img src=\"' + uploadurl + '/filegetcontents/'+decodeURIComponent(jsonobj[i].filename)+'\" class=\"uploaded\" /></td>';\n            else\n                display += '<tr><td class=\"upload placeholder\"><div class=\"upload-placeholder\" /></td>';\n\n            if (show_title != 0)\n                display += '<td class=\"upload title\">'+htmlentities(jsonobj[i].title,null,null,false)+'</td>';\n            if (show_comment != 0)\n                display += '<td class=\"upload comment\">'+htmlentities(jsonobj[i].comment,null,null,false)+'</td>';\n            display +='<td class=\"upload edit\">'+htmlentities(decodeURIComponent(jsonobj[i].name),null,null,false)+'</td><td>'+'<a class=\"btn btn-primary\" onclick=\"javascript:upload_'+fieldname+'();$(\\'#upload_'+fieldname+'\\').click();\"><span class=\"fa fa-pencil\"></span>&nbsp;'+uploadLang.editFile+'</a></td></tr>';\n        }\n        display += '</tbody></table>';\n\n        $('#'+fieldname+'_uploadedfiles').html(display);\n    }\n}\n\nfunction copyJSON(jsonstring, filecount, fieldname, show_title, show_comment, pos) {\n    $('#'+fieldname).val(jsonstring);\n    $('#'+fieldname+'_filecount').val(filecount);\n    displayUploadedFiles(jsonstring, filecount, fieldname, show_title, show_comment, pos);\n}\n\n\nfunction showBasic() {\n    $('#basic').show();\n}\n\nfunction hideBasic() {\n    $('#basic').hide();\n}\n</Code>\n\nFile: assets/scripts/uploader.js\nContent: \n<Code>\n$(document).on('ready pjax:scriptcomplete', function () {\n    doFileUpload();\n    fixParentHeigth();\n});\n\nfunction fixParentHeigth(fieldname, elementHeight)\n{\n    fieldname = fieldname || '';\n    elementHeight = elementHeight || 0;\n\n    if (window != top)\n    {\n        //~ frameheight=Math.max($(document).height(),$('html').outerHeight()+30,150);\n        if (fieldname != '')\n        {\n            frameheight = Math.max($(document).height() + elementHeight, $('#field' + fieldname + '_listfiles').parent().height());\n        } else\n        {\n            frameheight = Math.max($(document).height() + elementHeight, 150);\n        }\n\n        if (jQuery.isFunction(parent.updateUploadFrame))\n        {\n            parent.updateUploadFrame(window.name, frameheight);\n        }\n    }\n}\n\nfunction doFileUpload()\n{\n    var fieldname = $('#ia').val();\n    /* Load the previously uploaded files */\n    var filecount = window.parent.window.$('#' + fieldname + '_filecount').val();\n    $('#' + fieldname + '_filecount').val(filecount);\n\n    var image_extensions = new Array(\"gif\", \"jpeg\", \"jpg\", \"png\", \"swf\", \"psd\", \"bmp\", \"tiff\", \"jp2\", \"iff\", \"bmp\", \"xbm\", \"ico\");\n\n    if (filecount > 0)\n    {\n        var jsontext = window.parent.window.$('#' + fieldname).val();\n        var json = eval('(' + jsontext + ')');\n        if ($('#field' + fieldname + '_listfiles').length == 0)\n        {\n            $(\"<ul id='field\" + fieldname + \"_listfiles' class='files-list' />\").insertAfter(\"#uploadstatus\");\n        }\n        var i;\n        $('#' + fieldname + '_licount').val(filecount);\n\n        for (i = 1; i <= filecount; i++)\n        {\n            var previewblock = \"<li id='\" + fieldname + \"_li_\" + i + \"' class='previewblock file-element'>\";\n            previewblock += \"<div class='file-preview'>\";\n            if (isValueInArray(image_extensions, json[i - 1].ext.toLowerCase()))\n                previewblock += \"<img src='\" + uploadurl + \"/filegetcontents/\" + json[i - 1].filename + \"' class='uploaded' onload='fixParentHeigth(fieldname)' />\";\n            else\n                previewblock += \"<div class='upload-placeholder' />\";\n\n            previewblock += \"<span class='file-name'>\" + htmlentities(decodeURIComponent(json[i - 1].name),null,null,false) + \"</span>\";\n            previewblock += \"</div>\";\n\n            previewblock += \"<div class='file-info'><fieldset>\";\n            if ($('#' + fieldname + '_show_title').val() == 1 || $('#' + fieldname + '_show_comment').val() == 1)\n            {\n                if ($('#' + fieldname + '_show_title').val() == 1)\n                {\n                    previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_title_\" + i + \"'>\" + uploadLang.titleFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='\" + htmlentities(json[i - 1].title,null,null,false) + \"' id='\" + fieldname + \"_title_\" + i + \"' /></div></div>\";\n                }\n                if ($('#' + fieldname + '_show_comment').val() == 1)\n                {\n                    previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_comment_\" + i + \"'>\" + uploadLang.commentFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='\" + htmlentities(json[i - 1].comment,null,null,false) + \"' id='\" + fieldname + \"_comment_\" + i + \"' /></div></div>\";\n                }\n\n            }\n            previewblock += \"<div class='form-group'><div class='col-xs-4'></div><div class='input-container'><a class='btn btn-danger' onclick='deletefile(\\\"\" + fieldname + \"\\\", \" + i + \")'><span class='fa fa-trash'></span>&nbsp;\" + uploadLang.deleteFile + \"</a></div></div>\";\n            previewblock += \"</fieldset></div>\";\n\n            previewblock += \"<input type='hidden' id='\" + fieldname + \"_size_\" + i + \"' value=\" + json[i - 1].size + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_name_\" + i + \"' value=\" + htmlentities(json[i - 1].name,null,null,false) + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_file_index_\" + i + \"' value=\" + i + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_filename_\" + i + \"' value=\" + htmlentities(json[i - 1].filename,null,null,false) + \" />\" +\n                \"<input type='hidden' id='\" + fieldname + \"_ext_\" + i + \"' value=\" + htmlentities(json[i - 1].ext) + \"  />\";\n\n            previewblock += \"</li>\";\n\n            // add file to the list\n            $('#field' + fieldname + '_listfiles').append(previewblock);\n            fixParentHeigth(fieldname);\n        }\n    }\n\n    // The upload button\n    var button = $('#button1'), interval;\n    new AjaxUpload(button, {\n        action: uploadurl + '/sid/' + surveyid + '/preview/' + questgrppreview + '/fieldname/' + fieldname + '/',\n        name: 'uploadfile',\n        data: $.extend({\n                valid_extensions: $('#' + fieldname + '_allowed_filetypes').val(),\n                max_filesize: $('#' + fieldname + '_maxfilesize').val(),\n                preview: $('#preview').val(),\n                surveyid: surveyid,\n                fieldname: fieldname,\n            }, csrfData\n        ),\n        onSubmit: function (file, ext) {\n            var maxfiles = parseInt($('#' + fieldname + '_maxfiles').val());\n            var filecount = parseInt($('#' + fieldname + '_filecount').val());\n            var allowed_filetypes = $('#' + fieldname + '_allowed_filetypes').val().split(\",\");\n\n            /* If maximum number of allowed filetypes have already been uploaded,\n             * do not upload the file and display an error message ! */\n            if (filecount >= maxfiles)\n            {\n                $('#notice').html('<p class=\"alert alert-danger\"><span class=\"fa fa-exclamation-circle\"></span>&nbsp;' + uploadLang.errorNoMoreFiles + '</p>');\n                fixParentHeigth(fieldname);\n                return false;\n            }\n\n            /* If the file being uploaded is not allowed,\n             * do not upload the file and display an error message ! */\n            var allowSubmit = false;\n            for (var i = 0; i < allowed_filetypes.length; i++)\n            {\n                //check to see if it's the proper extension\n                if (jQuery.trim(allowed_filetypes[i].toLowerCase()) == jQuery.trim(ext.toLowerCase()))\n                {\n                    //it's the proper extension\n                    allowSubmit = true;\n                    break;\n                }\n            }\n            if (allowSubmit == false)\n            {\n                $('#notice').html('<p class=\"alert alert-danger\"><span class=\"fa fa-exclamation-circle\"></span>&nbsp;' + uploadLang.errorOnlyAllowed.replace('%s', $('#' + fieldname + '_allowed_filetypes').val()) + '</p>');\n                fixParentHeigth(fieldname);\n                return false;\n            }\n\n            // change button text, when user selects file\n            button.text(uploadLang.uploading);\n\n            // If you want to allow uploading only 1 file at time,\n            // you can disable upload button\n            this.disable();\n\n            // Uploding -> Uploading. -> Uploading...\n            interval = window.setInterval(function () {\n                var text = button.text();\n                if (text.length < 13)\n                {\n                    button.text(text + '.');\n                } else\n                {\n                    button.text(uploadLang.uploading);\n                }\n            }, 400);\n        },\n        onComplete: function (file, response) {\n            button.text(uploadLang.selectfile);\n            window.clearInterval(interval);\n            // enable upload button\n            this.enable();\n\n            // Once the file has been uploaded via AJAX,\n            // the preview is appended to the list of files\n            try{\n                var metadata = jQuery.parseJSON(response);\n            } catch(e) {\n                /* Suppose we get an HTML error ? Replace whole HTML (without head) */\n                $('body').html(response);\n                return;\n            }\n            var count = parseInt($('#' + fieldname + '_licount').val());\n            count++;\n            $('#' + fieldname + '_licount').val(count);\n\n            var image_extensions = new Array(\"gif\", \"jpeg\", \"jpg\", \"png\", \"swf\", \"psd\", \"bmp\", \"tiff\", \"jp2\", \"iff\", \"bmp\", \"xbm\", \"ico\");\n\n            if (metadata.success)\n            {\n                $('#notice').html('<p class=\"alert alert-success\"><span class=\"fa fa-success\"></span>&nbsp;' + metadata.msg + '</p>');\n                if ($('#field' + fieldname + '_listfiles').length == 0)\n                {\n                    $(\"<ul id='field\" + fieldname + \"_listfiles' class='files-list' />\").insertAfter(\"#uploadstatus\");\n                }\n                var previewblock = \"<li id='\" + fieldname + \"_li_\" + count + \"' class='previewblock file-element'>\";\n\n                previewblock += \"<div class='file-preview'>\";\n                if (isValueInArray(image_extensions, metadata.ext.toLowerCase()))\n                    previewblock += \"<img src='\" + uploadurl + \"/filegetcontents/\" + decodeURIComponent(metadata.filename) + \"' class='uploaded'  onload='fixParentHeigth(fieldname)' />\";\n                else\n                    previewblock += \"<div class='upload-placeholder' />\";\n                previewblock += \"<span class='file-name'>\" + escapeHtml(decodeURIComponent(metadata.name)) + \"<span>\";\n                previewblock += \"</div>\";\n\n                previewblock += \"<div class='file-info'><fieldset>\";\n                if ($('#' + fieldname + '_show_title').val() == 1 || $('#' + fieldname + '_show_comment').val() == 1)\n                {\n                    if ($('#' + fieldname + '_show_title').val() == 1)\n                    {\n                        previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_title_\" + count + \"'>\" + uploadLang.titleFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='' id='\" + fieldname + \"_title_\" + count + \"' /></div></div>\";\n                    }\n                    if ($('#' + fieldname + '_show_comment').val() == 1)\n                    {\n                        previewblock += \"<div class='form-group'><label class='control-label col-xs-4' for='\" + fieldname + \"_comment_\" + count + \"'>\" + uploadLang.commentFld + \"</label>\" + \"<div class='input-container'><input class='form-control' type='text' value='' id='\" + fieldname + \"_comment_\" + count + \"' /></div></div>\";\n                    }\n                }\n                previewblock += \"<div class='form-group'><div class='col-xs-4'></div><div class='input-container'><a class='btn btn-danger' onclick='deletefile(\\\"\" + fieldname + \"\\\", \" + count + \")'><span class='fa fa-trash'></span>&nbsp;\" + uploadLang.deleteFile + \"</a></div></div>\";\n                previewblock += \"</fieldset></div>\";\n\n                previewblock += \"<input type='hidden' id='\" + fieldname + \"_size_\" + count + \"' value=\" + metadata.size + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_file_index_\" + count + \"' value=\" + metadata.file_index + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_name_\" + count + \"' value=\" + metadata.name + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_filename_\" + count + \"' value=\" + metadata.filename + \" />\" +\n                    \"<input type='hidden' id='\" + fieldname + \"_ext_\" + count + \"' value=\" + metadata.ext + \"  />\";\n\n                previewblock += \"</li>\";\n\n                // add file to the list\n                $('#field' + fieldname + '_listfiles').prepend(previewblock);\n                var filecount = parseInt($('#' + fieldname + '_filecount').val());\n                var minfiles = parseInt($('#' + fieldname + '_minfiles').val());\n                filecount++;\n                var maxfiles = parseInt($('#' + fieldname + '_maxfiles').val());\n                $('#' + fieldname + '_filecount').val(filecount);\n\n                if (filecount < minfiles) {\n                    $('#uploadstatus').html(uploadLang.errorNeedMore.replace('%s', (minfiles - filecount))).removeClass('hidden');\n                } else if (filecount < maxfiles) {\n                    $('#uploadstatus').html(uploadLang.errorMoreAllowed.replace('%s', (maxfiles - filecount))).removeClass('hidden');\n                } else {\n                    $('#uploadstatus').html(uploadLang.errorMaxReached).removeClass('hidden');\n                }\n                fixParentHeigth(fieldname);\n                if (filecount >= maxfiles) {\n                    //$('#notice').html('<p class=\"alert alert-success\"><span class=\"fa fa-check\"></span>&nbsp;' + uploadLang.errorTooMuch + '</p>');\n                }\n                fixParentHeigth(fieldname);\n            } else {\n                $('#notice').html('<p class=\"alert alert-danger\"><span class=\"fa fa-exclamation-circle\"></span>&nbsp;' + metadata.msg + '</p>');\n                fixParentHeigth(fieldname);\n            }\n\n        }\n    });\n\n    // if it has been jst opened, the upload button should be automatically clicked !\n    // TODO: auto open using click() not working at all ! :(\n}\n\nfunction isValueInArray(arr, val)\n{\n    inArray = false;\n    for (i = 0; i < arr.length; i++)\n        if (val.toLowerCase() == arr[i].toLowerCase())\n            inArray = true;\n\n    return inArray;\n}\n\n// pass the JSON data from the iframe to the main survey page\nfunction passJSON(fieldname, show_title, show_comment, pos)\n{\n    var json = \"[\";\n    var filecount = 0;\n    var licount = parseInt($('#' + fieldname + '_licount').val());\n    var i = 1;\n    while (i <= licount)\n    {\n\n        if ($(\"#\" + fieldname + \"_li_\" + i).is(':visible'))\n        {\n            if (filecount > 0)\n                json += \",\";\n            json += '{ ';\n\n            if ($(\"#\" + fieldname + \"_show_title\").val() == 1)\n                json += '\"title\":\"' + htmlentities($(\"#\" + fieldname + \"_title_\" + i).val(),null,null,false) + '\",';\n            if ($(\"#\" + fieldname + \"_show_comment\").val() == 1)\n                json += '\"comment\":\"' + htmlentities($(\"#\" + fieldname + \"_comment_\" + i).val(),null,null,false) + '\",';\n            json += '\"size\":\"' + $(\"#\" + fieldname + \"_size_\" + i).val() + '\",' +\n                '\"name\":\"' + htmlentities($(\"#\" + fieldname + \"_name_\" + i).val(),null,null,false) + '\",' +\n                '\"filename\":\"' + htmlentities($(\"#\" + fieldname + \"_filename_\" + i).val(),null,null,false) + '\",' +\n                '\"ext\":\"' + htmlentities($(\"#\" + fieldname + \"_ext_\" + i).val(),null,null,false) + '\"}';\n\n            filecount += 1;\n        }\n        i += 1;\n    }\n    json += \"]\";\n    window.parent.window.copyJSON(json, filecount, fieldname, show_title, show_comment, pos);\n}\n\nfunction saveAndExit(fieldname, show_title, show_comment, pos)\n{\n    var filecount = parseInt($('#' + fieldname + '_filecount').val());\n    var minfiles = parseInt($('#' + fieldname + '_minfiles').val());\n\n    if (minfiles != 0 && filecount < minfiles && showpopups)\n    {\n        var confirmans = confirm(uploadLang.errorNeedMoreConfirm.replace('%s', (minfiles - filecount)));\n        if (confirmans)\n        {\n            passJSON(fieldname, show_title, show_comment, pos);\n            return true;\n        } else\n            return false;\n    } else\n    {\n        passJSON(fieldname, show_title, show_comment, pos);\n        return true;\n    }\n}\n\nfunction deletefile(fieldname, count)\n{\n\n    var file_index;\n    var filename = $(\"#\" + fieldname + \"_filename_\" + count).val();\n    var name = $(\"#\" + fieldname + \"_name_\" + count).val();\n\n    var filecount = parseInt($('#' + fieldname + '_filecount').val());\n    var licount = parseInt($('#' + fieldname + '_licount').val());\n\n    fileheight = $(\"#\" + fieldname + \"_li_\" + count).height();\n    $(\"#\" + fieldname + \"_li_\" + count).remove();\n\n    $.ajax(\n        {\n            method: \"POST\",\n            url: uploadurl,\n            data: $.extend({\n                'delete': 1,\n                'fieldname': fieldname,\n                'filename': filename,\n                'name': name,\n            }, csrfData)\n        })\n        .done(function (msg) {\n            $('#notice').html('<p class=\"alert alert-success\"><span class=\"fa fa-check\"></span>&nbsp;' + msg + '</p>');\n            setTimeout(function () {\n                $(\".success\").remove();\n            }, 5000);\n            $(\"#\" + fieldname + \"_li_\" + count).hide();\n            filecount--;\n            $('#' + fieldname + '_filecount').val(filecount);\n            file_index = $(\"#\" + fieldname + \"_file_index_\" + count).val();\n            for (j = count; j <= licount; j++)\n            {\n                if ($('#' + fieldname + '_li_' + j).is(\":visible\"))\n                {\n                    $('#' + fieldname + '_file_index_' + j).val(file_index);\n                    file_index++;\n                }\n            }\n            var minfiles = parseInt($('#' + fieldname + '_minfiles').val());\n            var maxfiles = parseInt($('#' + fieldname + '_maxfiles').val());\n\n            if (filecount < minfiles)\n            {\n                $('#uploadstatus').html(uploadLang.errorNeedMore.replace('%s', (minfiles - filecount)));\n                fixParentHeigth(fieldname, -fileheight);\n            } else\n            {\n                $('#uploadstatus').html(uploadLang.errorMoreAllowed.replace('%s', (maxfiles - filecount)));\n                fixParentHeigth(fieldname, -fileheight);\n            }\n        });\n}\n\n\nfunction escapeHtml(unsafe)\n{\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\n\nfunction htmlentities (string, quote_style, charset, double_encode) {\n    // Convert all applicable characters to HTML entities\n    //\n    // version: 1107.2516\n    // discuss at: http://phpjs.org/functions/htmlentities\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: nobbler\n    // +    tweaked by: Jack\n    // +   bugfixed by: Onno Marsman\n    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +    bugfixed by: Brett Zamir (http://brett-zamir.me)\n    // +      input by: Ratheous\n    // +   improved by: Rafa\u0142 Kukawski (http://blog.kukawski.pl)\n    // -    depends on: get_html_translation_table\n    // *     example 1: htmlentities('Kevin & van Zonneveld');\n    // *     returns 1: 'Kevin &amp; van Zonneveld'\n    // *     example 2: htmlentities(\"foo'bar\",\"ENT_QUOTES\");\n    // *     returns 2: 'foo&#039;bar'\n    var hash_map = {},\n        symbol = '',\n        entity = '',\n        self = this;\n    string += '';\n    double_encode = !!double_encode || double_encode == null;\n\n    if (false === (hash_map = this.get_html_translation_table('HTML_ENTITIES', quote_style))) {\n        return false;\n    }\n    hash_map[\"'\"] = '&#039;';\n\n    if (double_encode) {\n        for (symbol in hash_map) {\n            entity = hash_map[symbol];\n            string = string.split(symbol).join(entity);\n        }\n    } else {\n        string = string.replace(/([\\s\\S]*?)(&(?:#\\d+|#x[\\da-f]+|[a-z][\\da-z]*);|$)/g, function (ignore, text, entity) {\n            return self.htmlentities(text, quote_style, charset) + entity;\n        });\n    }\n\n    return string;\n}\n\nfunction get_html_translation_table (table, quote_style) {\n    // Returns the internal translation table used by htmlspecialchars and htmlentities\n    //\n    // version: 1107.2516\n    // discuss at: http://phpjs.org/functions/get_html_translation_table\n    // +   original by: Philip Peterson\n    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: noname\n    // +   bugfixed by: Alex\n    // +   bugfixed by: Marco\n    // +   bugfixed by: madipta\n    // +   improved by: KELAN\n    // +   improved by: Brett Zamir (http://brett-zamir.me)\n    // +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n    // +      input by: Frank Forte\n    // +   bugfixed by: T.Wild\n    // +      input by: Ratheous\n    // %          note: It has been decided that we're not going to add global\n    // %          note: dependencies to php.js, meaning the constants are not\n    // %          note: real constants, but strings instead. Integers are also supported if someone\n    // %          note: chooses to create the constants themselves.\n    // *     example 1: get_html_translation_table('HTML_SPECIALCHARS');\n    // *     returns 1: {'\"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}\n    var entities = {},\n        hash_map = {},\n        decimal = 0,\n        symbol = '';\n    var constMappingTable = {},\n        constMappingQuoteStyle = {};\n    var useTable = {},\n        useQuoteStyle = {};\n\n    // Translate arguments\n    constMappingTable[0] = 'HTML_SPECIALCHARS';\n    constMappingTable[1] = 'HTML_ENTITIES';\n    constMappingQuoteStyle[0] = 'ENT_NOQUOTES';\n    constMappingQuoteStyle[2] = 'ENT_COMPAT';\n    constMappingQuoteStyle[3] = 'ENT_QUOTES';\n\n    useTable = !isNaN(table) ? constMappingTable[table] : table ? table.toUpperCase() : 'HTML_SPECIALCHARS';\n    useQuoteStyle = !isNaN(quote_style) ? constMappingQuoteStyle[quote_style] : quote_style ? quote_style.toUpperCase() : 'ENT_COMPAT';\n\n    if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n        throw new Error(\"Table: \" + useTable + ' not supported');\n        // return false;\n    }\n\n    entities['38'] = '&amp;';\n    if (useTable === 'HTML_ENTITIES') {\n        entities['160'] = '&nbsp;';\n        entities['161'] = '&iexcl;';\n        entities['162'] = '&cent;';\n        entities['163'] = '&pound;';\n        entities['164'] = '&curren;';\n        entities['165'] = '&yen;';\n        entities['166'] = '&brvbar;';\n        entities['167'] = '&sect;';\n        entities['168'] = '&uml;';\n        entities['169'] = '&copy;';\n        entities['170'] = '&ordf;';\n        entities['171'] = '&laquo;';\n        entities['172'] = '&not;';\n        entities['173'] = '&shy;';\n        entities['174'] = '&reg;';\n        entities['175'] = '&macr;';\n        entities['176'] = '&deg;';\n        entities['177'] = '&plusmn;';\n        entities['178'] = '&sup2;';\n        entities['179'] = '&sup3;';\n        entities['180'] = '&acute;';\n        entities['181'] = '&micro;';\n        entities['182'] = '&para;';\n        entities['183'] = '&middot;';\n        entities['184'] = '&cedil;';\n        entities['185'] = '&sup1;';\n        entities['186'] = '&ordm;';\n        entities['187'] = '&raquo;';\n        entities['188'] = '&frac14;';\n        entities['189'] = '&frac12;';\n        entities['190'] = '&frac34;';\n        entities['191'] = '&iquest;';\n        entities['192'] = '&Agrave;';\n        entities['193'] = '&Aacute;';\n        entities['194'] = '&Acirc;';\n        entities['195'] = '&Atilde;';\n        entities['196'] = '&Auml;';\n        entities['197'] = '&Aring;';\n        entities['198'] = '&AElig;';\n        entities['199'] = '&Ccedil;';\n        entities['200'] = '&Egrave;';\n        entities['201'] = '&Eacute;';\n        entities['202'] = '&Ecirc;';\n        entities['203'] = '&Euml;';\n        entities['204'] = '&Igrave;';\n        entities['205'] = '&Iacute;';\n        entities['206'] = '&Icirc;';\n        entities['207'] = '&Iuml;';\n        entities['208'] = '&ETH;';\n        entities['209'] = '&Ntilde;';\n        entities['210'] = '&Ograve;';\n        entities['211'] = '&Oacute;';\n        entities['212'] = '&Ocirc;';\n        entities['213'] = '&Otilde;';\n        entities['214'] = '&Ouml;';\n        entities['215'] = '&times;';\n        entities['216'] = '&Oslash;';\n        entities['217'] = '&Ugrave;';\n        entities['218'] = '&Uacute;';\n        entities['219'] = '&Ucirc;';\n        entities['220'] = '&Uuml;';\n        entities['221'] = '&Yacute;';\n        entities['222'] = '&THORN;';\n        entities['223'] = '&szlig;';\n        entities['224'] = '&agrave;';\n        entities['225'] = '&aacute;';\n        entities['226'] = '&acirc;';\n        entities['227'] = '&atilde;';\n        entities['228'] = '&auml;';\n        entities['229'] = '&aring;';\n        entities['230'] = '&aelig;';\n        entities['231'] = '&ccedil;';\n        entities['232'] = '&egrave;';\n        entities['233'] = '&eacute;';\n        entities['234'] = '&ecirc;';\n        entities['235'] = '&euml;';\n        entities['236'] = '&igrave;';\n        entities['237'] = '&iacute;';\n        entities['238'] = '&icirc;';\n        entities['239'] = '&iuml;';\n        entities['240'] = '&eth;';\n        entities['241'] = '&ntilde;';\n        entities['242'] = '&ograve;';\n        entities['243'] = '&oacute;';\n        entities['244'] = '&ocirc;';\n        entities['245'] = '&otilde;';\n        entities['246'] = '&ouml;';\n        entities['247'] = '&divide;';\n        entities['248'] = '&oslash;';\n        entities['249'] = '&ugrave;';\n        entities['250'] = '&uacute;';\n        entities['251'] = '&ucirc;';\n        entities['252'] = '&uuml;';\n        entities['253'] = '&yacute;';\n        entities['254'] = '&thorn;';\n        entities['255'] = '&yuml;';\n    }\n\n    if (useQuoteStyle !== 'ENT_NOQUOTES') {\n        entities['34'] = '&quot;';\n    }\n    if (useQuoteStyle === 'ENT_QUOTES') {\n        entities['39'] = '&#39;';\n    }\n    entities['60'] = '&lt;';\n    entities['62'] = '&gt;';\n\n\n    // ascii decimals to real symbols\n    for (decimal in entities) {\n        symbol = String.fromCharCode(decimal);\n        hash_map[symbol] = entities[decimal];\n    }\n\n    return hash_map;\n}\n</Code>"
                }
            ],
            "url": "https://github.com/LimeSurvey/LimeSurvey/commit/d56619a50cfd191bbffd0adb660638a5e438070d",
            "description": "The \"File upload question\" functionality in LimeSurvey 3.x-LTS through 3.27.18 allows XSS in assets/scripts/modaldialog.js and assets/scripts/uploader.js.",
            "date": "2021-10-08",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-79\"],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-79"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2021-42112",
            "ground_truth_CWEs": [
                "CWE-79"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": true,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: The package object-path-set before 1.0.2 are vulnerable to Prototype Pollution via the setPath method, as it allows an attacker to merge object prototypes into it. *Note:* This vulnerability derives from an incomplete fix in https://security.snyk.io/vuln/SNYK-JS-OBJECTPATHSET-607908\nFile: index.js\nContent: \n<Code>\n'use strict';\n\n// https://github.com/jonschlinkert/assign-deep/commit/90bf1c551d05940898168d04066bbf15060f50cc\nvar isValidKey = function (key) {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n};\n\nvar setPath = function (obj, path, value, delimiter) {\n  var arr;\n  var key;\n  if (!obj || typeof obj !== 'object') {\n    obj = {};\n  }\n  if (typeof path === 'string') {\n    path = path.split(delimiter || '.');\n  }\n  if (Array.isArray(path) && path.length > 0) {\n    arr = path;\n    key = arr[0];\n    if (isValidKey(key)) {\n      if (arr.length > 1) {\n        arr.shift();\n        obj[key] = setPath(obj[key], arr, value, delimiter);\n      } else {\n        obj[key] = value;\n      }\n    }\n  }\n  return obj;\n};\n\nmodule.exports = exports = setPath;\n</Code>\n\nFile: test.js\nContent: \n<Code>\n'use strict';\nvar setPath = require('./index.js');\nvar now = new Date();\nvar obj;\nvar getDefaultObject = function () {\n  return {\n    nested: {\n      thing: {\n        foo: 'bar'\n      },\n      is: {\n        cool: true\n      }\n    },\n    dataUndefined: undefined,\n    dataDate: now,\n    dataNumber: 42,\n    dataString: 'foo',\n    dataNull: null,\n    dataBoolean: true\n  };\n};\n\ndescribe('object-path-set', function () {\n  beforeEach(function () {\n    obj = getDefaultObject();\n  });\n  it('should be able to set and overwrite types', function () {\n    var newValue = 'newValue';\n\n    obj = setPath(obj, 'dataUndefined', newValue);\n    expect(typeof obj.dataUndefined).toBe('string');\n    expect(obj.dataUndefined).toBe(newValue);\n\n    obj = setPath(obj, 'dataDate', newValue);\n    expect(typeof obj.dataDate).toBe('string');\n    expect(obj.dataDate).toBe(newValue);\n\n    obj = setPath(obj, 'nested', newValue);\n    expect(typeof obj.nested).toBe('string');\n    expect(obj.nested).toBe(newValue);\n\n    obj = setPath(obj, 'nested.foo', newValue);\n    expect(typeof obj.nested).toBe('object');\n    expect(typeof obj.nested.foo).toBe('string');\n    expect(obj.nested.foo).toBe(newValue);\n  });\n  it('should covert things to objects', function () {\n    expect(setPath(1234, 'a', 42)).toEqual({ a: 42 });\n    expect(setPath(null, 'a', 42)).toEqual({ a: 42 });\n    expect(setPath(true, 'a', 42)).toEqual({ a: 42 });\n    expect(setPath({ a: 123 }, 'a.b', 42)).toEqual({ a: { b: 42 } });\n    expect(setPath(null, 'a.b.c.d', null)).toEqual({\n      a: { b: { c: { d: null } } }\n    });\n  });\n  it('should be able to use custom delimiters', function () {\n    expect(setPath({}, 'a|b|c|d', 42)).toEqual({ 'a|b|c|d': 42 });\n    expect(setPath({}, 'a|b|c|d', 42, '|')).toEqual({\n      a: { b: { c: { d: 42 } } }\n    });\n    expect(setPath({}, 'a.b.c.d', 42, '|')).toEqual({ 'a.b.c.d': 42 });\n  });\n  it('should set the correct values', function () {\n    expect(setPath({}, 'a.b', 42)).toEqual({ a: { b: 42 } });\n    expect(setPath({}, 'a.b', undefined)).toEqual({ a: { b: undefined } });\n    expect(setPath({}, 'a.b', true)).toEqual({ a: { b: true } });\n    expect(setPath({}, 'a.b', 'wow')).toEqual({ a: { b: 'wow' } });\n  });\n  it('should handle arrays as paths', function () {\n    expect(setPath({}, ['a', 'b'], 42)).toEqual({ a: { b: 42 } });\n    expect(setPath({}, ['a', 'b'], undefined)).toEqual({ a: { c: undefined } });\n    expect(setPath({}, ['a', 'b'], true)).toEqual({ a: { b: true } });\n    expect(setPath({}, ['a', 'b'], 'wow')).toEqual({ a: { b: 'wow' } });\n  });\n  it('should be able to be called multiple times', function () {\n    obj = {};\n    obj = setPath(obj, 'a', 42);\n    obj = setPath(obj, 'b', true);\n    obj = setPath(obj, 'c.d', {});\n    obj = setPath(obj, 'c.d.e', {});\n    obj = setPath(obj, 'c.d.f', 'foo');\n    expect(obj).toEqual({ a: 42, b: true, c: { d: { e: {}, f: 'foo' } } });\n  });\n  it('should return the default object when key is not a string or array', function () {\n    var defaultValue = Math.random();\n    [{}, null, 42, undefined, true].forEach(function (path) {\n      expect(setPath(getDefaultObject(), path, defaultValue)).toEqual(\n        getDefaultObject()\n      );\n    });\n  });\n  it('should return the default object when key is an empty array', function () {\n    var defaultValue = Math.random();\n    expect(setPath(obj, [], defaultValue)).toEqual(getDefaultObject());\n  });\n  it('should allow empty strings as a path', function () {\n    var defaultValue = Math.random();\n    var obj2 = getDefaultObject();\n    obj2[''] = defaultValue;\n    expect(setPath(obj, '', defaultValue)).toEqual(obj2);\n  });\n  it('should not pollute __proto__', function () {\n    var obj = {};\n    expect(obj.polluted).toBeUndefined();\n    setPath(obj, '__proto__.polluted', 'yes');\n    var obj2 = {};\n    expect(obj.polluted).toBeUndefined();\n    expect(obj2.polluted).toBeUndefined();\n  });\n  it('should not pollute constructor', function () {\n    var obj = {};\n    expect(obj.polluted).toBeUndefined();\n    setPath(obj, 'constructor.polluted', 'yes');\n    var obj2 = {};\n    expect(obj.polluted).toBeUndefined();\n    expect(obj2.polluted).toBeUndefined();\n  });\n  it('should not pollute prototype', function () {\n    var obj = {};\n    expect(obj.polluted).toBeUndefined();\n    setPath(obj, 'prototype.polluted', 'yes');\n    // eslint-disable-next-line\n    var obj2 = new Object();\n    expect(obj.polluted).toBeUndefined();\n    expect(obj2.polluted).toBeUndefined();\n  });\n});\n</Code>"
                }
            ],
            "url": "https://github.com/skratchdot/object-path-set/commit/2d67a714159c4099589b6661fa84e6d2adc31761",
            "description": "The package object-path-set before 1.0.2 are vulnerable to Prototype Pollution via the setPath method, as it allows an attacker to merge object prototypes into it. *Note:* This vulnerability derives from an incomplete fix in https://security.snyk.io/vuln/SNYK-JS-OBJECTPATHSET-607908",
            "date": "2022-02-04",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-1260\"],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-1260"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2021-23507",
            "ground_truth_CWEs": [
                "CWE-1321"
            ],
            "ground_truth_severities": {
                "V3.1": "CRITICAL"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS  . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\n\"CVSS v3.0 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Pull Request Type\n\n \u2728 feat\n \ud83d\udc1b fix\n \u267b\ufe0f refactor\n \ud83d\udc84 style\n \ud83d\udd28 chore\n \ud83d\udcdd docs\n\nWhat is in this change?\nEnforces normalization of the submitted URLs to not honor relative pathing.\nDeveloper Validations\n\n I ran yarn lint from the root of the repo & committed changes\n Relevant documentation has been updated\n I have tested my code functionality\n Docker build succeeds locally\nFile: server/endpoints/system.js\nContent: \n<Code>\nprocess.env.NODE_ENV === \"development\"\n  ? require(\"dotenv\").config({ path: `.env.${process.env.NODE_ENV}` })\n  : require(\"dotenv\").config();\nconst { viewLocalFiles } = require(\"../utils/files\");\nconst { exportData, unpackAndOverwriteImport } = require(\"../utils/files/data\");\nconst {\n  checkProcessorAlive,\n  acceptedFileTypes,\n} = require(\"../utils/files/documentProcessor\");\nconst { purgeDocument, purgeFolder } = require(\"../utils/files/purgeDocument\");\nconst { getVectorDbClass } = require(\"../utils/helpers\");\nconst { updateENV, dumpENV } = require(\"../utils/helpers/updateENV\");\nconst {\n  reqBody,\n  makeJWT,\n  userFromSession,\n  multiUserMode,\n  queryParams,\n} = require(\"../utils/http\");\nconst {\n  setupDataImports,\n  setupLogoUploads,\n  setupPfpUploads,\n} = require(\"../utils/files/multer\");\nconst { v4 } = require(\"uuid\");\nconst { SystemSettings } = require(\"../models/systemSettings\");\nconst { User } = require(\"../models/user\");\nconst { validatedRequest } = require(\"../utils/middleware/validatedRequest\");\nconst { handleImports } = setupDataImports();\nconst { handleLogoUploads } = setupLogoUploads();\nconst { handlePfpUploads } = setupPfpUploads();\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst {\n  getDefaultFilename,\n  determineLogoFilepath,\n  fetchLogo,\n  validFilename,\n  renameLogoFile,\n  removeCustomLogo,\n  LOGO_FILENAME,\n} = require(\"../utils/files/logo\");\nconst { Telemetry } = require(\"../models/telemetry\");\nconst { WelcomeMessages } = require(\"../models/welcomeMessages\");\nconst { ApiKey } = require(\"../models/apiKeys\");\nconst { getCustomModels } = require(\"../utils/helpers/customModels\");\nconst { WorkspaceChats } = require(\"../models/workspaceChats\");\nconst { Workspace } = require(\"../models/workspace\");\nconst { flexUserRoleValid } = require(\"../utils/middleware/multiUserProtected\");\nconst { fetchPfp, determinePfpFilepath } = require(\"../utils/files/pfp\");\n\nfunction systemEndpoints(app) {\n  if (!app) return;\n\n  app.get(\"/ping\", (_, response) => {\n    response.status(200).json({ online: true });\n  });\n\n  app.get(\"/migrate\", async (_, response) => {\n    const execSync = require(\"child_process\").execSync;\n    execSync(\"npx prisma migrate deploy --schema=./prisma/schema.prisma\", {\n      stdio: \"inherit\",\n    });\n    response.sendStatus(200);\n  });\n\n  app.get(\"/env-dump\", async (_, response) => {\n    if (process.env.NODE_ENV !== \"production\")\n      return response.sendStatus(200).end();\n    await dumpENV();\n    response.sendStatus(200).end();\n  });\n\n  app.get(\"/setup-complete\", async (_, response) => {\n    try {\n      const results = await SystemSettings.currentSettings();\n      response.status(200).json({ results });\n    } catch (e) {\n      console.log(e.message, e);\n      response.sendStatus(500).end();\n    }\n  });\n\n  app.get(\n    \"/system/check-token\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        if (multiUserMode(response)) {\n          const user = await userFromSession(request, response);\n          if (!user || user.suspended) {\n            response.sendStatus(403).end();\n            return;\n          }\n\n          response.sendStatus(200).end();\n          return;\n        }\n\n        response.sendStatus(200).end();\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.post(\"/request-token\", async (request, response) => {\n    try {\n      const bcrypt = require(\"bcrypt\");\n\n      if (await SystemSettings.isMultiUserMode()) {\n        const { username, password } = reqBody(request);\n        const existingUser = await User.get({ username });\n\n        if (!existingUser) {\n          response.status(200).json({\n            user: null,\n            valid: false,\n            token: null,\n            message: \"[001] Invalid login credentials.\",\n          });\n          return;\n        }\n\n        if (!bcrypt.compareSync(password, existingUser.password)) {\n          response.status(200).json({\n            user: null,\n            valid: false,\n            token: null,\n            message: \"[002] Invalid login credentials.\",\n          });\n          return;\n        }\n\n        if (existingUser.suspended) {\n          response.status(200).json({\n            user: null,\n            valid: false,\n            token: null,\n            message: \"[004] Account suspended by admin.\",\n          });\n          return;\n        }\n\n        await Telemetry.sendTelemetry(\n          \"login_event\",\n          { multiUserMode: false },\n          existingUser?.id\n        );\n        response.status(200).json({\n          valid: true,\n          user: existingUser,\n          token: makeJWT(\n            { id: existingUser.id, username: existingUser.username },\n            \"30d\"\n          ),\n          message: null,\n        });\n        return;\n      } else {\n        const { password } = reqBody(request);\n        if (\n          !bcrypt.compareSync(\n            password,\n            bcrypt.hashSync(process.env.AUTH_TOKEN, 10)\n          )\n        ) {\n          response.status(401).json({\n            valid: false,\n            token: null,\n            message: \"[003] Invalid password provided\",\n          });\n          return;\n        }\n\n        await Telemetry.sendTelemetry(\"login_event\", { multiUserMode: false });\n        response.status(200).json({\n          valid: true,\n          token: makeJWT({ p: password }, \"30d\"),\n          message: null,\n        });\n      }\n    } catch (e) {\n      console.log(e.message, e);\n      response.sendStatus(500).end();\n    }\n  });\n\n  app.get(\n    \"/system/system-vectors\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        const query = queryParams(request);\n        const VectorDb = getVectorDbClass();\n        const vectorCount = !!query.slug\n          ? await VectorDb.namespaceCount(query.slug)\n          : await VectorDb.totalVectors();\n        response.status(200).json({ vectorCount });\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.delete(\n    \"/system/remove-document\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        const { name } = reqBody(request);\n        await purgeDocument(name);\n        response.sendStatus(200).end();\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.delete(\n    \"/system/remove-folder\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        const { name } = reqBody(request);\n        await purgeFolder(name);\n        response.sendStatus(200).end();\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.get(\"/system/local-files\", [validatedRequest], async (_, response) => {\n    try {\n      const localFiles = await viewLocalFiles();\n      response.status(200).json({ localFiles });\n    } catch (e) {\n      console.log(e.message, e);\n      response.sendStatus(500).end();\n    }\n  });\n\n  app.get(\n    \"/system/document-processing-status\",\n    [validatedRequest],\n    async (_, response) => {\n      try {\n        const online = await checkProcessorAlive();\n        response.sendStatus(online ? 200 : 503);\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.get(\n    \"/system/accepted-document-types\",\n    [validatedRequest],\n    async (_, response) => {\n      try {\n        const types = await acceptedFileTypes();\n        if (!types) {\n          response.sendStatus(404).end();\n          return;\n        }\n\n        response.status(200).json({ types });\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.post(\n    \"/system/update-env\",\n    [validatedRequest, flexUserRoleValid],\n    async (request, response) => {\n      try {\n        const user = await userFromSession(request, response);\n        if (!!user && user.role !== \"admin\") {\n          response.sendStatus(401).end();\n          return;\n        }\n\n        const body = reqBody(request);\n        const { newValues, error } = updateENV(body);\n        if (process.env.NODE_ENV === \"production\") await dumpENV();\n        response.status(200).json({ newValues, error });\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.post(\n    \"/system/update-password\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        // Cannot update password in multi - user mode.\n        if (multiUserMode(response)) {\n          response.sendStatus(401).end();\n          return;\n        }\n\n        const { usePassword, newPassword } = reqBody(request);\n        const { error } = updateENV(\n          {\n            AuthToken: usePassword ? newPassword : \"\",\n            JWTSecret: usePassword ? v4() : \"\",\n          },\n          true\n        );\n        if (process.env.NODE_ENV === \"production\") await dumpENV();\n        response.status(200).json({ success: !error, error });\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.post(\n    \"/system/enable-multi-user\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        const { username, password } = reqBody(request);\n        const multiUserModeEnabled = await SystemSettings.isMultiUserMode();\n        if (multiUserModeEnabled) {\n          response.status(200).json({\n            success: false,\n            error: \"Multi-user mode is already enabled.\",\n          });\n          return;\n        }\n\n        const { user, error } = await User.create({\n          username,\n          password,\n          role: \"admin\",\n        });\n        await SystemSettings.updateSettings({\n          multi_user_mode: true,\n          users_can_delete_workspaces: false,\n          limit_user_messages: false,\n          message_limit: 25,\n        });\n\n        updateENV(\n          {\n            AuthToken: \"\",\n            JWTSecret: process.env.JWT_SECRET || v4(),\n          },\n          true\n        );\n        if (process.env.NODE_ENV === \"production\") await dumpENV();\n        await Telemetry.sendTelemetry(\"enabled_multi_user_mode\", {\n          multiUserMode: true,\n        });\n        response.status(200).json({ success: !!user, error });\n      } catch (e) {\n        await User.delete({});\n        await SystemSettings.updateSettings({\n          multi_user_mode: false,\n        });\n\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.get(\"/system/multi-user-mode\", async (request, response) => {\n    try {\n      const multiUserMode = await SystemSettings.isMultiUserMode();\n      response.status(200).json({ multiUserMode });\n    } catch (e) {\n      console.log(e.message, e);\n      response.sendStatus(500).end();\n    }\n  });\n\n  app.get(\"/system/data-export\", [validatedRequest], async (_, response) => {\n    try {\n      const { filename, error } = await exportData();\n      response.status(200).json({ filename, error });\n    } catch (e) {\n      console.log(e.message, e);\n      response.sendStatus(500).end();\n    }\n  });\n\n  app.get(\"/system/data-exports/:filename\", (request, response) => {\n    const exportLocation = __dirname + \"/../storage/exports/\";\n    const sanitized = path\n      .normalize(request.params.filename)\n      .replace(/^(\\.\\.(\\/|\\\\|$))+/, \"\");\n    const finalDestination = path.join(exportLocation, sanitized);\n\n    if (!fs.existsSync(finalDestination)) {\n      response.status(404).json({\n        error: 404,\n        msg: `File ${request.params.filename} does not exist in exports.`,\n      });\n      return;\n    }\n\n    response.download(finalDestination, request.params.filename, (err) => {\n      if (err) {\n        response.send({\n          error: err,\n          msg: \"Problem downloading the file\",\n        });\n      }\n      // delete on download because endpoint is not authenticated.\n      fs.rmSync(finalDestination);\n    });\n  });\n\n  app.post(\n    \"/system/data-import\",\n    handleImports.single(\"file\"),\n    async function (request, response) {\n      const { originalname } = request.file;\n      const { success, error } = await unpackAndOverwriteImport(originalname);\n      response.status(200).json({ success, error });\n    }\n  );\n\n  app.get(\"/system/logo\", async function (request, response) {\n    try {\n      const defaultFilename = getDefaultFilename();\n      const logoPath = await determineLogoFilepath(defaultFilename);\n      const { found, buffer, size, mime } = fetchLogo(logoPath);\n      if (!found) {\n        response.sendStatus(204).end();\n        return;\n      }\n\n      response.writeHead(200, {\n        \"Content-Type\": mime || \"image/png\",\n        \"Content-Disposition\": `attachment; filename=${path.basename(\n          logoPath\n        )}`,\n        \"Content-Length\": size,\n      });\n      response.end(Buffer.from(buffer, \"base64\"));\n      return;\n    } catch (error) {\n      console.error(\"Error processing the logo request:\", error);\n      response.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.get(\"/system/pfp/:id\", async function (request, response) {\n    try {\n      const { id } = request.params;\n      const pfpPath = await determinePfpFilepath(id);\n\n      if (!pfpPath) {\n        response.sendStatus(204).end();\n        return;\n      }\n\n      const { found, buffer, size, mime } = fetchPfp(pfpPath);\n      if (!found) {\n        response.sendStatus(204).end();\n        return;\n      }\n\n      response.writeHead(200, {\n        \"Content-Type\": mime || \"image/png\",\n        \"Content-Disposition\": `attachment; filename=${path.basename(pfpPath)}`,\n        \"Content-Length\": size,\n      });\n      response.end(Buffer.from(buffer, \"base64\"));\n      return;\n    } catch (error) {\n      console.error(\"Error processing the logo request:\", error);\n      response.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.post(\n    \"/system/upload-pfp\",\n    [validatedRequest, flexUserRoleValid],\n    handlePfpUploads.single(\"file\"),\n    async function (request, response) {\n      try {\n        const user = await userFromSession(request, response);\n        const uploadedFileName = request.randomFileName;\n\n        if (!uploadedFileName) {\n          return response.status(400).json({ message: \"File upload failed.\" });\n        }\n\n        const userRecord = await User.get({ id: user.id });\n        const oldPfpFilename = userRecord.pfpFilename;\n        console.log(\"oldPfpFilename\", oldPfpFilename);\n        if (oldPfpFilename) {\n          const oldPfpPath = path.join(\n            __dirname,\n            `../storage/assets/pfp/${oldPfpFilename}`\n          );\n\n          if (fs.existsSync(oldPfpPath)) fs.unlinkSync(oldPfpPath);\n        }\n\n        const { success, error } = await User.update(user.id, {\n          pfpFilename: uploadedFileName,\n        });\n\n        return response.status(success ? 200 : 500).json({\n          message: success\n            ? \"Profile picture uploaded successfully.\"\n            : error || \"Failed to update with new profile picture.\",\n        });\n      } catch (error) {\n        console.error(\"Error processing the profile picture upload:\", error);\n        response.status(500).json({ message: \"Internal server error\" });\n      }\n    }\n  );\n\n  app.delete(\n    \"/system/remove-pfp\",\n    [validatedRequest, flexUserRoleValid],\n    async function (request, response) {\n      try {\n        const user = await userFromSession(request, response);\n        const userRecord = await User.get({ id: user.id });\n        const oldPfpFilename = userRecord.pfpFilename;\n        console.log(\"oldPfpFilename\", oldPfpFilename);\n        if (oldPfpFilename) {\n          const oldPfpPath = path.join(\n            __dirname,\n            `../storage/assets/pfp/${oldPfpFilename}`\n          );\n\n          if (fs.existsSync(oldPfpPath)) fs.unlinkSync(oldPfpPath);\n        }\n\n        const { success, error } = await User.update(user.id, {\n          pfpFilename: null,\n        });\n\n        return response.status(success ? 200 : 500).json({\n          message: success\n            ? \"Profile picture removed successfully.\"\n            : error || \"Failed to remove profile picture.\",\n        });\n      } catch (error) {\n        console.error(\"Error processing the profile picture removal:\", error);\n        response.status(500).json({ message: \"Internal server error\" });\n      }\n    }\n  );\n\n  app.post(\n    \"/system/upload-logo\",\n    [validatedRequest, flexUserRoleValid],\n    handleLogoUploads.single(\"logo\"),\n    async (request, response) => {\n      if (!request.file || !request.file.originalname) {\n        return response.status(400).json({ message: \"No logo file provided.\" });\n      }\n\n      if (!validFilename(request.file.originalname)) {\n        return response.status(400).json({\n          message: \"Invalid file name. Please choose a different file.\",\n        });\n      }\n\n      try {\n        const newFilename = await renameLogoFile(request.file.originalname);\n        const existingLogoFilename = await SystemSettings.currentLogoFilename();\n        await removeCustomLogo(existingLogoFilename);\n\n        const { success, error } = await SystemSettings.updateSettings({\n          logo_filename: newFilename,\n        });\n\n        return response.status(success ? 200 : 500).json({\n          message: success\n            ? \"Logo uploaded successfully.\"\n            : error || \"Failed to update with new logo.\",\n        });\n      } catch (error) {\n        console.error(\"Error processing the logo upload:\", error);\n        response.status(500).json({ message: \"Error uploading the logo.\" });\n      }\n    }\n  );\n\n  app.get(\"/system/is-default-logo\", async (request, response) => {\n    try {\n      const currentLogoFilename = await SystemSettings.currentLogoFilename();\n      const isDefaultLogo = currentLogoFilename === LOGO_FILENAME;\n      response.status(200).json({ isDefaultLogo });\n    } catch (error) {\n      console.error(\"Error processing the logo request:\", error);\n      response.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.get(\n    \"/system/remove-logo\",\n    [validatedRequest, flexUserRoleValid],\n    async (_request, response) => {\n      try {\n        const currentLogoFilename = await SystemSettings.currentLogoFilename();\n        await removeCustomLogo(currentLogoFilename);\n        const { success, error } = await SystemSettings.updateSettings({\n          logo_filename: LOGO_FILENAME,\n        });\n\n        return response.status(success ? 200 : 500).json({\n          message: success\n            ? \"Logo removed successfully.\"\n            : error || \"Failed to update with new logo.\",\n        });\n      } catch (error) {\n        console.error(\"Error processing the logo removal:\", error);\n        response.status(500).json({ message: \"Error removing the logo.\" });\n      }\n    }\n  );\n\n  app.get(\n    \"/system/can-delete-workspaces\",\n    [validatedRequest],\n    async function (request, response) {\n      try {\n        if (!response.locals.multiUserMode) {\n          return response.status(200).json({ canDelete: true });\n        }\n\n        const user = await userFromSession(request, response);\n        if ([\"admin\", \"manager\"].includes(user?.role)) {\n          return response.status(200).json({ canDelete: true });\n        }\n\n        const canDelete = await SystemSettings.canDeleteWorkspaces();\n        response.status(200).json({ canDelete });\n      } catch (error) {\n        console.error(\"Error fetching can delete workspaces:\", error);\n        response.status(500).json({\n          success: false,\n          message: \"Internal server error\",\n          canDelete: false,\n        });\n      }\n    }\n  );\n\n  app.get(\"/system/welcome-messages\", async function (request, response) {\n    try {\n      const welcomeMessages = await WelcomeMessages.getMessages();\n      response.status(200).json({ success: true, welcomeMessages });\n    } catch (error) {\n      console.error(\"Error fetching welcome messages:\", error);\n      response\n        .status(500)\n        .json({ success: false, message: \"Internal server error\" });\n    }\n  });\n\n  app.post(\n    \"/system/set-welcome-messages\",\n    [validatedRequest, flexUserRoleValid],\n    async (request, response) => {\n      try {\n        const { messages = [] } = reqBody(request);\n        if (!Array.isArray(messages)) {\n          return response.status(400).json({\n            success: false,\n            message: \"Invalid message format. Expected an array of messages.\",\n          });\n        }\n\n        await WelcomeMessages.saveAll(messages);\n        return response.status(200).json({\n          success: true,\n          message: \"Welcome messages saved successfully.\",\n        });\n      } catch (error) {\n        console.error(\"Error processing the welcome messages:\", error);\n        response.status(500).json({\n          success: true,\n          message: \"Error saving the welcome messages.\",\n        });\n      }\n    }\n  );\n\n  app.get(\"/system/api-keys\", [validatedRequest], async (_, response) => {\n    try {\n      if (response.locals.multiUserMode) {\n        return response.sendStatus(401).end();\n      }\n\n      const apiKeys = await ApiKey.where({});\n      return response.status(200).json({\n        apiKeys,\n        error: null,\n      });\n    } catch (error) {\n      console.error(error);\n      response.status(500).json({\n        apiKey: null,\n        error: \"Could not find an API Key.\",\n      });\n    }\n  });\n\n  app.post(\n    \"/system/generate-api-key\",\n    [validatedRequest],\n    async (_, response) => {\n      try {\n        if (response.locals.multiUserMode) {\n          return response.sendStatus(401).end();\n        }\n\n        const { apiKey, error } = await ApiKey.create();\n        return response.status(200).json({\n          apiKey,\n          error,\n        });\n      } catch (error) {\n        console.error(error);\n        response.status(500).json({\n          apiKey: null,\n          error: \"Error generating api key.\",\n        });\n      }\n    }\n  );\n\n  app.delete(\"/system/api-key\", [validatedRequest], async (_, response) => {\n    try {\n      if (response.locals.multiUserMode) {\n        return response.sendStatus(401).end();\n      }\n\n      await ApiKey.delete();\n      return response.status(200).end();\n    } catch (error) {\n      console.error(error);\n      response.status(500).end();\n    }\n  });\n\n  app.post(\n    \"/system/custom-models\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        const { provider, apiKey = null, basePath = null } = reqBody(request);\n        const { models, error } = await getCustomModels(\n          provider,\n          apiKey,\n          basePath\n        );\n        return response.status(200).json({\n          models,\n          error,\n        });\n      } catch (error) {\n        console.error(error);\n        response.status(500).end();\n      }\n    }\n  );\n\n  app.post(\n    \"/system/workspace-chats\",\n    [validatedRequest, flexUserRoleValid],\n    async (request, response) => {\n      try {\n        const { offset = 0, limit = 20 } = reqBody(request);\n        const chats = await WorkspaceChats.whereWithData(\n          {},\n          limit,\n          offset * limit,\n          { id: \"desc\" }\n        );\n        const totalChats = await WorkspaceChats.count();\n        const hasPages = totalChats > (offset + 1) * limit;\n\n        response.status(200).json({ chats: chats, hasPages, totalChats });\n      } catch (e) {\n        console.error(e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.delete(\n    \"/system/workspace-chats/:id\",\n    [validatedRequest, flexUserRoleValid],\n    async (request, response) => {\n      try {\n        const { id } = request.params;\n        await WorkspaceChats.delete({ id: Number(id) });\n        response.sendStatus(200).end();\n      } catch (e) {\n        console.error(e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.get(\n    \"/system/export-chats\",\n    [validatedRequest, flexUserRoleValid],\n    async (_request, response) => {\n      try {\n        const chats = await WorkspaceChats.whereWithData({}, null, null, {\n          id: \"asc\",\n        });\n        const workspaceIds = [\n          ...new Set(chats.map((chat) => chat.workspaceId)),\n        ];\n\n        const workspacesWithPrompts = await Promise.all(\n          workspaceIds.map((id) => Workspace.get({ id: Number(id) }))\n        );\n\n        const workspacePromptsMap = workspacesWithPrompts.reduce(\n          (acc, workspace) => {\n            acc[workspace.id] = workspace.openAiPrompt;\n            return acc;\n          },\n          {}\n        );\n\n        const workspaceChatsMap = chats.reduce((acc, chat) => {\n          const { prompt, response, workspaceId } = chat;\n          const responseJson = JSON.parse(response);\n\n          if (!acc[workspaceId]) {\n            acc[workspaceId] = {\n              messages: [\n                {\n                  role: \"system\",\n                  content:\n                    workspacePromptsMap[workspaceId] ||\n                    \"Given the following conversation, relevant context, and a follow up question, reply with an answer to the current question the user is asking. Return only your response to the question given the above information following the users instructions as needed.\",\n                },\n              ],\n            };\n          }\n\n          acc[workspaceId].messages.push(\n            {\n              role: \"user\",\n              content: prompt,\n            },\n            {\n              role: \"assistant\",\n              content: responseJson.text,\n            }\n          );\n\n          return acc;\n        }, {});\n\n        // Convert to JSONL\n        const jsonl = Object.values(workspaceChatsMap)\n          .map((workspaceChats) => JSON.stringify(workspaceChats))\n          .join(\"\\n\");\n\n        response.setHeader(\"Content-Type\", \"application/jsonl\");\n        response.status(200).send(jsonl);\n      } catch (e) {\n        console.error(e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.post(\"/system/user\", [validatedRequest], async (request, response) => {\n    try {\n      const sessionUser = await userFromSession(request, response);\n      const { username, password } = reqBody(request);\n      const id = Number(sessionUser.id);\n\n      if (!id) {\n        response.status(400).json({ success: false, error: \"Invalid user ID\" });\n        return;\n      }\n\n      const updates = {};\n      if (username) {\n        updates.username = username;\n      }\n      if (password) {\n        updates.password = password;\n      }\n\n      if (Object.keys(updates).length === 0) {\n        response\n          .status(400)\n          .json({ success: false, error: \"No updates provided\" });\n        return;\n      }\n\n      const { success, error } = await User.update(id, updates);\n      response.status(200).json({ success, error });\n    } catch (e) {\n      console.error(e);\n      response.sendStatus(500).end();\n    }\n  });\n}\n\nmodule.exports = { systemEndpoints };\n</Code>\n\nFile: server/utils/files/index.js\nContent: \n<Code>\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst { v5: uuidv5 } = require(\"uuid\");\n\nasync function collectDocumentData(folderName = null) {\n  if (!folderName) throw new Error(\"No docPath provided in request\");\n  const folder =\n    process.env.NODE_ENV === \"development\"\n      ? path.resolve(__dirname, `../../storage/documents/${folderName}`)\n      : path.resolve(process.env.STORAGE_DIR, `documents/${folderName}`);\n\n  const dirExists = fs.existsSync(folder);\n  if (!dirExists)\n    throw new Error(\n      `No documents folder for ${folderName} - did you run collector/main.py for this element?`\n    );\n\n  const files = fs.readdirSync(folder);\n  const fileData = [];\n  files.forEach((file) => {\n    if (path.extname(file) === \".json\") {\n      const filePath = path.join(folder, file);\n      const data = fs.readFileSync(filePath, \"utf8\");\n      console.log(`Parsing document: ${file}`);\n      fileData.push(JSON.parse(data));\n    }\n  });\n  return fileData;\n}\n\n// Should take in a folder that is a subfolder of documents\n// eg: youtube-subject/video-123.json\nasync function fileData(filePath = null) {\n  if (!filePath) throw new Error(\"No docPath provided in request\");\n\n  const fullPath =\n    process.env.NODE_ENV === \"development\"\n      ? path.resolve(__dirname, `../../storage/documents/${filePath}`)\n      : path.resolve(process.env.STORAGE_DIR, `documents/${filePath}`);\n  const fileExists = fs.existsSync(fullPath);\n  if (!fileExists) return null;\n\n  const data = fs.readFileSync(fullPath, \"utf8\");\n  return JSON.parse(data);\n}\n\nasync function viewLocalFiles() {\n  const folder =\n    process.env.NODE_ENV === \"development\"\n      ? path.resolve(__dirname, `../../storage/documents`)\n      : path.resolve(process.env.STORAGE_DIR, `documents`);\n  const dirExists = fs.existsSync(folder);\n  if (!dirExists) fs.mkdirSync(folder);\n\n  const directory = {\n    name: \"documents\",\n    type: \"folder\",\n    items: [],\n  };\n\n  for (const file of fs.readdirSync(folder)) {\n    if (path.extname(file) === \".md\") continue;\n\n    const folderPath =\n      process.env.NODE_ENV === \"development\"\n        ? path.resolve(__dirname, `../../storage/documents/${file}`)\n        : path.resolve(process.env.STORAGE_DIR, `documents/${file}`);\n\n    const isFolder = fs.lstatSync(folderPath).isDirectory();\n    if (isFolder) {\n      const subdocs = {\n        name: file,\n        type: \"folder\",\n        items: [],\n      };\n      const subfiles = fs.readdirSync(folderPath);\n\n      for (const subfile of subfiles) {\n        if (path.extname(subfile) !== \".json\") continue;\n        const filePath = path.join(folderPath, subfile);\n        const rawData = fs.readFileSync(filePath, \"utf8\");\n        const cachefilename = `${file}/${subfile}`;\n        const { pageContent, ...metadata } = JSON.parse(rawData);\n\n        subdocs.items.push({\n          name: subfile,\n          type: \"file\",\n          ...metadata,\n          cached: await cachedVectorInformation(cachefilename, true),\n        });\n      }\n      directory.items.push(subdocs);\n    }\n  }\n\n  return directory;\n}\n\n// Searches the vector-cache folder for existing information so we dont have to re-embed a\n// document and can instead push directly to vector db.\nasync function cachedVectorInformation(filename = null, checkOnly = false) {\n  if (!filename) return checkOnly ? false : { exists: false, chunks: [] };\n\n  const digest = uuidv5(filename, uuidv5.URL);\n  const file =\n    process.env.NODE_ENV === \"development\"\n      ? path.resolve(__dirname, `../../storage/vector-cache/${digest}.json`)\n      : path.resolve(process.env.STORAGE_DIR, `vector-cache/${digest}.json`);\n  const exists = fs.existsSync(file);\n\n  if (checkOnly) return exists;\n  if (!exists) return { exists, chunks: [] };\n\n  console.log(\n    `Cached vectorized results of ${filename} found! Using cached data to save on embed costs.`\n  );\n  const rawData = fs.readFileSync(file, \"utf8\");\n  return { exists: true, chunks: JSON.parse(rawData) };\n}\n\n// vectorData: pre-chunked vectorized data for a given file that includes the proper metadata and chunk-size limit so it can be iterated and dumped into Pinecone, etc\n// filename is the fullpath to the doc so we can compare by filename to find cached matches.\nasync function storeVectorResult(vectorData = [], filename = null) {\n  if (!filename) return;\n  console.log(\n    `Caching vectorized results of ${filename} to prevent duplicated embedding.`\n  );\n  const folder =\n    process.env.NODE_ENV === \"development\"\n      ? path.resolve(__dirname, `../../storage/vector-cache`)\n      : path.resolve(process.env.STORAGE_DIR, `vector-cache`);\n\n  if (!fs.existsSync(folder)) fs.mkdirSync(folder);\n\n  const digest = uuidv5(filename, uuidv5.URL);\n  const writeTo = path.resolve(folder, `${digest}.json`);\n  fs.writeFileSync(writeTo, JSON.stringify(vectorData), \"utf8\");\n  return;\n}\n\n// Purges a file from the documents/ folder.\nasync function purgeSourceDocument(filename = null) {\n  if (!filename) return;\n  console.log(`Purging source document of ${filename}.`);\n\n  const filePath =\n    process.env.NODE_ENV === \"development\"\n      ? path.resolve(__dirname, `../../storage/documents`, filename)\n      : path.resolve(process.env.STORAGE_DIR, `documents`, filename);\n\n  if (!fs.existsSync(filePath)) return;\n  fs.rmSync(filePath);\n  return;\n}\n\n// Purges a vector-cache file from the vector-cache/ folder.\nasync function purgeVectorCache(filename = null) {\n  if (!filename) return;\n  console.log(`Purging vector-cache of ${filename}.`);\n\n  const digest = uuidv5(filename, uuidv5.URL);\n  const filePath =\n    process.env.NODE_ENV === \"development\"\n      ? path.resolve(__dirname, `../../storage/vector-cache`, `${digest}.json`)\n      : path.resolve(process.env.STORAGE_DIR, `vector-cache`, `${digest}.json`);\n\n  if (!fs.existsSync(filePath)) return;\n  fs.rmSync(filePath);\n  return;\n}\n\nmodule.exports = {\n  cachedVectorInformation,\n  collectDocumentData,\n  viewLocalFiles,\n  purgeSourceDocument,\n  purgeVectorCache,\n  storeVectorResult,\n  fileData,\n};\n</Code>\n\nFile: server/utils/files/purgeDocument.js\nContent: \n<Code>\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nconst { purgeVectorCache, purgeSourceDocument } = require(\".\");\nconst { Document } = require(\"../../models/documents\");\nconst { Workspace } = require(\"../../models/workspace\");\n\nasync function purgeDocument(filename) {\n  const workspaces = await Workspace.where();\n  for (const workspace of workspaces) {\n    await Document.removeDocuments(workspace, [filename]);\n  }\n  await purgeVectorCache(filename);\n  await purgeSourceDocument(filename);\n  return;\n}\n\nasync function purgeFolder(folderName) {\n  if (folderName === \"custom-documents\") return;\n  const documentsFolder =\n    process.env.NODE_ENV === \"development\"\n      ? path.resolve(__dirname, `../../storage/documents`)\n      : path.resolve(process.env.STORAGE_DIR, `documents`);\n\n  const folderPath = path.resolve(documentsFolder, folderName);\n  const filenames = fs\n    .readdirSync(folderPath)\n    .map((file) => path.join(folderName, file));\n  const workspaces = await Workspace.where();\n\n  const purgePromises = [];\n  // Remove associated Vector-cache files\n  for (const filename of filenames) {\n    const rmVectorCache = () =>\n      new Promise((resolve) =>\n        purgeVectorCache(filename).then(() => resolve(true))\n      );\n    purgePromises.push(rmVectorCache);\n  }\n\n  // Remove workspace document associations\n  for (const workspace of workspaces) {\n    const rmWorkspaceDoc = () =>\n      new Promise((resolve) =>\n        Document.removeDocuments(workspace, filenames).then(() => resolve(true))\n      );\n    purgePromises.push(rmWorkspaceDoc);\n  }\n\n  await Promise.all(purgePromises.flat().map((f) => f()));\n  fs.rmSync(folderPath, { recursive: true }); // Delete root document and source files.\n\n  return;\n}\n\nmodule.exports = {\n  purgeDocument,\n  purgeFolder,\n};\n</Code>"
                }
            ],
            "url": "https://github.com/mintplex-labs/anything-llm/commit/026849df0224b6a8754f4103530bc015874def62",
            "description": "mintplex-labs/anything-llm is vulnerable to a relative path traversal attack, allowing unauthorized attackers with a default role account to delete files and folders within the filesystem, including critical database files such as 'anythingllm.db'. The vulnerability stems from insufficient input validation and normalization in the handling of file and folder deletion requests. Successful exploitation results in the compromise of data integrity and availability.",
            "date": "2024-04-16",
            "github_description": "Pull Request Type\n\n \u2728 feat\n \ud83d\udc1b fix\n \u267b\ufe0f refactor\n \ud83d\udc84 style\n \ud83d\udd28 chore\n \ud83d\udcdd docs\n\nWhat is in this change?\nEnforces normalization of the submitted URLs to not honor relative pathing.\nDeveloper Validations\n\n I ran yarn lint from the root of the repo & committed changes\n Relevant documentation has been updated\n I have tested my code functionality\n Docker build succeeds locally",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-601\"],\n  \"severity\": \"low\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-601"
                ],
                "severity": "LOW"
            },
            "ground_truth_CVE": "CVE-2024-0549",
            "ground_truth_CWEs": [
                "CWE-23"
            ],
            "ground_truth_severities": {},
            "ground_truth_CVSS_version": [],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: TurboWarp is a desktop application that compiles scratch projects to JavaScript. TurboWarp Desktop versions prior to version 1.8.0 allowed a malicious project or custom extension to read arbitrary files from disk and upload them to a remote server. The only required user interaction is opening the sb3 file or loading the extension. The web version of TurboWarp is not affected. This bug has been addressed in commit `55e07e99b59` after an initial fix which was reverted. Users are advised to upgrade to version 1.8.0 or later. Users unable to upgrade should avoid opening sb3 files or loading extensions from untrusted sources.\nFile: src/main/extensions.js\nContent: \n<Code>\nimport {app, protocol} from 'electron';\nimport pathUtil from 'path';\nimport {staticDir} from './environment';\n\nconst extensionDirectory = pathUtil.join(staticDir, 'extensions.turbowarp.org', '/');\n\napp.on('session-created', (session) => {\n  session.webRequest.onBeforeRequest({\n    urls: ['https://extensions.turbowarp.org/*']\n  }, (details, callback) => {\n    const path = new URL(details.url).pathname;\n    callback({\n      redirectURL: `tw-extensions://${path}`\n    });\n  });\n});\n\napp.whenReady().then(() => {\n  protocol.registerFileProtocol('tw-extensions', (request, callback) => {\n    const pathAndQuery = request.url.substring('tw-extensions://'.length);\n    const path = pathAndQuery.split('?')[0];\n    const staticPath = pathUtil.join(extensionDirectory, path);\n\n    if (!staticPath.startsWith(extensionDirectory)) {\n      callback({\n        statusCode: 404\n      });\n      return;\n    }\n\n    callback(pathUtil.resolve(staticPath));\n  });\n});\n</Code>\n\nFile: src/main/index.js\nContent: \n<Code>\nimport {app, BrowserWindow, Menu, ipcMain, shell, dialog, clipboard, screen, net, session} from 'electron'\nimport pathUtil from 'path'\nimport fs from 'fs';\nimport util from 'util';\nimport {format as formatUrl} from 'url';\nimport zlib from 'zlib';\nimport checkForUpdate from './update-checker';\nimport {getTranslation, getTranslationOrNull} from './translations';\nimport {APP_NAME, EXTENSION_GALLERY_NAME, PACKAGER_NAME} from './brand';\nimport './advanced-user-customizations';\nimport * as store from './store';\nimport './crash';\nimport parseArgs from './parse-args';\nimport {isDevelopment, isMac, isLinux, staticDir} from './environment';\nimport './library-files';\nimport './user-agent';\nimport './hardware-acceleration';\nimport './get-debug-info';\nimport {handlePermissionRequest} from './permissions';\nimport './detect-arm-translation';\nimport {isBackgroundThrottlingEnabled, whenBackgroundThrottlingChanged} from './background-throttling';\nimport './extensions';\nimport {createAtomicWriteStream, writeFileAtomic} from './atomic-file-write-stream';\nimport './protocols';\n\nconst readFile = util.promisify(fs.readFile);\nconst brotliDecompress = util.promisify(zlib.brotliDecompress);\n\nconst filesToOpen = [];\n\nconst editorWindows = new Set();\nlet aboutWindow = null;\nlet addonSettingsWindow = null;\nlet privacyWindow = null;\nlet desktopSettingsWindow = null;\nconst dataWindows = new Set();\nconst extensionWindows = new Set();\nconst closeAllNonEditorWindows = () => [\n  aboutWindow,\n  addonSettingsWindow,\n  privacyWindow,\n  desktopSettingsWindow,\n  ...dataWindows,\n  ...extensionWindows\n].filter((i) => i).forEach((i) => i.close())\n\nconst allowedToAccessFiles = new Set();\n\nconst isSafeOpenExternal = (url) => {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.protocol === 'https:' || parsedUrl.protocol === 'http:';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n};\n\nconst isDataURL = (url) => {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.protocol === 'data:';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n};\n\nconst isExtensionURL = (url) => url === 'https://extensions.turbowarp.org/';\n\nconst defaultWindowOpenHandler = (details) => {\n  if (isSafeOpenExternal(details.url)) {\n    setImmediate(() => {\n      shell.openExternal(details.url);\n    });\n  } else if (isDataURL(details.url)) {\n    createDataWindow(details.url);\n  }\n  return {\n    action: 'deny'\n  }\n};\n\nif (isMac) {\n  Menu.setApplicationMenu(Menu.buildFromTemplate([\n    { role: 'appMenu' },\n    {\n      role: 'fileMenu',\n      submenu: [\n        { role: 'quit' },\n        {\n          label: getTranslation('menu.new-window'),\n          accelerator: 'Cmd+N',\n          click: () => {\n            createEditorWindow();\n          }\n        }\n      ]\n    },\n    { role: 'editMenu' },\n    { role: 'viewMenu' },\n    { role: 'windowMenu' },\n    {\n      role: 'help',\n      submenu: [\n        {\n          label: getTranslation('menu.learn-more'),\n          click: () => shell.openExternal('https://desktop.turbowarp.org/')\n        }\n      ]\n    }\n  ]));\n} else {\n  Menu.setApplicationMenu(null);\n}\n\nconst getURL = (route) => {\n  if (isDevelopment) {\n    return `http://localhost:${process.env.ELECTRON_WEBPACK_WDS_PORT}/?route=${route}`;\n  }\n  return formatUrl({\n    pathname: pathUtil.join(__dirname, 'index.html'),\n    protocol: 'file',\n    search: `route=${route}`,\n    slashes: true\n  });\n};\n\nconst closeWindowWhenPressEscape = (window) => {\n  window.webContents.on('before-input-event', (e, input) => {\n    if (\n      input.type === 'keyDown' &&\n      input.key === 'Escape' &&\n      !input.control &&\n      !input.alt &&\n      !input.meta &&\n      !input.isAutoRepeat &&\n      !input.isComposing &&\n      // set by logic in web-contents-created\n      !e.didJustLeaveFullScreen\n    ) {\n      window.close();\n    }\n  });\n};\n\nconst getWindowOptions = (options) => {\n  if (isLinux) {\n    options.icon = pathUtil.join(staticDir, 'icon.png');\n  }\n  options.useContentSize = true;\n  options.minWidth = 200;\n  options.minHeight = 200;\n  options.webPreferences ||= {};\n  if (typeof options.webPreferences.preload === 'undefined') {\n    // only undefined should be replaced as null is interpreted as \"no preload script\"\n    options.webPreferences.preload = pathUtil.resolve(__dirname, 'preload.js')\n  }\n\n  const activeScreen = screen.getDisplayNearestPoint(screen.getCursorScreenPoint());\n  const bounds = activeScreen.workArea;\n\n  options.width = Math.min(bounds.width, options.width);\n  options.height = Math.min(bounds.height, options.height);\n\n  options.x = bounds.x + ((bounds.width - options.width) / 2);\n  options.y = bounds.y + ((bounds.height - options.height) / 2);\n\n  return options;\n};\n\nconst createWindow = (url, options) => {\n  const window = new BrowserWindow(getWindowOptions(options));\n  window.loadURL(url);\n  return window;\n};\n\nconst createEditorWindow = () => {\n  // Note: the route for this must be `editor`, otherwise the dev tools keyboard shortcuts will not work.\n  let url = getURL('editor');\n  const fileToOpen = filesToOpen.shift();\n  if (typeof fileToOpen !== 'undefined') {\n    url += `&file=${encodeURIComponent(fileToOpen)}`;\n    allowedToAccessFiles.add(fileToOpen);\n  }\n  const window = createWindow(url, {\n    title: APP_NAME,\n    width: 1280,\n    height: 800,\n    webPreferences: {\n      backgroundThrottling: isBackgroundThrottlingEnabled()\n    }\n  });\n  window.on('page-title-updated', (event, title, explicitSet) => {\n    event.preventDefault();\n    if (explicitSet && title) {\n      window.setTitle(`${title} - ${APP_NAME}`);\n    } else {\n      window.setTitle(APP_NAME);\n    }\n  });\n  window.on('closed', () => {\n    editorWindows.delete(window);\n    if (editorWindows.size === 0) {\n      closeAllNonEditorWindows();\n    }\n  });\n  window.webContents.on('will-prevent-unload', (e) => {\n    const choice = dialog.showMessageBoxSync(window, {\n      title: APP_NAME,\n      type: 'info',\n      buttons: [\n        getTranslation('unload.stay'),\n        getTranslation('unload.leave')\n      ],\n      cancelId: 0,\n      defaultId: 0,\n      message: getTranslation('unload.message'),\n      detail: getTranslation('unload.detail')\n    });\n    if (choice === 1) {\n      e.preventDefault();\n    }\n  });\n  window.webContents.setWindowOpenHandler((details) => {\n    if (isExtensionURL(details.url)) {\n      createExtensionsWindow(window.webContents);\n      return {\n        action: 'deny'\n      };\n    }\n    return defaultWindowOpenHandler(details);\n  });\n  editorWindows.add(window);\n  return window;\n};\n\nconst createAboutWindow = () => {\n  if (!aboutWindow) {\n    aboutWindow = createWindow(getURL('about'), {\n      title: getTranslation('about'),\n      width: 800,\n      height: 450,\n      minimizable: false,\n      maximizable: false\n    });\n    aboutWindow.on('closed', () => {\n      aboutWindow = null;\n    });\n    closeWindowWhenPressEscape(aboutWindow);\n  }\n  aboutWindow.show();\n  aboutWindow.focus();\n};\n\nconst createAddonSettingsWindow = () => {\n  if (!addonSettingsWindow) {\n    addonSettingsWindow = createWindow(getURL('settings'), {\n      // The window will update its title to be something localized\n      title: 'Addon Settings',\n      width: 700,\n      height: 650\n    });\n    addonSettingsWindow.on('close', () => {\n      addonSettingsWindow = null;\n    });\n    closeWindowWhenPressEscape(addonSettingsWindow);\n  }\n  addonSettingsWindow.show();\n  addonSettingsWindow.focus();\n};\n\nconst createPrivacyWindow = () => {\n  if (!privacyWindow) {\n    privacyWindow = createWindow(getURL('privacy'), {\n      title: getTranslation('privacy'),\n      width: 800,\n      height: 700,\n      minimizable: false,\n      maximizable: false\n    });\n    privacyWindow.on('closed', () => {\n      privacyWindow = null;\n    });\n    closeWindowWhenPressEscape(privacyWindow);\n  }\n  privacyWindow.show();\n  privacyWindow.focus();\n};\n\nconst createDesktopSettingsWindow = () => {\n  if (!desktopSettingsWindow) {\n    desktopSettingsWindow = createWindow(getURL('desktop-settings'), {\n      title: getTranslation('desktop-settings'),\n      width: 500,\n      height: 450\n    });\n    desktopSettingsWindow.on('closed', () => {\n      desktopSettingsWindow = null;\n    });\n    closeWindowWhenPressEscape(desktopSettingsWindow);\n  }\n  desktopSettingsWindow.show();\n  desktopSettingsWindow.focus();\n};\n\nconst createPackagerWindow = (editorWebContents) => {\n  const window = createWindow(`${getURL('packager')}&editor_id=${editorWebContents.id}`, {\n    title: PACKAGER_NAME,\n    width: 700,\n    height: 700,\n  });\n  closeWindowWhenPressEscape(window);\n\n  let defaultWindowTitle;\n  window.on('page-title-updated', (e, newTitle, explicitSet) => {\n    e.preventDefault();\n    if (!explicitSet) {\n      return;\n    }\n    // The packager's default name is quite long and we want to display a shorter title instead\n    if (!defaultWindowTitle) {\n      defaultWindowTitle = newTitle;\n    }\n    if (newTitle === defaultWindowTitle) {\n      window.setTitle(PACKAGER_NAME);\n    } else {\n      window.setTitle(newTitle);\n    }\n  });\n\n  window.webContents.setWindowOpenHandler((details) => {\n    if (details.url === 'about:blank') {\n      // Opening preview window\n      return {\n        action: 'allow',\n        overrideBrowserWindowOptions: getWindowOptions({\n          title: getTranslation('loading-preview'),\n          width: 640,\n          height: 480,\n          webPreferences: {\n            // preview window can have arbitrary custom JS and should not have access to special APIs\n            preload: null\n          }\n        })\n      };\n    }\n    return defaultWindowOpenHandler(details);\n  });\n  window.webContents.on('did-create-window', (newWindow) => {\n    closeWindowWhenPressEscape(newWindow);\n  });\n  return window;\n};\n\nconst createDataWindow = (url) => {\n  const window = createWindow(url, {\n    title: 'data: URL',\n    width: 480,\n    height: 360,\n    webPreferences: {\n      preload: null,\n      session: session.fromPartition('unsafe-data-url')\n    }\n  });\n  closeWindowWhenPressEscape(window);\n  window.on('closed', () => {\n    dataWindows.delete(window);\n  });\n  dataWindows.add(window);\n};\n\nconst createExtensionsWindow = (editorWebContents) => {\n  const window = createWindow(`tw-extensions://./index.html?editor_id=${editorWebContents.id}`, {\n    title: EXTENSION_GALLERY_NAME,\n    width: 950,\n    height: 700,\n  });\n  closeWindowWhenPressEscape(window);\n  extensionWindows.add(window);\n  window.on('closed', () => {\n    extensionWindows.delete(window);\n  });\n};\n\nconst getLastAccessedDirectory = () => store.get('last_accessed_directory') || '';\nconst setLastAccessedFile = (filePath) => store.set('last_accessed_directory', pathUtil.dirname(filePath));\n\nipcMain.handle('show-save-dialog', async (event, options) => {\n  const result = await dialog.showSaveDialog(BrowserWindow.fromWebContents(event.sender), {\n    filters: options.filters,\n    defaultPath: pathUtil.join(getLastAccessedDirectory(), options.suggestedName)\n  });\n  if (!result.canceled) {\n    const {filePath} = result;\n    setLastAccessedFile(filePath);\n    allowedToAccessFiles.add(filePath);\n  }\n  return result;\n});\n\nipcMain.handle('show-open-dialog', async (event, options) => {\n  const result = await dialog.showOpenDialog(BrowserWindow.fromWebContents(event.sender), {\n    filters: options.filters,\n    properties: ['openFile'],\n    defaultPath: getLastAccessedDirectory()\n  });\n  if (!result.canceled) {\n    const [filePath] = result.filePaths;\n    setLastAccessedFile(filePath);\n    allowedToAccessFiles.add(filePath);\n  }\n  return result;\n});\n\nipcMain.handle('read-file', async (event, file) => {\n  if (!allowedToAccessFiles.has(file)) {\n    throw new Error('Not allowed to access file');\n  }\n  return await readFile(file);\n});\n\nipcMain.on('write-file-with-port', async (startEvent, path) => {\n  const port = startEvent.ports[0];\n\n  /** @type {NodeJS.WritableStream|null} */\n  let writeStream = null;\n\n  const handleError = (error) => {\n    console.error(error);\n    port.postMessage({\n      error\n    });\n    // Make sure the port is started as we can encounter an error before we normally\n    // begin to accept messages.\n    port.start();\n  };\n\n  try {\n    if (!allowedToAccessFiles.has(path)) {\n      throw new Error('Not allowed to access path');\n    }\n    writeStream = await createAtomicWriteStream(path);\n  } catch (error) {\n    handleError(error);\n    return;\n  }\n\n  writeStream.on('atomic-error', handleError);\n\n  const handleMessage = (data) => {\n    if (data.write) {\n      if (writeStream.write(data.write)) {\n        // Still more space in the buffer. Ask for more immediately.\n        return;\n      }\n      // Wait for the buffer to become empty before asking for more.\n      return new Promise(resolve => {\n        writeStream.once('drain', resolve);\n      });\n    } else if (data.finish) {\n      // Wait for the atomic file write to complete.\n      return new Promise(resolve => {\n        writeStream.once('atomic-finish', resolve);\n        writeStream.end();\n      });\n    }\n    throw new Error('Unknown message from renderer'); \n  };\n\n  port.on('message', async (messageEvent) => {\n    try {\n      const data = messageEvent.data;\n      const id = data.id;\n      const result = await handleMessage(data);\n      port.postMessage({\n        response: {\n          id,\n          result\n        }\n      });\n    } catch (error) {\n      handleError(error);\n    }\n  });\n\n  port.start();\n});\n\nipcMain.on('open-new-window', () => {\n  createEditorWindow();\n});\n\nipcMain.on('open-about', () => {\n  createAboutWindow();\n});\n\nipcMain.on('open-addon-settings', () => {\n  createAddonSettingsWindow();\n});\n\nipcMain.on('open-privacy-policy', () => {\n  createPrivacyWindow()\n});\n\nipcMain.on('open-desktop-settings', () => {\n  createDesktopSettingsWindow();\n});\n\nipcMain.on('open-packager', (event) => {\n  createPackagerWindow(event.sender);\n});\n\nipcMain.handle('get-packager-html', async () => {\n  const compressed = await readFile(pathUtil.join(staticDir, 'packager.html.br'));\n  const uncomressed = await brotliDecompress(compressed);\n  return uncomressed;\n});\n\nipcMain.on('export-addon-settings', async (event, settings) => {\n  const result = await dialog.showSaveDialog(BrowserWindow.fromWebContents(event.sender), {\n    defaultPath: 'turbowarp-addon-setting.json',\n    filters: [\n      {\n        name: 'JSON',\n        extensions: ['json']\n      }\n    ]\n  });\n  if (result.canceled) {\n    return;\n  }\n\n  const path = result.filePath;\n  await writeFileAtomic(path, JSON.stringify(settings));\n});\n\nipcMain.on('addon-settings-changed', (event, newSettings) => {\n  for (const window of editorWindows) {\n    window.webContents.send('addon-settings-changed', newSettings);\n  }\n});\n\nipcMain.on('set-represented-file', (event, filename) => {\n  const win = BrowserWindow.fromWebContents(event.sender);\n  win.setRepresentedFilename(filename || '');\n});\n\nipcMain.on('set-file-changed', (event, changed) => {\n  const win = BrowserWindow.fromWebContents(event.sender);\n  win.setDocumentEdited(changed);\n});\n\nipcMain.on('alert', (event, message) => {\n  dialog.showMessageBoxSync(BrowserWindow.fromWebContents(event.sender), {\n    title: APP_NAME,\n    message: '' + message,\n    buttons: [\n      getTranslation('prompt.ok')\n    ],\n    noLink: true\n  });\n  // set returnValue to something to reply so the renderer can resume\n  event.returnValue = 1;\n});\n\nipcMain.on('confirm', (event, message) => {\n  const result = dialog.showMessageBoxSync(BrowserWindow.fromWebContents(event.sender), {\n    title: APP_NAME,\n    message: '' + message,\n    buttons: [\n      getTranslation('prompt.ok'),\n      getTranslation('prompt.cancel')\n    ],\n    defaultId: 0,\n    cancelId: 1,\n    noLink: true\n  }) === 0;\n  event.returnValue = result;\n});\n\nconst requestURLAsArrayBuffer = (url) => new Promise((resolve, reject) => {\n  const request = net.request(url);\n  request.on('response', (response) => {\n    const statusCode = response.statusCode;\n    if (statusCode !== 200) {\n      reject(new Error(`Unexpected status code: ${statusCode}`))\n      return;\n    }\n    const chunks = [];\n    response.on('data', (chunk) => {\n      chunks.push(chunk);\n    });\n    response.on('end', () => {\n      const buffer = Buffer.concat(chunks);\n      const slice = buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength);\n      resolve(slice);\n    });\n  });\n  request.on('error', (e) => {\n    reject(e);\n  });\n  request.end();\n});\n\nipcMain.handle('request-url', (event, url) => {\n  if (!allowedToAccessFiles.has(url)) {\n    throw new Error('Not allowed to access URL');\n  }\n  return requestURLAsArrayBuffer(url);\n});\n\nipcMain.handle('get-project-metadata', (event, id) => {\n  if (!/^\\d+$/.test(id)) {\n    throw new Error('Invalid project ID');\n  }\n  return requestURLAsArrayBuffer(`https://api.scratch.mit.edu/projects/${id}`);\n});\n\nipcMain.on('open-user-data', () => {\n  shell.showItemInFolder(app.getPath('userData'));\n});\n\napp.on('window-all-closed', () => {\n  app.quit();\n});\n\n// Handle file opening on macOS\napp.on('open-file', (event, path) => {\n  event.preventDefault();\n  filesToOpen.push(path);\n  // This event can be emitted before we create the main window or while we're already running.\n  if (editorWindows.size > 0) {\n    createEditorWindow();\n  }\n});\n\napp.on('session-created', (session) => {\n  session.setPermissionRequestHandler(handlePermissionRequest);\n\n  session.on('will-download', (event, item, webContents) => {\n    const extension = pathUtil.extname(item.getFilename()).replace(/^\\./, '').toLowerCase();\n    const extensionName = getTranslationOrNull(`files.${extension}`);\n    if (extensionName) {\n      item.setSaveDialogOptions({\n        filters: [\n          {\n            name: extensionName,\n            extensions: [extension]\n          }\n        ]\n      });\n    }\n  });\n\n  const rootFileURL = new URL(`file://${__dirname}/`).href;\n\n  // Enforce additional restrictions when fetching file:// URIs\n  session.webRequest.onBeforeRequest((details, callback) => {\n    const destinationURL = new URL(details.url);\n    if (destinationURL.protocol === 'file:' && !destinationURL.href.startsWith(rootFileURL)) {\n      return callback({\n        cancel: true\n      });\n    }\n    callback({});\n  });\n\n  // Enforce CORS when a file:// URI fetches something from the broader internet\n  session.webRequest.onHeadersReceived((details, callback) => {\n    if (details.resourceType === 'xhr') {\n      const sourceURL = new URL(details.frame.url);\n      const destinationURL = new URL(details.url);\n      if ((destinationURL.protocol === 'http:' || destinationURL.protocol === 'https:') && sourceURL.protocol === 'file:') {\n        const corsHeaders = details.responseHeaders?.['access-control-allow-origin'] || [];\n        const corsHeader = corsHeaders.join(',');\n        if (corsHeader !== '*') {\n          return callback({\n            cancel: true\n          });\n        }\n      }\n    }\n    callback({});\n  });\n});\n\napp.on('web-contents-created', (event, webContents) => {\n  webContents.on('context-menu', (event, params) => {\n    const text = params.selectionText;\n    const hasText = !!text;\n    const menuItems = [];\n\n    if (params.misspelledWord && params.dictionarySuggestions.length > 0) {\n      for (const word of params.dictionarySuggestions) {\n        menuItems.push({\n          label: word,\n          click: () => {\n            webContents.replaceMisspelling(word);\n          }\n        });\n      }\n      menuItems.push({\n        type: 'separator'\n      });\n    }\n\n    const url = params.linkURL;\n    if (params.linkURL) {\n      menuItems.push({\n        id: 'openLink',\n        label: getTranslation('context.open-link'),\n        enabled: !url.startsWith('blob:'),\n        click() {\n          if (isSafeOpenExternal(url)) {\n            shell.openExternal(url);\n          }\n        }\n      });\n      menuItems.push({\n        type: 'separator'\n      });\n    }\n\n    if (params.isEditable) {\n      menuItems.push({\n        id: 'cut',\n        label: getTranslation('context.cut'),\n        enabled: hasText,\n        click: () => {\n          clipboard.writeText(text);\n          webContents.cut();\n        }\n      });\n    }\n    if (hasText || params.isEditable) {\n      menuItems.push({\n        id: 'copy',\n        label: getTranslation('context.copy'),\n        enabled: hasText,\n        click: () => {\n          clipboard.writeText(text);\n        }\n      });\n    }\n    if (params.isEditable) {\n      menuItems.push({\n        id: 'Paste',\n        label: getTranslation('context.paste'),\n        click: () => {\n          webContents.paste();\n        }\n      });\n    }\n\n    if (menuItems.length > 0) {\n      const menu = Menu.buildFromTemplate(menuItems);\n      menu.popup();\n    }\n  });\n\n  if (!isMac) {\n    // On Mac, shortcuts are handled by the menu bar.\n    webContents.on('before-input-event', (e, input) => {\n      if (input.isAutoRepeat || input.isComposing || input.type !== 'keyDown' || input.meta) {\n        return;\n      }\n      const window = BrowserWindow.fromWebContents(webContents);\n      // Ctrl+Shift+I to open dev tools\n      if (\n        input.control &&\n        input.shift &&\n        input.key.toLowerCase() === 'i' &&\n        !input.alt\n      ) {\n        e.preventDefault();\n        webContents.toggleDevTools();\n      }\n      // Ctrl+N to open new window\n      if (\n        input.control &&\n        input.key.toLowerCase() === 'n'\n      ) {\n        e.preventDefault();\n        createEditorWindow();\n      }\n      // Ctrl+Equals/Plus to zoom in (depends on keyboard layout)\n      if (\n        input.control &&\n        (input.key === '=' || input.key === '+')\n      ) {\n        e.preventDefault();\n        webContents.setZoomLevel(webContents.getZoomLevel() + 1);\n      }\n      // Ctrl+Minus/Underscore to zoom out\n      if (\n        input.control &&\n        input.key === '-'\n      ) {\n        e.preventDefault();\n        webContents.setZoomLevel(webContents.getZoomLevel() - 1);\n      }\n      // Ctrl+0 to reset zoom\n      if (\n        input.control &&\n        input.key === '0'\n      ) {\n        e.preventDefault();\n        webContents.setZoomLevel(0);\n      }\n      // F11 and alt+enter to toggle fullscreen\n      if (\n        input.key === 'F11' ||\n        (input.key === 'Enter' && input.alt)\n      ) {\n        e.preventDefault();\n        window.setFullScreen(!window.isFullScreen());\n      }\n      // Escape to exit fullscreen\n      if (\n        input.key === 'Escape' &&\n        window.isFullScreen()\n      ) {\n        e.preventDefault();\n        // used by closeWindowWhenPressEscape\n        e.didJustLeaveFullScreen = true;\n        window.setFullScreen(false);\n      }\n      // Ctrl+R and Ctrl+Shift+R to reload\n      if (\n        input.control &&\n        input.key.toLowerCase() === 'r'\n      ) {\n        e.preventDefault();\n        if (input.shift) {\n          webContents.reloadIgnoringCache();\n        } else {\n          webContents.reload();\n        }\n      }\n    });\n  }\n\n  webContents.setWindowOpenHandler(defaultWindowOpenHandler);\n\n  webContents.on('will-navigate', (e, url) => {\n    if (url === 'mailto:contact@turbowarp.org') {\n      // If clicking on the contact email address, we'll let the OS figure out how to open it\n      return;\n    }\n    try {\n      const newURL = new URL(url);\n      const baseURL = new URL(getURL(''));\n      if (newURL.href.startsWith(baseURL.href)) {\n        // Let the editor reload itself\n        // For example, reloading to apply settings\n      } else {\n        e.preventDefault();\n        if (isSafeOpenExternal(url)) {\n          shell.openExternal(url);\n        }\n      }\n    } catch (e) {\n      e.preventDefault();\n    }\n  });\n});\n\nwhenBackgroundThrottlingChanged((backgroundThrottlingEnabled) => {\n  for (const editorWindow of editorWindows) {\n    editorWindow.webContents.setBackgroundThrottling(backgroundThrottlingEnabled);\n  }\n});\n\n// Allows certain versions of Scratch Link to work without an internet connection\n// https://github.com/LLK/scratch-desktop/blob/4b462212a8e406b15bcf549f8523645602b46064/src/main/index.js#L45\napp.commandLine.appendSwitch('host-resolver-rules', 'MAP device-manager.scratch.mit.edu 127.0.0.1');\n\nconst acquiredLock = app.requestSingleInstanceLock();\nif (acquiredLock) {\n  const autoCreateEditorWindows = () => {\n    if (filesToOpen.length) {\n      while (filesToOpen.length) {\n        createEditorWindow();\n      }\n    } else {\n      createEditorWindow();\n    }\n  };\n\n  const resolveFilePath = (workingDirectory, file) => {\n    try {\n      // If the file is a full absolute URL, pass it through unmodified.\n      const _ = new URL(file);\n      return file;\n    } catch (e) {\n      return pathUtil.resolve(workingDirectory, file);\n    }\n  };\n\n  for (const path of parseArgs(process.argv)) {\n    filesToOpen.push(resolveFilePath('', path));\n  }\n\n  app.on('second-instance', (event, argv, workingDirectory) => {\n    for (const i of parseArgs(argv)) {\n      filesToOpen.push(resolveFilePath(workingDirectory, i));\n    }\n    autoCreateEditorWindows();\n  });\n\n  app.on('activate', () => {\n    if (app.isReady() && editorWindows.size === 0) {\n      createEditorWindow();\n    }\n  });\n\n  app.whenReady().then(() => {\n    checkForUpdate();\n    autoCreateEditorWindows();\n  });\n} else {\n  console.log('Handing off to existing instance.');\n  app.quit();\n}\n</Code>"
                }
            ],
            "url": "https://github.com/TurboWarp/desktop/commit/55e07e99b59db334d75e8f46792a1569ab0884a6",
            "description": "TurboWarp is a desktop application that compiles scratch projects to JavaScript. TurboWarp Desktop versions prior to version 1.8.0 allowed a malicious project or custom extension to read arbitrary files from disk and upload them to a remote server. The only required user interaction is opening the sb3 file or loading the extension. The web version of TurboWarp is not affected. This bug has been addressed in commit `55e07e99b59` after an initial fix which was reverted. Users are advised to upgrade to version 1.8.0 or later. Users unable to upgrade should avoid opening sb3 files or loading extensions from untrusted sources.",
            "date": "2023-08-17",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-22\", \"CWE-611\", \"CWE-862\"],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-22",
                    "CWE-611",
                    "CWE-862"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2023-40168",
            "ground_truth_CWEs": [
                "CWE-863"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Nginx-ui is online statistics for Server Indicators?? Monitor CPU usage, memory usage, load average, and disk usage in real-time. The `Home > Preference` page exposes a small list of nginx settings such as `Nginx Access Log Path` and `Nginx Error Log Path`. However, the API also exposes `test_config_cmd`, `reload_cmd` and `restart_cmd`. While the UI doesn't allow users to modify any of these settings, it is possible to do so by sending a request to the API. This issue may lead to authenticated Remote Code Execution, Privilege Escalation, and Information Disclosure. This issue has been patched in version 2.0.0.beta.9.\nFile: api/system/settings.go\nContent: \n<Code>\npackage system\n\nimport (\n    \"github.com/0xJacky/Nginx-UI/api\"\n    \"github.com/0xJacky/Nginx-UI/settings\"\n    \"github.com/gin-gonic/gin\"\n    \"net/http\"\n)\n\nfunc GetSettings(c *gin.Context) {\n    c.JSON(http.StatusOK, gin.H{\n        \"server\": settings.ServerSettings,\n        \"nginx\":  settings.NginxSettings,\n        \"openai\": settings.OpenAISettings,\n    })\n}\n\nfunc SaveSettings(c *gin.Context) {\n    var json struct {\n        Server settings.Server `json:\"server\"`\n        Nginx  settings.Nginx  `json:\"nginx\"`\n        Openai settings.OpenAI `json:\"openai\"`\n    }\n\n    if !api.BindAndValid(c, &json) {\n        return\n    }\n\n    settings.ServerSettings = json.Server\n    settings.NginxSettings = json.Nginx\n    settings.OpenAISettings = json.Openai\n\n    settings.ReflectFrom()\n\n    err := settings.Save()\n    if err != nil {\n        api.ErrHandler(c, err)\n        return\n    }\n\n    GetSettings(c)\n}\n</Code>\n\nFile: settings/nginx.go\nContent: \n<Code>\npackage settings\n\ntype Nginx struct {\n\tAccessLogPath string `json:\"access_log_path\"`\n\tErrorLogPath  string `json:\"error_log_path\"`\n\tConfigDir     string `json:\"config_dir\"`\n\tPIDPath       string `json:\"pid_path\"`\n\tTestConfigCmd string `json:\"test_config_cmd\"`\n\tReloadCmd     string `json:\"reload_cmd\"`\n\tRestartCmd    string `json:\"restart_cmd\"`\n}\n\nvar NginxSettings = Nginx{\n\tAccessLogPath: \"\",\n\tErrorLogPath:  \"\",\n}\n</Code>\n\nFile: settings/server.go\nContent: \n<Code>\npackage settings\n\ntype Server struct {\n\tHttpHost          string `json:\"http_host\"`\n\tHttpPort          string `json:\"http_port\"`\n\tRunMode           string `json:\"run_mode\"`\n\tJwtSecret         string `json:\"jwt_secret\"`\n\tNodeSecret        string `json:\"node_secret\"`\n\tHTTPChallengePort string `json:\"http_challenge_port\"`\n\tEmail             string `json:\"email\"`\n\tDatabase          string `json:\"database\"`\n\tStartCmd          string `json:\"start_cmd\"`\n\tCADir             string `json:\"ca_dir\"`\n\tDemo              bool   `json:\"demo\"`\n\tPageSize          int    `json:\"page_size\"`\n\tGithubProxy       string `json:\"github_proxy\"`\n}\n\nvar ServerSettings = Server{\n\tHttpHost:          \"0.0.0.0\",\n\tHttpPort:          \"9000\",\n\tRunMode:           \"debug\",\n\tHTTPChallengePort: \"9180\",\n\tDatabase:          \"database\",\n\tStartCmd:          \"login\",\n\tDemo:              false,\n\tPageSize:          10,\n\tCADir:             \"\",\n\tGithubProxy:       \"\",\n}\n</Code>"
                }
            ],
            "url": "https://github.com/0xJacky/nginx-ui/commit/827e76c46e63c52114a62a899f61313039c754e3",
            "description": "Nginx-ui is online statistics for Server Indicators?? Monitor CPU usage, memory usage, load average, and disk usage in real-time. The `Home > Preference` page exposes a small list of nginx settings such as `Nginx Access Log Path` and `Nginx Error Log Path`. However, the API also exposes `test_config_cmd`, `reload_cmd` and `restart_cmd`. While the UI doesn't allow users to modify any of these settings, it is possible to do so by sending a request to the API. This issue may lead to authenticated Remote Code Execution, Privilege Escalation, and Information Disclosure. This issue has been patched in version 2.0.0.beta.9.",
            "date": "2024-01-11",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n    \"CWE_IDS\": [\"CWE-306\", \"CWE-269\"],\n    \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-269",
                    "CWE-306"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2024-22197",
            "ground_truth_CWEs": [
                "CWE-77"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: In the operator chat, maybe whispered message should look different from normal messages. There is no distinction at the moment so this is confusing. Should be a different text or different bubble or something that can made a visible message to the user different from a whispering message that should be visible only from operators\nWhispered message are visible for visitor if they request chat transcript. This can create bad situation where operator messages whispered should be not visible to the visitor.\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions\nFile: lhc_web/design/defaulttheme/tpl/lhchat/lists/msg_obj_list.tpl.php\nContent: \n<Code>\n<?php \n\n$lastOperatorChanged = false;\n$lastOperatorId = false;\n\nforeach ($messages as $msg ) : if ($msg->user_id > -1 || $msg->user_id == -2) : \n\nif ($lastOperatorId !== false && $lastOperatorId != $msg->user_id) {\n    $lastOperatorChanged = true;\n} else {\n    $lastOperatorChanged = false;\n}\n\n$lastOperatorId = $msg->user_id;\n\nif ($msg->meta_msg != '') {\n    $metaMessageData = json_decode($msg->meta_msg, true); $messageId = $msg->id;\n} else if (isset($metaMessageData)) {\n    unset($metaMessageData);\n}\n\n?>\n<div class=\"message-row<?php echo $msg->user_id == 0 ? ' response' : ' message-admin'.($lastOperatorChanged == true ? ' operator-changes' : '')?>\" id=\"msg-<?php echo $msg->id?>\"><div class=\"msg-date\"><?php echo date(erLhcoreClassModule::$dateDateHourFormat,$msg->time);?></div><span class=\"usr-tit<?php echo $msg->user_id == 0 ? ' vis-tit' : ' op-tit'?>\"><?php echo $msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support) ?>:&nbsp;</span>\n\n    <?php $msgBody = $msg->msg; $paramsMessageRender = array('sender' => $msg->user_id);?>\n    <?php include(erLhcoreClassDesign::designtpl('lhchat/lists/msg_body.tpl.php'));?>\n\n    <?php if (isset($metaMessageData)) : ?>\n        <?php include(erLhcoreClassDesign::designtpl('lhgenericbot/message/meta_render.tpl.php'));?>\n    <?php endif; ?>\n</div>\n<?php endif; endforeach; ?>\n</Code>\n\nFile: lhc_web/design/defaulttheme/tpl/lhchat/lists/msg_obj_list_admin.tpl.php\nContent: \n<Code>\n<?php \n\n$lastOperatorChanged = false;\n$lastOperatorId = false;\n$lastOperatorNick = '';\n\nforeach ($messages as $msg) : \n\nif ($lastOperatorId !== false && ($lastOperatorId != $msg->user_id || $lastOperatorNick != $msg->name_support)) {\n    $lastOperatorChanged = true;\n    $lastOperatorNick = $msg->name_support;\n} else {\n    $lastOperatorChanged = false;\n}\n\n$lastOperatorId = $msg->user_id;\n\n    if ($msg->meta_msg != '') {\n        $metaMessageData = json_decode($msg->meta_msg, true); $messageId = $msg->id;\n    } else if (isset($metaMessageData)) {\n        unset($metaMessageData);\n    }\n\n?>\n<?php if ($msg->user_id == -1) : ?>\n\t<div class=\"message-row system-response\" id=\"msg-<?php echo $msg->id?>\"><div class=\"msg-date\"><?php echo date(erLhcoreClassModule::$dateDateHourFormat,$msg->time);?></div><i><span class=\"usr-tit sys-tit\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/syncadmin','System assistant')?></span><?php echo erLhcoreClassBBCode::make_clickable(htmlspecialchars($msg->msg))?></i></div>\n<?php else : ?>\n    <?php if ($msg->msg != '' ||\n        isset($metaMessageData['content']['text_conditional']) ||\n        isset($metaMessageData['content']['chat_operation']) ||\n        isset($metaMessageData['content']['html']['content']) ||\n        isset($metaMessageData['content']['button_message'])\n    ) : ?>\n        <div class=\"message-row<?php echo $msg->user_id == 0 ? ' response' : ' message-admin'.($lastOperatorChanged == true ? ' operator-changes' : '')?>\" id=\"msg-<?php echo $msg->id?>\"><div class=\"msg-date\"><?php echo date(erLhcoreClassModule::$dateDateHourFormat,$msg->time);?></div><span class=\"usr-tit<?php echo $msg->user_id == 0 ? ' vis-tit' : ' op-tit'?>\"><?php if ($msg->user_id == 0) : ?><i class=\"material-icons\"><?php echo ($chat->device_type == 0 ? 'computer' : ($chat->device_type == 1 ? 'smartphone' : 'tablet'))?></i><?php endif;?><?php echo $msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support) ?></span>\n            <?php $msgBody = $msg->msg; $paramsMessageRender = array('sender' => $msg->user_id, 'html_as_text' => true);?>\n            <?php include(erLhcoreClassDesign::designtpl('lhchat/lists/msg_body.tpl.php'));?>\n\n            <?php if (isset($metaMessageData)) : ?>\n                <?php include(erLhcoreClassDesign::designtpl('lhgenericbot/message/meta_render_admin.tpl.php'));?>\n            <?php endif; ?>\n            \n        </div>\n    <?php endif;?>\n<?php endif;?>\n<?php endforeach;?>\n</Code>\n\nFile: lhc_web/design/defaulttheme/tpl/lhchat/messagelist/plain.tpl.php\nContent: \n<Code>\n<?php foreach ($messages as $msg ) : ?><?php if (!isset($remove_meta) || $remove_meta == false ) :?>[<?php echo date(erLhcoreClassModule::$dateDateHourFormat,$msg->time);?>] [<?php echo $msg->user_id == 0 ? htmlspecialchars($chat->nick) : htmlspecialchars($msg->name_support) ?>] <?php endif;?><?php echo erLhcoreClassBBCodePlain::make_clickable($msg->msg, array('sender' => $msg->user_id)),\"\\n\"?><?php endforeach; ?>\n</Code>\n\nFile: lhc_web/design/defaulttheme/tpl/lhform/collected.tpl.php\nContent: \n<Code>\n<h1><?php echo htmlspecialchars($form)?></h1>\r\n\r\n<div class=\"row pb-2\">\r\n\t<div class=\"col-6\"><a href=\"<?php echo erLhcoreClassDesign::baseurl('form/downloadcollected')?>/<?php echo $form->id?>\" class=\"btn btn-secondary\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Download XLS');?></a></div>\r\n\t<div class=\"col-6\">\r\n\t\r\n\t<div class=\"input-group\">\r\n        <div class=\"input-group-prepend\"><span class=\"input-group-text\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','URL');?></span></div>\r\n      <input type=\"text\" class=\"form-control\" value=\"<?php echo erLhcoreClassXMP::getBaseHost(). $_SERVER['HTTP_HOST']?><?php echo erLhcoreClassDesign::baseurldirect('form/fill')?>/<?php echo $form->id?>\">\r\n    </div>\r\n    \r\n\t</div>\r\n</div>\r\n\r\n<table class=\"table\" cellpadding=\"0\" cellspacing=\"0\">\r\n<thead>\r\n<tr>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Name');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Identifier');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Chat');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Intro');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Time');?></th>\r\n    <th><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','IP');?></th>\r\n    <th width=\"1%\">&nbsp;</th>\r\n    <th width=\"1%\">&nbsp;</th>\r\n</tr>\r\n</thead>\r\n<?php foreach ($items as $item) : ?>\r\n    <tr>\r\n    \t<td><?php echo htmlspecialchars($item->getAttrValue($form->name_attr))?></td>\r\n    \t<td>\r\n    \t<div class=\"page-url\"><span><?php echo htmlspecialchars($item->identifier)?></span></div>\r\n    \t</td>\r\n        <td>\r\n    \t<?php if ($item->chat_id > 0) : ?>\r\n            <a class=\"material-icons\" onclick=\"lhc.previewChat(<?php echo $item->chat_id?>)\">info_outline</a>\r\n        <?php else : ?>\r\n            <i class=\"material-icons\">remove_circle_outline</i>\r\n        <?php endif; ?>\r\n    \t</td>\r\n        <td><?php echo $form->intro_attr != '' ? htmlspecialchars($item->getAttrValue($form->intro_attr)) : ''?></td>\r\n        <td><?php echo $item->ctime_front?></td>\r\n        <td><?php echo htmlspecialchars($item->ip)?></td>\r\n        <td nowrap>\r\n\t        <div style=\"width:140px\">\r\n\t        \r\n\t        \t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n\t            \t<a class=\"btn btn-secondary btn-xs\" href=\"<?php echo erLhcoreClassDesign::baseurl('form/viewcollected')?>/<?php echo $item->id?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','View');?></a>\r\n\t            \t<a class=\"btn btn-secondary btn-xs\" href=\"<?php echo erLhcoreClassDesign::baseurl('form/downloaditem')?>/<?php echo $item->id?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Download');?></a>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t        </div>\r\n        </td>\r\n        <td nowrap><a onclick=\"return confirm('<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('kernel/message','Are you sure?');?>')\" class=\"csfr-required btn btn-danger btn-xs\" href=\"<?php echo erLhcoreClassDesign::baseurl('form/collected')?>/<?php echo $form->id?>/(action)/delete/(id)/<?php echo $item->id?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('form/collected','Delete');?></a></td>\r\n    </tr>\r\n<?php endforeach; ?>\r\n</table>\r\n\r\n<?php include(erLhcoreClassDesign::designtpl('lhkernel/secure_links.tpl.php')); ?>\r\n\r\n<?php if (isset($pages)) : ?>\r\n    <?php include(erLhcoreClassDesign::designtpl('lhkernel/paginator.tpl.php')); ?>\r\n<?php endif;?>\n</Code>\n\nFile: lhc_web/design/defaulttheme/tpl/lhtheme/admincss.tpl.php\nContent: \n<Code>\n<?php if ($theme->header_css != '') {\n    echo $theme->header_css;\n} ?>\n\n<?php if (isset($cssAttributes['main_background_color']) || isset($cssAttributes['default_tc'])) : ?>\nbody, #page-content-wrapper {\n    <?php if (isset($cssAttributes['main_background_color'])) : ?>background-color:#<?php echo $cssAttributes['main_background_color']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['default_tc'])) : ?>color:#<?php echo $cssAttributes['default_tc']?>;<?php endif;?>\n}\n<?php endif;?>\n\n<?php if (isset($cssAttributes['link_tc'])) : ?>\na {\n    color:#<?php echo $cssAttributes['link_tc']?>\n}\n<?php endif;?>\n\n<?php if (isset($cssAttributes['panel_background_color']) || isset($cssAttributes['panel_border_color'])) : ?>\n.card>.card-header{\n    <?php if (isset($cssAttributes['panel_background_color'])) : ?>background-color:#<?php echo $cssAttributes['panel_background_color']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['panel_border_color'])) : ?>border-color:#<?php echo $cssAttributes['panel_border_color']?>;<?php endif;?>\n}\n\n.card{\n    <?php if (isset($cssAttributes['panel_border_color'])) : ?>border-color:#<?php echo $cssAttributes['panel_border_color']?>;<?php endif;?>\n}\n<?php endif;?>\n\n<?php if (isset($cssAttributes['panel_mbc'])) : ?>\n.card {\n    background-color:#<?php echo $cssAttributes['panel_mbc'];?>\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['mactive_bc']) || isset($cssAttributes['mactive_bc'])) : ?>\n.nav>li>a.nav-link:focus, .nav>li>a.nav-link:hover,.sidebar li.active > a.nav-link{\n    background-color:#<?php echo $cssAttributes['mactive_bc']?>;\n}\n<?php endif;?>\n\n<?php if (isset($cssAttributes['men_col'])) : ?>\n.sidebar .nav-second-level li a,.sidebar ul li a.nav-link {\n    color:#<?php echo $cssAttributes['men_col']?>;\n}\n<?php endif;?>\n\n<?php if (isset($cssAttributes['tab_bc'])) : ?>\n.nav-pills>li>a.nav-link.active, .nav-pills>li>a.nav-link.active:focus, .nav-pills>li>a.nav-link.active:hover,\n.nav-pills>li>a.nav-link:hover,\n.nav-tabs>li>a.nav-link.active, .nav-tabs>li>a.nav-link.active:focus, .nav-tabs>li>a.nav-link.active:hover,.nav-tabs>li>a.nav-link:hover {\n    background-color:#<?php echo $cssAttributes['tab_bc'];?>\n}\n.navbar-default .navbar-nav>.open>a, .navbar-default .navbar-nav>.open>a:focus, .navbar-default .navbar-nav>.open>a:hover{\n    background-color:#<?php echo $cssAttributes['tab_bc']?>;\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['tab_boc'])) : ?>\n.nav-pills>li>a,\n.nav-tabs>li>a.active, .nav-tabs>li>a.active:focus, .nav-tabs>li>a.active:hover{\n    border-color:#<?php echo $cssAttributes['tab_boc'];?>;\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['tab_tc'])) : ?>\n.nav-pills>li>a,\n.nav-tabs>li>a{\n    color:#<?php echo $cssAttributes['tab_tc'];?>;\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['tab_atc'])) : ?>\n.nav-pills>li>a.active, .nav-pills>li>a.active:focus, .nav-pills>li>a.active:hover,\n.nav-tabs>li>a.active, .nav-tabs>li>a.active:focus, .nav-tabs>li>a.active:hover{\n    color:#<?php echo $cssAttributes['tab_atc'];?>;\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['drpdown_bgc']) || isset($cssAttributes['drpdown_boc'])) : ?>\n.dropdown-menu {\n    <?php if (isset($cssAttributes['drpdown_bgc'])) : ?>background-color:#<?php echo $cssAttributes['drpdown_bgc']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['drpdown_boc'])) : ?>border-color:#<?php echo $cssAttributes['drpdown_boc']?>;<?php endif;?>\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['drpdown_hbgc'])) : ?>\n.dropdown-menu > a.dropdown-item:focus, .dropdown-menu>a.dropdown-item:hover{\n    background-color:#<?php echo $cssAttributes['drpdown_hbgc']?>;\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['nvbar_bc']) || isset($cssAttributes['nvbar_pbc'])) : ?>\n.navbar-light{\n    <?php if (isset($cssAttributes['nvbar_bc'])) : ?>background-color:#<?php echo $cssAttributes['nvbar_bc']?>!important;<?php endif;?>\n    <?php if (isset($cssAttributes['nvbar_pbc'])) : ?>border-color:#<?php echo $cssAttributes['nvbar_pbc']?>!important;<?php endif;?>\n}\n<?php endif;?>\n\n<?php if (isset($cssAttributes['bcrumb_bgc']) || isset($cssAttributes['bcrumb_boc'])) : ?>\n.breadcrumb{\n    <?php if (isset($cssAttributes['bcrumb_bgc'])) : ?>background-color: #<?php echo $cssAttributes['bcrumb_bgc']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['bcrumb_boc'])) : ?>border-bottom: 1px solid #<?php echo $cssAttributes['bcrumb_boc']?>!important;<?php endif;?>\n}\n\n<?php if (isset($cssAttributes['bcrumb_bgc'])) : ?>\n.navbar-lhc-right {\n   <?php if (isset($cssAttributes['bcrumb_bgc'])) : ?>background-color: #<?php echo $cssAttributes['bcrumb_bgc']?>;<?php endif;?>\n}\n<?php endif;?>\n\n<?php endif;?>\n\n<?php if (isset($cssAttributes['chat_onl_bc']) || isset($cssAttributes['chat_onl_bc'])) : ?>\n.user-online-row td {\n    background-color:#<?php echo $cssAttributes['chat_onl_bc']?>;\n}\n<?php endif;?>\n\n<?php if (isset($cssAttributes['tbl_boc'])) : ?>\n.table>thead>tr>th{\n    border-bottom: 2px solid #<?php echo $cssAttributes['tbl_boc']?>;\n}\n.table>tbody>tr>td, .table>tbody>tr>th, .table>tfoot>tr>td, .table>tfoot>tr>th, .table>thead>tr>td, .table>thead>tr>th {\n    border-top: 1px solid #<?php echo $cssAttributes['tbl_boc']?>;\n}\n<?php endif;?>\n\n<?php if (isset($cssAttributes['nvb_tgl_bgc'])) : ?>\n.navbar-light .navbar-toggler:focus, .navbar .navbar-toggler:hover {\n    background-color: #<?php echo $cssAttributes['nvb_tgl_bgc']?>;\n}\n<?php endif;?>\n\n<?php if (isset($cssAttributes['nvb_tgl_bc'])) : ?>\n.navbar-light .navbar-toggler{\n    border-color: #<?php echo $cssAttributes['nvb_tgl_bc']?>;\n}\n<?php endif;?>\n\n<?php if (isset($cssAttributes['nvb_li_clr'])) : ?>\n.navbar-light .navbar-nav>li>a.nav-link{\n    color: #<?php echo $cssAttributes['nvb_li_clr']?>;\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['nvb_lih_clr'])) : ?>\n.navbar-light .navbar-nav>li>a.nav-link:focus, .navbar-light .navbar-nav>li>a.nav-link:hover, .navbar-default .navbar-nav>li>a.nav-link:hover{\n    color: #<?php echo $cssAttributes['nvb_lih_clr']?>;\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['btnd_clr']) || isset($cssAttributes['btnd_bc']) || isset($cssAttributes['btnd_boc'])) : ?>\n.btn-secondary {\n    <?php if (isset($cssAttributes['btnd_clr'])) : ?>color: #<?php echo $cssAttributes['btnd_clr']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['btnd_bc'])) : ?>background-color: #<?php echo $cssAttributes['btnd_bc']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['btnd_boc'])) : ?>border-color: #<?php echo $cssAttributes['btnd_boc']?>;<?php endif;?>\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['btnda_clr']) || isset($cssAttributes['btnda_bc']) || isset($cssAttributes['btnda_boc'])) : ?>\n.btn-secondary:hover,.btn-secondary.active.focus,.btn-secondary.active:focus,.btn-secondary.active:hover,.btn-secondary:active.focus,.btn-secondary:active:focus,.btn-secondary:active:hover{\n    <?php if (isset($cssAttributes['btnda_clr'])) : ?>color: #<?php echo $cssAttributes['btnda_clr']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['btnda_bc'])) : ?>background-color: #<?php echo $cssAttributes['btnda_bc']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['btnda_boc'])) : ?>border-color: #<?php echo $cssAttributes['btnda_boc']?>;<?php endif;?>\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['btnp_clr']) || isset($cssAttributes['btnp_bc']) || isset($cssAttributes['btnp_boc'])) : ?>\n.btn-primary {\n    <?php if (isset($cssAttributes['btnp_clr'])) : ?>color: #<?php echo $cssAttributes['btnp_clr']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['btnp_bc'])) : ?>background-color: #<?php echo $cssAttributes['btnp_bc']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['btnp_boc'])) : ?>border-color: #<?php echo $cssAttributes['btnp_boc']?>;<?php endif;?>\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['btnpa_clr']) || isset($cssAttributes['btnpa_bc']) || isset($cssAttributes['btnpa_boc'])) : ?>\n.btn-primary:hover,.btn-primary.active.focus,.btn-primary.active:focus,.btn-primary.active:hover,.btn-primary:active.focus,.btn-primary:active:focus,.btn-primary:active:hover{\n    <?php if (isset($cssAttributes['btnpa_clr'])) : ?>color: #<?php echo $cssAttributes['btnpa_clr']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['btnpa_bc'])) : ?>background-color: #<?php echo $cssAttributes['btnpa_bc']?>;<?php endif;?>\n    <?php if (isset($cssAttributes['btnpa_boc'])) : ?>border-color: #<?php echo $cssAttributes['btnpa_boc']?>;<?php endif;?>\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['buble_operator_background']) || isset($cssAttributes['buble_operator_text_color'])) : ?>\n    div.message-admin div.msg-body{\n        <?php if (isset($cssAttributes['buble_operator_background'])) : ?>background-color: #<?php echo $cssAttributes['buble_operator_background'];?>;<?php endif; ?>\n        <?php if (isset($cssAttributes['buble_operator_text_color'])) : ?>color: #<?php echo $cssAttributes['buble_operator_text_color'];?>;<?php endif; ?>\n    }\n\n    <?php if (isset($cssAttributes['buble_operator_text_color'])) : ?>\n    div.message-admin div.msg-body a.link{\n        color: #<?php echo $cssAttributes['buble_operator_text_color'];?>;\n    }\n    <?php endif; ?>\n\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['buble_operator_other_background']) || isset($cssAttributes['buble_operator_other_text_color'])) : ?>\ndiv.other-operator div.msg-body{\n    <?php if (isset($cssAttributes['buble_operator_other_background'])) : ?>background-color: #<?php echo $cssAttributes['buble_operator_other_background'];?>;<?php endif;?>\n    <?php if (isset($cssAttributes['buble_operator_other_text_color'])) : ?>color: #<?php echo $cssAttributes['buble_operator_other_text_color'];?>;<?php endif; ?>\n}\n\n<?php if (isset($cssAttributes['buble_operator_other_text_color'])) : ?>\ndiv.other-operator div.msg-body a.link{\n    color: #<?php echo $cssAttributes['buble_operator_other_text_color'];?>;\n}\n<?php endif; ?>\n\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['buble_operator_title_color'])) : ?>\n    .op-tit{\n        color: #<?php echo $cssAttributes['buble_operator_title_color'];?>\n    }\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['buble_operator_other_title_color'])) : ?>\n    div.other-operator .op-tit{\n        color: #<?php echo $cssAttributes['buble_operator_other_title_color'];?>\n    }\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['buble_visitor_text_color']) || isset($cssAttributes['buble_visitor_background'])) : ?>\n    div.message-row.response div.msg-body{\n        <?php if (isset($cssAttributes['buble_visitor_background'])) : ?>background-color: #<?php echo $cssAttributes['buble_visitor_background'];?>;<?php endif; ?>\n        <?php if (isset($cssAttributes['buble_visitor_text_color'])) : ?>color: #<?php echo $cssAttributes['buble_visitor_text_color'];?>;<?php endif; ?>\n    }\n\n    <?php if (isset($cssAttributes['buble_visitor_text_color'])) : ?>\n    div.message-row.response div.msg-body a.link{\n        <?php if (isset($cssAttributes['buble_visitor_text_color'])) : ?>color: #<?php echo $cssAttributes['buble_visitor_text_color'];?>;<?php endif; ?>\n    }\n    <?php endif; ?>\n\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['buble_visitor_title_color'])) : ?>\n    .vis-tit{\n        color: #<?php echo $cssAttributes['buble_visitor_title_color'];?>\n    }\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['chat_bg'])) : ?>\n    .msgBlock-admin{\n        background-color: #<?php echo $cssAttributes['chat_bg'];?>\n    }\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['time_color'])) : ?>\n    .msg-date{\n        color: #<?php echo $cssAttributes['time_color'];?>\n    }\n<?php endif; ?>\n\n\n<?php if (isset($cssAttributes['buble_sys_background']) || isset($cssAttributes['buble_sys_title_color']) ) : ?>\n    .sys-tit{\n        <?php if (isset($cssAttributes['buble_sys_background'])) : ?>background-color: #<?php echo $cssAttributes['buble_sys_background'];?>;<?php endif; ?>\n        <?php if (isset($cssAttributes['buble_sys_title_color'])) : ?>color: #<?php echo $cssAttributes['buble_sys_title_color'];?>;<?php endif; ?>\n    }\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['buble_sys_text_color'])) : ?>\ndiv.system-response div.msg-body,\ndiv.system-response div.msg-body a.link{\n    color: #<?php echo $cssAttributes['buble_sys_text_color'];?>\n}\n<?php endif; ?>\n\n<?php if (isset($cssAttributes['newm_color']) && !empty($cssAttributes['newm_color'])) : ?>\n    .new-msg-holder{\n        border-color: #<?php echo $cssAttributes['newm_color'];?>!important;\n    }\n    .new-msg-holder > span.new-msg{\n        background-color: #<?php echo $cssAttributes['newm_color'];?>!important;\n    }\n<?php endif; ?>\n\n<?php /*\n<div class=\"msgBlock\" style=\"\" id=\"messagesBlock\">\n    <div class=\"message-row response\" id=\"msg-10459\" data-op-id=\"0\">\n        <div class=\"msg-date\">10:14:39</div>\n        <span style=\"color:#{{bactract_bg_color_buble_visitor_title_color}}\" class=\"usr-tit vis-tit\" role=\"button\"><i class=\"material-icons chat-operators mi-fs15 mr-0\">account_box</i>Operator</span>\n        <div class=\"msg-body\" style=\"background-color: #{{bactract_bg_color_buble_visitor_background}};color:#{{bactract_bg_color_buble_visitor_text_color}}\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</div>\n    </div>\n    <div class=\"message-row message-admin operator-changes\" id=\"msg-10463\" data-op-id=\"1\">\n        <div class=\"msg-date\">10:18:22</div>\n        <span style=\"color:#{{bactract_bg_color_buble_operator_title_color}}\" class=\"usr-tit op-tit\" ><i class=\"material-icons chat-operators mi-fs15 mr-0\">face</i>Visitor</span>\n        <div class=\"msg-body\" style=\"color:#{{bactract_bg_color_buble_operator_text_color}};background-color: #{{bactract_bg_color_buble_operator_background}};\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</div>\n    </div>\n</div>*/\n</Code>\n\nFile: lhc_web/design/defaulttheme/tpl/lhtheme/adminthemeedit.tpl.php\nContent: \n<Code>\n<div class=\"row\">\n    <div class=\"col-10\"><h1><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('admintheme/form','Edit theme');?> - <?php echo htmlspecialchars($form->name)?></h1></div>\n    <?php /*?><div class=\"col-2\">\n        <a class=\"btn btn-secondary\" href=\"?export=1\"><i class=\"material-icons mr-0\">file_download</i></a>\n    </div>*/ ?>\n</div>\n\n<form action=\"<?php echo erLhcoreClassDesign::baseurl('theme/adminthemeedit')?>/<?php echo $form->id?>\" method=\"post\" autocomplete=\"off\" enctype=\"multipart/form-data\">\n\n    <?php if (isset($updated)) : $msg = erTranslationClassLhTranslation::getInstance()->getTranslation('admintheme/form','Updated'); ?>\n\t\t\t<?php include(erLhcoreClassDesign::designtpl('lhkernel/alert_success.tpl.php'));?>\n\t<?php endif; ?>\n\n    <?php include(erLhcoreClassDesign::designtpl('lhkernel/csfr_token.tpl.php'));?>\n\n    <?php include(erLhcoreClassDesign::designtpl('lhtheme/admin/form.tpl.php'));?>\n\n\t<div class=\"btn-group\" role=\"group\" aria-label=\"...\">\n      <input type=\"submit\" class=\"btn btn-secondary\" name=\"SaveAction\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Save');?>\"/>\n      <input type=\"submit\" class=\"btn btn-secondary\" name=\"UpdateAction\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Update');?>\"/>\n      <input type=\"submit\" class=\"btn btn-secondary\" name=\"CancelAction\" value=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('system/buttons','Cancel');?>\"/>\n    </div>\n\n</form>\n</Code>"
                }
            ],
            "url": "https://github.com/livehelperchat/livehelperchat/commit/bbfaa26ce54a2a86ce1a42a16496038f5bdfc102",
            "description": "Cross-site Scripting (XSS) - Stored in Packagist remdex/livehelperchat prior to 3.93v.",
            "date": "2022-01-26",
            "github_description": "In the operator chat, maybe whispered message should look different from normal messages. There is no distinction at the moment so this is confusing. Should be a different text or different bubble or something that can made a visible message to the user different from a whispering message that should be visible only from operators\nWhispered message are visible for visitor if they request chat transcript. This can create bad situation where operator messages whispered should be not visible to the visitor.\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "llm_raw_output": "{\n    \"CWE_IDS\": [],\n    \"severity\": null\n}",
            "llm_output": {
                "CWE_IDS": [],
                "severity": null
            },
            "ground_truth_CVE": "CVE-2022-0374",
            "ground_truth_CWEs": [
                "CWE-79"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "EMPTY_PR"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Fixes #\nShort description of what this resolves:\nChanges proposed in this pull request:\nFile: portal/patient/libs/Controller/OnsiteDocumentController.php\nContent: \n<Code>\n<?php\n\n/**\n * OnsiteDocumentController.php\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2016-2019 Jerry Padgett <sjpadgett@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\n/** import supporting libraries */\nrequire_once(\"AppBasePortalController.php\");\nrequire_once(\"Model/OnsiteDocument.php\");\n\n/**\n * OnsiteDocumentController is the controller class for the OnsiteDocument object.  The\n * controller is responsible for processing input from the user, reading/updating\n * the model as necessary and displaying the appropriate view.\n *\n * @package Patient Portal::Controller\n * @author ClassBuilder\n * @version 1.0\n */\nclass OnsiteDocumentController extends AppBasePortalController\n{\n    /**\n     * Override here for any controller-specific functionality\n     *\n     * @inheritdocs\n     */\n    protected function Init()\n    {\n        parent::Init();\n    }\n\n    /**\n     * Displays a list view of OnsiteDocument objects\n     */\n    public function ListView()\n    {\n        $recid = $pid = $user = $encounter =  0;\n        $is_module = $catid = 0;\n        $is_portal = GlobalConfig::$PORTAL;\n        $docid = $new_filename = \"\";\n        // get latest help template id\n        $help_id = sqlQuery('SELECT * FROM `document_templates` WHERE `template_name` = ? Order By modified_date DESC Limit 1', array('Help'))['id'] ?? 0;\n\n        if (isset($_GET['pid'])) {\n            $pid = (int) $_GET['pid'];\n        }\n\n        // only allow patient to see themselves\n        if (!empty($GLOBALS['bootstrap_pid'])) {\n            $pid = $GLOBALS['bootstrap_pid'];\n        }\n\n        if (isset($_GET['user'])) {\n            $user = $_GET['user'];\n        }\n\n        if (isset($_GET['docid'])) {\n            $docid = $_GET['docid'];\n        }\n\n        if (isset($_GET['enc'])) {\n            $encounter = (int) $_GET['enc'];\n        }\n\n        if (isset($_GET['recid'])) {\n            $recid = (int) $_GET['recid'];\n        }\n\n        if (isset($_GET['is_module'])) {\n            $is_module = $_GET['is_module'];\n        }\n\n        if (isset($_GET['catid'])) {\n            $catid = $_GET['catid'];\n        }\n        if (isset($_GET['new'])) {\n            $new_filename = $_GET['new'];\n        }\n        $this->Assign('recid', $recid);\n        $this->Assign('help_id', $help_id);\n        $this->Assign('cpid', $pid);\n        $this->Assign('cuser', $user);\n        $this->Assign('encounter', $encounter);\n        $this->Assign('docid', $docid);\n        $this->Assign('is_module', $is_module);\n        $this->Assign('is_portal', $is_portal);\n        $this->Assign('save_catid', $catid);\n        $this->Assign('new_filename', $new_filename);\n        $this->Render();\n    }\n\n    /**\n     * API Method queries for OnsiteDocument records and render as JSON\n     */\n    public function Query()\n    {\n        try {\n            $criteria = new OnsiteDocumentCriteria();\n            $pid = RequestUtil::Get('patientId');\n\n            // only allow patient to see themself\n            if (!empty($GLOBALS['bootstrap_pid'])) {\n                $pid = $GLOBALS['bootstrap_pid'];\n            }\n\n            $criteria->Pid_Equals = $pid;\n            $recid = RequestUtil::Get('recid');\n            if ($recid > 0) {\n                $criteria->Id_Equals = $recid;\n            }\n\n            $filter = RequestUtil::Get('filter');\n            if ($filter) {\n                $criteria->AddFilter(\n                    new CriteriaFilter('Id,Pid,Facility,Provider,Encounter,CreateDate,DocType,PatientSignedStatus,PatientSignedTime,AuthorizeSignedTime,\n\t\t\t\t\t\tAcceptSignedStatus,AuthorizingSignator,ReviewDate,DenialReason,AuthorizedSignature,PatientSignature,FullDocument,FileName,FilePath', '%' . $filter . '%')\n                );\n            }\n\n            // TODO: this is generic query filtering based only on criteria properties\n            foreach (array_keys($_REQUEST) as $prop) {\n                $prop_normal = ucfirst($prop);\n                $prop_equals = $prop_normal . '_Equals';\n\n                if (property_exists($criteria, $prop_normal)) {\n                    $criteria->$prop_normal = RequestUtil::Get($prop);\n                } elseif (property_exists($criteria, $prop_equals)) {\n                    // this is a convenience so that the _Equals suffix is not needed\n                    $criteria->$prop_equals = RequestUtil::Get($prop);\n                }\n            }\n\n            $output = new stdClass();\n\n            // if a sort order was specified then specify in the criteria\n            $output->orderBy = RequestUtil::Get('orderBy');\n            $output->orderDesc = RequestUtil::Get('orderDesc') != '';\n            if ($output->orderBy) {\n                $criteria->SetOrder($output->orderBy, $output->orderDesc);\n            }\n\n            $page = RequestUtil::Get('page');\n\n            if (!empty($page)) {\n                // if page is specified, use this instead (at the expense of one extra count query)\n                $pagesize = $this->GetDefaultPageSize();\n\n                $onsitedocuments = $this->Phreezer->Query('OnsiteDocument', $criteria)->GetDataPage($page, $pagesize);\n                $output->rows = $onsitedocuments->ToObjectArray(true, $this->SimpleObjectParams());\n                $output->totalResults = $onsitedocuments->TotalResults;\n                $output->totalPages = $onsitedocuments->TotalPages;\n                $output->pageSize = $onsitedocuments->PageSize;\n                $output->currentPage = $onsitedocuments->CurrentPage;\n            } else {\n                // return all results\n                $onsitedocuments = $this->Phreezer->Query('OnsiteDocument', $criteria);\n                $output->rows = $onsitedocuments->ToObjectArray(true, $this->SimpleObjectParams());\n                $output->totalResults = count($output->rows);\n                $output->totalPages = 1;\n                $output->pageSize = $output->totalResults;\n                $output->currentPage = 1;\n            }\n\n\n            $this->RenderJSON($output, $this->JSONPCallback());\n        } catch (Exception $ex) {\n            $this->RenderExceptionJSON($ex);\n        }\n    }\n\n    /**\n     * @return void\n     */\n    public function SingleView()\n    {\n        $rid = $pid = $user = $encounter = 0;\n        if (isset($_GET['id'])) {\n            $rid = (int) $_GET['id'];\n        }\n\n        if (isset($_GET['pid'])) {\n            $pid = (int) $_GET['pid'];\n        }\n\n        // only allow patient to see themself\n        if (!empty($GLOBALS['bootstrap_pid'])) {\n            $pid = $GLOBALS['bootstrap_pid'];\n        }\n\n        if (isset($_GET['user'])) {\n            $user = $_GET['user'];\n        }\n\n        if (isset($_GET['enc'])) {\n            $encounter = $_GET['enc'];\n        }\n\n        $this->Assign('recid', $rid);\n        $this->Assign('cpid', $pid);\n        $this->Assign('cuser', $user);\n        $this->Assign('encounter', $encounter);\n        $this->Render();\n    }\n    /**\n     * API Method retrieves a single OnsiteDocument record and render as JSON\n     */\n    public function Read()\n    {\n        try {\n            $pk = $this->GetRouter()->GetUrlParam('id');\n            $onsitedocument = $this->Phreezer->Get('OnsiteDocument', $pk);\n\n            // only allow patient to see themself\n            if (!empty($GLOBALS['bootstrap_pid'])) {\n                if ($GLOBALS['bootstrap_pid'] != $onsitedocument->Pid) {\n                    $error = 'Unauthorized';\n                    throw new Exception($error);\n                }\n            }\n\n            $this->RenderJSON($onsitedocument, $this->JSONPCallback(), true, $this->SimpleObjectParams());\n        } catch (Exception $ex) {\n            $this->RenderExceptionJSON($ex);\n        }\n    }\n\n    /**\n     * API Method inserts a new OnsiteDocument record and render response as JSON\n     */\n    public function Create()\n    {\n        try {\n            $json = json_decode(RequestUtil::GetBody());\n\n            if (!$json) {\n                throw new Exception('The request body does not contain valid JSON');\n            }\n\n            $onsitedocument = new OnsiteDocument($this->Phreezer);\n\n            // only allow patient to add to themselves\n            if (!empty($GLOBALS['bootstrap_pid'])) {\n                $onsitedocument->Pid = $GLOBALS['bootstrap_pid'];\n            } else {\n                $onsitedocument->Pid = $this->SafeGetVal($json, 'pid');\n            }\n\n            if (!empty($_SESSION[\"patient_portal_onsite_two\"] ?? null)) {\n                $decode = $this->SafeGetVal($json, 'fullDocument');\n                $k = (int)$this->SafeGetVal($json, 'csrf_token_form')[0];\n                $json->fullDocument = $this->decode($decode, $k);\n            }\n\n            $onsitedocument->Facility = $this->SafeGetVal($json, 'facility');\n            $onsitedocument->Provider = $this->SafeGetVal($json, 'provider');\n            $onsitedocument->Encounter = $this->SafeGetVal($json, 'encounter');\n            $onsitedocument->CreateDate = date('Y-m-d H:i:s', strtotime($this->SafeGetVal($json, 'createDate')));\n            $onsitedocument->DocType = $this->SafeGetVal($json, 'docType');\n            $onsitedocument->PatientSignedStatus = $this->SafeGetVal($json, 'patientSignedStatus');\n            $onsitedocument->PatientSignedTime = date('Y-m-d H:i:s', strtotime($this->SafeGetVal($json, 'patientSignedTime')));\n            $onsitedocument->AuthorizeSignedTime = date('Y-m-d H:i:s', strtotime($this->SafeGetVal($json, 'authorizeSignedTime')));\n            $onsitedocument->AcceptSignedStatus = $this->SafeGetVal($json, 'acceptSignedStatus');\n            $onsitedocument->AuthorizingSignator = $this->SafeGetVal($json, 'authorizingSignator');\n            $onsitedocument->ReviewDate = date('Y-m-d H:i:s', strtotime($this->SafeGetVal($json, 'reviewDate')));\n            $onsitedocument->DenialReason = $this->SafeGetVal($json, 'denialReason');\n            $onsitedocument->AuthorizedSignature = $this->SafeGetVal($json, 'authorizedSignature');\n            $onsitedocument->PatientSignature = $this->SafeGetVal($json, 'patientSignature');\n            $onsitedocument->FullDocument = $this->SafeGetVal($json, 'fullDocument');\n            $onsitedocument->FileName = $this->SafeGetVal($json, 'fileName');\n            $onsitedocument->FilePath = $this->SafeGetVal($json, 'filePath');\n\n            $onsitedocument->Validate();\n            $errors = $onsitedocument->GetValidationErrors();\n\n            if (count($errors) > 0) {\n                $this->RenderErrorJSON('Please check the form for errors', $errors);\n            } else {\n                $onsitedocument->Save();\n                $this->RenderJSON($onsitedocument, $this->JSONPCallback(), true, $this->SimpleObjectParams());\n            }\n        } catch (Exception $ex) {\n            $this->RenderExceptionJSON($ex);\n        }\n    }\n\n    /**\n     * API Method updates an existing OnsiteDocument record and render response as JSON\n     */\n    public function Update()\n    {\n        try {\n            $json = json_decode(RequestUtil::GetBody());\n\n            if (!$json) {\n                throw new Exception('The request body does not contain valid JSON');\n            }\n            $pk = $this->GetRouter()->GetUrlParam('id');\n            $onsitedocument = $this->Phreezer->Get('OnsiteDocument', $pk);\n\n            // only allow patient to update themselves (part 1)\n            if (!empty($GLOBALS['bootstrap_pid'])) {\n                if ($GLOBALS['bootstrap_pid'] != $onsitedocument->Pid) {\n                    $error = 'Unauthorized';\n                    throw new Exception($error);\n                }\n            }\n\n            // only allow patient to update themselves (part 2)\n            if (!empty($GLOBALS['bootstrap_pid'])) {\n                $onsitedocument->Pid = $GLOBALS['bootstrap_pid'];\n            } else {\n                $onsitedocument->Pid = $this->SafeGetVal($json, 'pid', $onsitedocument->Pid);\n            }\n\n            if (!empty($_SESSION[\"patient_portal_onsite_two\"] ?? null)) {\n                $decode = $this->SafeGetVal($json, 'fullDocument');\n                $k = (int)$this->SafeGetVal($json, 'csrf_token_form')[0];\n                $json->fullDocument = $this->decode($decode, $k);\n            }\n\n            $onsitedocument->Facility = $this->SafeGetVal($json, 'facility', $onsitedocument->Facility);\n            $onsitedocument->Provider = $this->SafeGetVal($json, 'provider', $onsitedocument->Provider);\n            $onsitedocument->Encounter = $this->SafeGetVal($json, 'encounter', $onsitedocument->Encounter);\n            $onsitedocument->CreateDate = date('Y-m-d H:i:s', strtotime($this->SafeGetVal($json, 'createDate', $onsitedocument->CreateDate)));\n            $onsitedocument->DocType = $this->SafeGetVal($json, 'docType', $onsitedocument->DocType);\n            $onsitedocument->PatientSignedStatus = $this->SafeGetVal($json, 'patientSignedStatus', $onsitedocument->PatientSignedStatus);\n            $onsitedocument->PatientSignedTime = date('Y-m-d H:i:s', strtotime($this->SafeGetVal($json, 'patientSignedTime', $onsitedocument->PatientSignedTime)));\n            $onsitedocument->AuthorizeSignedTime = date('Y-m-d H:i:s', strtotime($this->SafeGetVal($json, 'authorizeSignedTime', $onsitedocument->AuthorizeSignedTime)));\n            $onsitedocument->AcceptSignedStatus = $this->SafeGetVal($json, 'acceptSignedStatus', $onsitedocument->AcceptSignedStatus);\n            $onsitedocument->AuthorizingSignator = $this->SafeGetVal($json, 'authorizingSignator', $onsitedocument->AuthorizingSignator);\n            $onsitedocument->ReviewDate = date('Y-m-d H:i:s', strtotime($this->SafeGetVal($json, 'reviewDate', $onsitedocument->ReviewDate)));\n            $onsitedocument->DenialReason = $this->SafeGetVal($json, 'denialReason', $onsitedocument->DenialReason);\n            $onsitedocument->AuthorizedSignature = $this->SafeGetVal($json, 'authorizedSignature', $onsitedocument->AuthorizedSignature);\n            $onsitedocument->PatientSignature = $this->SafeGetVal($json, 'patientSignature', $onsitedocument->PatientSignature);\n            $onsitedocument->FullDocument = $this->SafeGetVal($json, 'fullDocument', $onsitedocument->FullDocument);\n            $onsitedocument->FileName = $this->SafeGetVal($json, 'fileName', $onsitedocument->FileName);\n            $onsitedocument->FilePath = $this->SafeGetVal($json, 'filePath', $onsitedocument->FilePath);\n\n            $onsitedocument->Validate();\n            $errors = $onsitedocument->GetValidationErrors();\n\n            if (count($errors) > 0) {\n                $this->RenderErrorJSON('Please check the form for errors', $errors);\n            } else {\n                $onsitedocument->Save();\n                $this->RenderJSON($onsitedocument, $this->JSONPCallback(), true, $this->SimpleObjectParams());\n            }\n        } catch (Exception $ex) {\n            $this->RenderExceptionJSON($ex);\n        }\n    }\n\n    /**\n     * API Method deletes an existing OnsiteDocument record and render response as JSON\n     */\n    public function Delete()\n    {\n        try {\n            // TODO: if a soft delete is prefered, change this to update the deleted flag instead of hard-deleting\n\n            $pk = $this->GetRouter()->GetUrlParam('id');\n            $onsitedocument = $this->Phreezer->Get('OnsiteDocument', $pk);\n\n            // only allow patient to delete themselves\n            if (!empty($GLOBALS['bootstrap_pid'])) {\n                if ((int)$GLOBALS['bootstrap_pid'] !== (int)$onsitedocument->Pid) {\n                    $error = 'Unauthorized';\n                    throw new Exception($error);\n                }\n            }\n\n            $onsitedocument->Delete();\n\n            $output = new stdClass();\n\n            $this->RenderJSON($output, $this->JSONPCallback());\n        } catch (Exception $ex) {\n            $this->RenderExceptionJSON($ex);\n        }\n    }\n\n    /**\n     * @param $encoded\n     * @param $v\n     * @return bool|string\n     */\n    private function decode($encoded, $v): bool|string\n    {\n        $encoded = base64_decode($encoded);\n        $decoded = \"\";\n        for ($i = 0; $i < strlen($encoded); $i++) {\n            $b = ord($encoded[$i]);\n            $a = $b ^ $v;\n            $decoded .= chr($a);\n        }\n        return base64_decode(base64_decode($decoded));\n    }\n}\n</Code>\n\nFile: portal/patient/scripts/app/onsitedocuments.js\nContent: \n<Code>\n/**\n * View logic for OnsiteDocuments\n *\n * application logic specific to the OnsiteDocument listing page\n *\n * @package   OpenEMR\n * @link      https://www.open-emr.org\n * @author    Jerry Padgett <sjpadgett@gmail.com>\n * @copyright Copyright (c) 2016-2022 Jerry Padgett <sjpadgett@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nvar page = {\n    onsiteDocuments: new model.OnsiteDocumentCollection(),\n    collectionView: null,\n    onsiteDocument: null,\n    modelView: null,\n    isInitialized: false,\n    isInitializing: false,\n    isSaved: true,\n    isNewDoc: false,\n    fetchParams: {filter: '', orderBy: '', orderDesc: '', page: 1, patientId: cpid, recid: recid},\n    fetchInProgress: false,\n    dialogIsOpen: false,\n    isLocked: false,\n    isCharted: false,\n    isDashboard: (!isModule && !isPortal),\n    isQuestionnaire: '',\n    encounterFormId: 0,\n    isFrameForm: 0,\n    encounterFormName: \"\",\n    formOrigin: 0, // default portal\n    presentPatientSignature: false,\n    presentAdminSignature: false,\n    presentWitnessSignature: false,\n    signaturesRequired: false,\n\n    init: function () {\n        // ensure initialization only occurs once\n        if (page.isInitialized || page.isInitializing) {\n            return;\n        }\n        page.isInitializing = true;\n\n        if (!$.isReady && console) {\n            console.warn('page was initialized before dom is ready.  views may not render properly.');\n        }\n\n        // make the new button clickable\n        $(\"#newOnsiteDocumentButton\").click(function (e) {\n            e.preventDefault();\n            page.showDetailDialog();\n        });\n\n        // initialize the collection view\n        this.collectionView = new view.CollectionView({\n            el: $(\"#onsiteDocumentCollectionContainer\"),\n            templateEl: $(\"#onsiteDocumentCollectionTemplate\"),\n            collection: page.onsiteDocuments\n        });\n\n        // initialize the search filter\n        $('#filter').change(function (obj) {\n            page.fetchParams.filter = $('#filter').val();\n            page.fetchParams.page = 1;\n            page.fetchOnsiteDocuments(page.fetchParams);\n        });\n\n        // make the rows clickable ('rendered' is a custom event, not a standard backbone event)\n        this.collectionView.on('rendered', function () {\n            if (page.isDashboard) {\n                $(\"#topnav\").hide();\n            }\n            // attach click handler to the table rows for editing\n            $('table.collection tbody tr').click(function (e) {\n                e.preventDefault();\n                $(\"html, body\").animate({\n                    scrollTop: 0\n                }, \"slow\");\n                let m = page.onsiteDocuments.get(this.id);\n                page.showDetailDialog(m);\n            });\n            // make the headers clickable for sorting\n            $('table.collection thead tr th').unbind().on('click', function (e) {\n                e.preventDefault();\n                let prop = this.id.replace('header_', '');\n                // toggle the ascending/descending before we change the sort prop\n                page.fetchParams.orderDesc = (prop == page.fetchParams.orderBy && !page.fetchParams.orderDesc) ? '1' : '';\n                page.fetchParams.orderBy = prop;\n                page.fetchParams.page = 1;\n                page.fetchOnsiteDocuments(page.fetchParams);\n            });\n            // attach click handlers to the pagination controls\n            $('.pageButton').click(function (e) {\n                e.preventDefault();\n                page.fetchParams.page = this.id.substr(5);\n                page.fetchOnsiteDocuments(page.fetchParams);\n            });\n            $('.template-item').unbind().on('click', function (e) {\n                if (!isModule) {\n                    $(\"#topnav\").hide();\n                    parent.document.getElementById('topNav').classList.add('collapse');\n                }\n            });\n            page.isInitialized = true;\n            page.isInitializing = false;\n            // if dashboard let's open first doc for review.\n            if (page.isDashboard) {\n                $('table.collection tbody tr:first').click();\n            }\n        });\n// ---------  Get Collection ------------------------//\n        this.fetchOnsiteDocuments(page.fetchParams);\n\n        // initialize the model view\n        this.modelView = new view.ModelView({\n            el: $(\"#onsiteDocumentModelContainer\")\n        });\n\n        // tell the model view where it's template is located\n        this.modelView.templateEl = $(\"#onsiteDocumentModelTemplate\");\n\n        // template rendered ready\n        this.modelView.on('rendered', function () {\n            $('#templatecontent').on('focus', \".datepicker:not(.hasDatepicker)\", function () {\n                $(\".datepicker\").datetimepicker({\n                    i18n: {\n                        en: {\n                            months: datepicker_xlMonths,\n                            dayOfWeekShort: datepicker_xlDayofwkshort,\n                            dayOfWeek: datepicker_xlDayofwk\n                        },\n                    },\n                    yearStart: datepicker_yearStart,\n                    rtl: datepicker_rtl,\n                    format: datepicker_format,\n                    scrollInput: datepicker_scrollInput,\n                    scrollMonth: datepicker_scrollMonth,\n                    timepicker: false\n                });\n            })\n            $(\"#templatecontent\").on('focus', \".datetimepicker:not(.hasDatetimepicker)\", function () {\n                $(\".datetimepicker\").datetimepicker({\n                    i18n: {\n                        en: {\n                            months: datetimepicker_xlMonths,\n                            dayOfWeekShort: datetimepicker_xlDayofwkshort,\n                            dayOfWeek: datetimepicker_xlDayofwk\n                        },\n                    },\n                    yearStart: datetimepicker_yearStart,\n                    rtl: datetimepicker_rtl,\n                    format: datetimepicker_format,\n                    step: datetimepicker_step,\n                    scrollInput: datepicker_scrollInput,\n                    scrollMonth: datepicker_scrollMonth,\n                    timepicker: true\n                });\n            });\n\n            docid = page.onsiteDocument.get('docType');\n            page.isLocked = (page.onsiteDocument.get('denialReason') === 'Locked');\n            (page.isLocked) ? $(\"#printTemplate\").show() : $(\"#printTemplate\").hide();\n            $(\"#chartHistory\").hide();\n\n\n            page.getDocument(page.onsiteDocument.get('docType'), cpid, page.onsiteDocument.get('filePath'));\n            if (page.isDashboard) { // review\n                flattenDocument();\n            }\n            pageAudit.fetchParams.doc = page.onsiteDocument.get('id');\n            pageAudit.fetchOnsitePortalActivities(pageAudit.fetchParams);\n\n            if (page.isLocked) {\n                $('#patientSignature').off();\n                $('#patientSignature').css('cursor', 'default');\n                $('#adminSignature').off();\n                $('#adminSignature').css('cursor', 'default');\n                $('#witnessSignature').css('cursor', 'default');\n                $('#witnessSignature').off();\n            } else if (!isModule) {\n                // disable signatures in appropriate views\n                if (!isPortal) {\n                    $('#patientSignature').css('cursor', 'default');\n                    $('#patientSignature').off();\n                    $('#witnessSignature').css('cursor', 'default');\n                    $('#witnessSignature').off();\n                } else {\n                    $('#adminSignature').css('cursor', 'default');\n                    $('#adminSignature').off();\n                }\n            }\n            if (!isPortal) {\n                $(\"#signTemplate\").hide();\n                $(\"#Help\").hide();\n                $(\"#showNav\").hide();\n                if (page.isCharted || page.isLocked) {\n                    $(\"#chartTemplate\").hide();\n                    $(\"#chartHistory\").hide();\n                    page.encounterFormName = '';\n                    page.isFrameForm = 0;\n                } else {\n                    $(\"#chartTemplate\").show();\n                }\n                (isModule || page.isDashboard) ? $(\"#printTemplate\").show() : $(\"#printTemplate\").hide();\n                $(\"#submitTemplate\").hide();\n                $(\"#sendTemplate\").hide();\n                $(\"#downloadTemplate\").hide();\n                isModule ? $(\"#dismissOnsiteDocumentButton\").show() : $(\"#dismissOnsiteDocumentButton\").hide();\n                ((isModule || page.isFrameForm) && !page.isLocked) ? $(\"#saveTemplate\").show() : $(\"#saveTemplate\").hide();\n                isModule ? $(\"#homeTemplate\").show() : $(\"#homeTemplate\").hide();\n                (page.encounterFormName === 'HIS' && !page.isLocked) ? $(\"#chartHistory\").show() : $(\"#chartHistory\").hide();\n\n                $(\"#chartTemplate\").unbind().on('click', function (e) {\n                    e.preventDefault();\n                    if (page.isFrameForm) {\n                        let formFrame = document.getElementById('encounterForm');\n                        $(window).one(\"message onmessage\", (e) => {\n                            if (event.origin !== window.location.origin) {\n                                signerAlertMsg(\"Remote is not same origin!)\", 15000);\n                                return false;\n                            }\n                            if (isModule || page.isFrameForm) {\n                                model.reloadCollectionOnModelUpdate = false;\n                            }\n                            page.encounterFormId = e.originalEvent.data.formid;\n                            page.onsiteDocument.set('encounter', page.encounterFormId);\n                            let url = '';\n                            if (page.encounterFormName.startsWith('LBF') || page.encounterFormName.startsWith('HIS')) {\n                                url = webroot_url +\n                                    \"/interface/forms/LBF/printable.php?return_content=\" +\n                                    \"&formname=\" + encodeURIComponent(page.encounterFormName) +\n                                    \"&formid=\" + encodeURIComponent(page.encounterFormId) +\n                                    \"&visitid=0&patientid=\" + encodeURIComponent(cpid);\n                            } else {\n                                // first, ensure form name is valid\n                                if (!page.verifyValidEncounterForm(page.encounterFormName)) {\n                                    signerAlertMsg(\"There is an issue loading form. Form does not exist.\");\n                                    return false;\n                                }\n                                url = webroot_url +\n                                    \"/interface/forms/\" + encodeURIComponent(page.encounterFormName) + \"/patient_portal.php\" +\n                                    \"?formid=\" + encodeURIComponent(page.encounterFormId);\n                                if (page.isQuestionnaire) {\n                                    url = webroot_url +\n                                        \"/interface/forms/questionnaire_assessments/patient_portal.php\" +\n                                        \"?formid=\" + encodeURIComponent(page.encounterFormId);\n                                }\n                            }\n                            fetch(url).then(response => {\n                                if (!response.ok) {\n                                    throw new Error('Network Error.');\n                                }\n                                return response.json()\n                            }).then(content => {\n                                flattenDocument();\n                                let templateContents = document.getElementById('templatecontent').innerHTML;\n                                templateContents = templateContents.replace(/<script.*?>.*?<\\/script>/ig, '');\n                                templateContents = templateContents.replace(/(<\\/iframe>)/g, '');\n                                content = templateContents.replace(/(<iframe[^>]+>)/g, content);\n                                if (content) {\n                                    page.chartTemplate(content);\n                                }\n                            }).catch(error => {\n                                console.error('Error:', error);\n                                alert(error);\n                            });\n                        });\n                        // request a save for lbf\n                        formFrame.contentWindow.postMessage({submitForm: true}, window.location.origin);\n                    } else {\n                        page.chartTemplate('', 'flat');\n                    }\n                });\n\n                $(\"#downloadTemplate\").unbind().on('click', function (e) {\n                    // just render the existing model and not save template.\n                    // For downloads, we just want to give user a chance to dispose/view rendered\n                    // document and leave template intact for further edits before charting.\n                    // I'm still unsure how useful a download is as to when to finish a review, charting document\n                    // is necessary. I know eventually, I can do better:)\n                    e.preventDefault();\n                    if (page.isFrameForm) {\n                        let formFrame = document.getElementById('encounterForm');\n                        let frameDocument = formFrame.contentDocument || formFrame.contentWindow.document;\n                        // we don't want events piling up so this is a one shot.\n                        $(window).one(\"message onmessage\", (e) => {\n                            if (event.origin !== window.location.origin) {\n                                signerAlertMsg(\"Remote is not same origin!)\", 15000);\n                                return false;\n                            }\n                            if (isModule || page.isFrameForm) {\n                                model.reloadCollectionOnModelUpdate = false;\n                            }\n                            page.encounterFormId = e.originalEvent.data.formid;\n                            page.onsiteDocument.set('encounter', page.encounterFormId);\n                            let url = '';\n                            if (page.encounterFormName.startsWith('LBF') || page.encounterFormName.startsWith('HIS')) {\n                                url = webroot_url +\n                                    \"/interface/forms/LBF/printable.php?return_content=\" +\n                                    \"&formname=\" + encodeURIComponent(page.encounterFormName) +\n                                    \"&formid=\" + encodeURIComponent(page.encounterFormId) +\n                                    \"&visitid=0&patientid=\" + encodeURIComponent(cpid);\n                            } else {\n                                // first, ensure form name is valid\n                                if (!page.verifyValidEncounterForm(page.encounterFormName)) {\n                                    signerAlertMsg(\"There is an issue loading form. Form does not exist.\");\n                                    return false;\n                                }\n                                url = webroot_url +\n                                    \"/interface/forms/\" + encodeURIComponent(page.encounterFormName) + \"/patient_portal.php\" +\n                                    \"?formid=\" + encodeURIComponent(page.encounterFormId);\n                                if (page.isQuestionnaire) {\n                                    url = webroot_url +\n                                        \"/interface/forms/questionnaire_assessments/patient_portal.php\" +\n                                        \"?formid=\" + encodeURIComponent(page.encounterFormId);\n                                }\n                            }\n                            fetch(url).then(response => {\n                                if (!response.ok) {\n                                    throw new Error('Network Error LBF Render.');\n                                }\n                                return response.json();\n                            }).then(documentContents => {\n                                if (documentContents) {\n                                    page.updateModel();\n                                    flattenDocument();\n                                    $(\"#cpid\").val(cpid);\n                                    $(\"#docid\").val(docid);\n                                    $(\"#handler\").val('download');\n                                    $(\"#status\").val('downloaded');\n\n                                    let templateContents = document.getElementById('templatecontent').innerHTML;\n                                    templateContents = templateContents.replace(/(<\\/iframe>)/g, '')\n                                    documentContents = templateContents.replace(/(<iframe[^>]+>)/g, documentContents);\n                                    $(\"#content\").val(documentContents);\n                                    signerAlertMsg(\"Waiting for Download.\", 6500, \"info\");\n                                    $(\"#template\").submit();\n\n                                    page.renderModelView(false);\n                                }\n                            }).catch(error => {\n                                alert(error);\n                                console.error('Error:', error);\n                            });\n                        });\n                        // request a save for lbf\n                        formFrame.contentWindow.postMessage({submitForm: true}, window.location.origin);\n                    } else {\n                        // don't save let charting do that.\n                        flattenDocument();\n                        let documentContents = document.getElementById('templatecontent').innerHTML;\n                        $(\"#content\").val(documentContents);\n                        $(\"#template\").submit();\n                        signerAlertMsg(xl('Downloading Document!'), 1000, 'success', 'lg');\n\n                        page.renderModelView(false);\n                    }\n                });\n            } else {\n                $(\"#downloadTemplate\").hide();\n                $(\"#chartTemplate\").hide();\n                $(\"#chartHistory\").hide();\n                page.isLocked ? $(\"#saveTemplate\").hide() : $(\"#saveTemplate\").show();\n                page.isLocked ? $(\"#sendTemplate\").hide() : $(\"#sendTemplate\").show();\n                page.isLocked ? $(\"#submitTemplate\").show() : $(\"#submitTemplate\").hide();\n            }\n\n            $(\"#saveTemplate\").unbind().on('click', function (e) {\n                e.preventDefault();\n                if (page.isFrameForm) {\n                    let formFrame = document.getElementById('encounterForm');\n                    page.encounterFormId = 0;\n                    $(window).one(\"message onmessage\", (e) => {\n                        if (event.origin !== window.location.origin) {\n                            signerAlertMsg(\"Remote is not same origin!)\", 15000);\n                            return false;\n                        }\n                        model.reloadCollectionOnModelUpdate = false;\n                        page.encounterFormId = e.originalEvent.data.formid;\n                        page.onsiteDocument.set('encounter', page.encounterFormId);\n                        if (page.onsiteDocument.get('denialReason') === 'In Review') {\n                            pageAudit.onsitePortalActivity.set('status', 'waiting');\n                        } else {\n                            page.onsiteDocument.set('denialReason', 'Editing');\n                            pageAudit.onsitePortalActivity.set('status', 'editing');\n                        }\n                        // save lbf iframe template\n                        page.updateModel(true);\n                    });\n                    // post to submit and save content remote form.\n                    formFrame.contentWindow.postMessage({submitForm: true}, window.location.origin);\n                } else {\n                    if (page.onsiteDocument.get('denialReason') === 'In Review') {\n                        pageAudit.onsitePortalActivity.set('status', 'waiting');\n                    } else {\n                        page.onsiteDocument.set('denialReason', 'Editing');\n                        pageAudit.onsitePortalActivity.set('status', 'editing');\n                    }\n                    page.updateModel(true);\n                }\n            });\n\n            // send to review and save current\n            $(\"#sendTemplate\").unbind().on('click', function (e) {\n                e.preventDefault();\n                if (page.isFrameForm) {\n                    let formFrame = document.getElementById('encounterForm');\n                    let frameDocument = formFrame.contentDocument || formFrame.contentWindow.document;\n                    $(window).one(\"message onmessage\", (e) => {\n                        if (event.origin !== window.location.origin) {\n                            signerAlertMsg(\"Remote is not same origin!)\", 15000);\n                            return false;\n                        }\n                        model.reloadCollectionOnModelUpdate = false;\n                        page.encounterFormId = e.originalEvent.data.formid;\n                        page.onsiteDocument.set('encounter', page.encounterFormId);\n                        pageAudit.onsitePortalActivity.set('status', 'waiting');\n                        page.onsiteDocument.set('denialReason', 'In Review');\n                        // save lbf iframe template\n                        page.updateModel(true);\n                    });\n                    // post to submit and save content remote form.\n                    formFrame.contentWindow.postMessage({submitForm: true}, window.location.origin);\n                } else {\n                    model.reloadCollectionOnModelUpdate = false;\n                    var documentContents = document.getElementById('templatecontent').innerHTML;\n                    $(\"#content\").val(documentContents);\n                    pageAudit.onsitePortalActivity.set('status', 'waiting');\n                    page.onsiteDocument.set('denialReason', 'In Review');\n                    page.updateModel(true);\n                }\n            });\n\n            // download from portal\n            $(\"#submitTemplate\").unbind().on('click', function () {\n                if (page.onsiteDocument.get('denialReason') === 'In Review') {\n                    pageAudit.onsitePortalActivity.set('status', 'waiting');\n                } else {\n                    pageAudit.onsitePortalActivity.set('status', 'editing');\n                    flattenDocument();\n                }\n                var documentContents = document.getElementById('templatecontent').innerHTML;\n                $(\"#docid\").val(docid);\n                $(\"#content\").val(documentContents);\n\n                $(\"#template\").submit();\n\n                page.updateModel();\n            });\n\n            $(\"#chartHistory\").unbind().on('click', function () {\n                if (page.isFrameForm) {\n                    let formFrame = document.getElementById('encounterForm');\n                    page.encounterFormId = 0;\n                    $(window).one(\"message onmessage\", (e) => {\n                        if (event.origin !== window.location.origin) {\n                            signerAlertMsg(\"Remote is not same origin!)\", 15000);\n                            return false;\n                        }\n                        // cool it just in case then save history to chart.\n                        setTimeout(\"page.chartHistory();\", 1000);\n                    });\n                    // post to submit\n                    formFrame.contentWindow.postMessage({submitForm: true}, window.location.origin);\n                }\n            });\n\n            $('.navCollapse .dropdown-menu>a').on('click', function () {\n                $('.navbar-collapse').collapse('hide');\n            });\n\n            $('.navCollapse li.nav-item>a').on('click', function () {\n                $('.navbar-collapse').collapse('hide');\n            });\n        });\n\n        if (newFilename) { // autoload new on init. once only.\n            page.newDocument(cpid, cuser, newFilename, id);\n            newFilename = '';\n        }\n\n        page.formOrigin = isPortal ? 0 : isModule ? 2 : 1;\n    },\n// page scoped functions\n    verifyValidEncounterForm: function (form) {\n        let formNameValid = false;\n        if (page.isQuestionnaire) {\n            form = 'questionnaire_assessments';\n        }\n        for (let k = 0; k < formNamesWhitelist.length; k++) {\n            if (formNamesWhitelist[k] == form) {\n                formNameValid = true;\n            }\n        }\n        return formNameValid;\n    },\n    handleHistoryView: function () {\n        let historyHide = $('.historyHide');\n        historyHide.toggleClass('d-none');\n        if (historyHide.hasClass('d-none')) {\n            $('.modelContainer').removeClass(\"d-none\");\n            //document.getElementById('verytop').scrollIntoView({behavior: 'smooth'})\n        } else {\n            $('.modelContainer').addClass(\"d-none\");\n        }\n        $('.history-direction').toggleClass(\"fa-arrow-down\").toggleClass(\"fa-arrow-up\");\n    },\n    /**\n     * Fetch the passed in document id in editing status\n     * @param id the document id in edit mode from history\n     */\n    editHistoryDocument: function (id) {\n        event.preventDefault();\n        let m = page.onsiteDocuments.get(id);\n        page.showDetailDialog(m);\n    },\n    chartHistory: function () {\n        let formFrame = document.getElementById('encounterForm');\n        formFrame.contentWindow.postMessage({submitForm: 'history'}, window.location.origin);\n    },\n    chartTemplate: function (documentContents = '', type = '') {\n        if (type === 'flat') {\n            flattenDocument();\n            documentContents = document.getElementById('templatecontent').innerHTML;\n        }\n        $(\"#docid\").val(docid);\n        $(\"#handler\").val('chart');\n        $(\"#status\").val('charted');\n\n        signerAlertMsg(alertMsg1, 3000, \"warning\");\n        let posting = $.post(\"./../lib/doc_lib.php\", {\n            csrf_token_form: csrfTokenDoclib,\n            cpid: cpid,\n            docid: docid,\n            catid: catid,\n            content: documentContents,\n            handler: \"chart\"\n        });\n        posting.done(function (rtn) {\n            if (rtn.indexOf(\"ERROR\") !== -1) {\n                alert(rtn);\n                return false;\n            }\n            page.isCharted = true;\n            page.isLocked = true;\n            $(\"#chartTemplate\").hide();\n            $(\"#chartHistory\").hide();\n            $(\"#saveTemplate\").hide();\n            page.isFrameForm = false;\n            page.encounterFormName = '';\n            if (isModule || page.isFrameForm) {\n                model.reloadCollectionOnModelUpdate = false;\n            }\n            $('#templatecontent').html(documentContents);\n            page.updateModel();\n        });\n    },\n    /**\n     * Fetch the collection data from the server\n     * @param params\n     * @param hideLoader\n     */\n    fetchOnsiteDocuments: function (params, hideLoader) {\n        // persist the params so that paging/sorting/filtering will play together nicely\n        page.fetchParams = params;\n        if (page.fetchInProgress) {\n            if (console) {\n                console.log('suppressing fetch because it is already in progress');\n            }\n        }\n        page.fetchInProgress = true;\n        if (!hideLoader) {\n            app.showProgress('loader');\n        }\n\n        page.onsiteDocuments.fetch({\n            data: params,\n            success: function () {\n                if (page.onsiteDocuments.collectionHasChanged) {\n                }\n                app.hideProgress('loader');\n                page.fetchInProgress = false;\n            },\n            error: function (m, r) {\n                app.appendAlert(app.getErrorMessage(r), 'alert-error', 0, 'collectionAlert');\n                app.hideProgress('loader');\n                page.fetchInProgress = false;\n            }\n        });\n    },\n\n    newDocument: function (pid, user, templateName, template_id) {\n        docid = templateName;\n        cuser = cuser > '' ? cuser : user;\n        cpid = cpid > '0' ? cpid : pid;\n        page.isNewDoc = true;\n        m = new model.OnsiteDocumentModel();\n        m.set('docType', docid);\n        m.set('filePath', template_id);\n        m.set('denialReason', 'New');\n        $('#docid').val('docid');\n        $('#template_id').val('template_id');\n        $('#status').val('New');\n        page.showDetailDialog(m); // saved in rendered event\n    },\n\n    getDocument: function (templateName, pid, template_id) {\n        $(\".helpHide\").removeClass(\"d-none\");\n        $('.modelContainer').removeClass(\"d-none\");\n        $(\"#editorContainer\").removeClass('w-auto').addClass('w-100');\n        let currentName = page.onsiteDocument.get('docType');\n        if (page.onsiteDocument.get('fileName') === '') {\n            page.onsiteDocument.set('fileName', currentName);\n        }\n        let currentNameStyled = currentName.substr(0, currentName.lastIndexOf('.')) || currentName;\n        currentNameStyled = currentNameStyled.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, ' ');\n        if (currentName === 'Help') {\n            $(\"#dismissOnsiteDocumentButton\").addClass(\"d-none\");\n        } else {\n            $(\"#dismissOnsiteDocumentButton\").removeClass(\"d-none\");\n        }\n        page.isFrameForm = 0;\n        page.encounterFormId = 0;\n        page.encounterFormName = '';\n        if (docid !== 'Help') {\n            $(\"#topnav\").hide();\n        }\n        if (currentName === templateName && currentName && !page.isNewDoc) {\n            // update form for any submits.(downloads and prints)\n            $(\"#docid\").val(currentName);\n            // get document template\n            let templateContents = page.onsiteDocument.get('fullDocument');\n            page.encounterFormId = page.onsiteDocument.get(\"encounter\") ?? 0;\n            page.isFrameForm = templateContents.includes(\"</iframe>\");\n            if (page.isFrameForm) {\n                $(\"#saveTemplate\").show();\n                // modify the iFrames url in embedded content\n                const regex = /^.*(page.encounterFormName)=\"(\\w+)/s;\n                let m;\n                if ((m = regex.exec(templateContents)) !== null) {\n                    page.encounterFormName = m[2];\n                } else {\n                    signerAlertMsg(\"There is an issue loading document. Missing Name Error.\");\n                    return false;\n                }\n                templateContents = templateContents.replace(/(isPortal=)\\d/, \"isPortal=\" + isPortal);\n                templateContents = templateContents.replace(/(formOrigin=)\\d/, \"formOrigin=\" + page.formOrigin);\n            }\n            // init editor. if a frame, will use iframe src href.\n            $('#templatecontent').html(templateContents);\n            // normal text/html template directives are still valid with visit LBF.\n            restoreDocumentEdits();\n            $('.signature').each(function () {\n                // set/reset cursor default for all\n                $(this).css('cursor', 'pointer');\n                if (isModule) {\n                    // Make sure current user is set so can witness patient signature\n                    $(this).attr('data-user', cuser);\n                }\n            });\n            initSignerApi();\n        } else { // this makes it a new template\n            var liburl = webRoot + '/portal/lib/download_template.php';\n            $.ajax({\n                type: \"POST\",\n                url: liburl,\n                data: {template_id: template_id, docid: templateName, pid: pid, isModule: isModule},\n                error: function (qXHR, textStatus, errorThrow) {\n                    console.log(\"There was an error: Get Document\");\n                },\n                success: function (templateHtml, textStatus, jqXHR) {\n                    $(\"#docid\").val(templateName);\n                    page.onsiteDocument.set('fileName', templateName);\n                    $('#templatecontent').html(templateHtml);\n                    if (page.isNewDoc) {\n                        page.isNewDoc = false;\n                        page.isSaved = false;\n                        $(\"#printTemplate\").hide();\n                        $(\"#submitTemplate\").hide();\n                        page.onsiteDocument.set('fullDocument', templateHtml);\n                        if (isPortal) {\n                            $('#adminSignature').css('cursor', 'default').off();\n                        } else if (!isModule) {\n                            $('#patientSignature').css('cursor', 'default').off();\n                            $('#witnessSignature').css('cursor', 'default').off();\n                        }\n                        bindFetch();\n\n                        if (page.isFrameForm) {\n                            //$(\"#editorContainer\").removeClass('w-100').addClass('w-auto');\n                        }\n                        // new encounter form\n                        // lbf has own signer instance. no binding here.\n                        // page.encounterFormName & page.isFrameForm is set from template directive\n                        $(function () {\n                            // an iframe in <form><iframe src=???></iframe> this page.\n                            if (page.isFrameForm) {\n                                // a layout form\n                                if (page.encounterFormName) {\n                                    let url = '';\n                                    if (page.encounterFormName.startsWith('LBF') || page.encounterFormName.startsWith('HIS')) {\n                                        // iframe from template directive {EncounterDocument:LBFxxxxx} for a LBF form\n                                        url = webRoot + \"/interface/forms/LBF/new.php\" + \"\" +\n                                            \"?isPortal=\" + encodeURIComponent(isPortal ? 1 : 0) +\n                                            \"&formOrigin=\" + encodeURIComponent(page.formOrigin) +\n                                            \"&formname=\" + encodeURIComponent(page.encounterFormName) + \"&id=0\";\n                                    } else {\n                                        // iframe from template directive {EncounterDocument:xxxxx} for a native form\n                                        // first, ensure form name is valid\n                                        if (!page.verifyValidEncounterForm(page.encounterFormName)) {\n                                            signerAlertMsg(\"There is an issue loading form. Form does not exist.\");\n                                            return false;\n                                        }\n                                        url = webRoot + \"/interface/forms/\" + encodeURIComponent(page.encounterFormName) + \"/new.php\" +\n                                            \"?isPortal=\" + encodeURIComponent(isPortal ? 1 : 0) +\n                                            \"&formOrigin=\" + encodeURIComponent(page.formOrigin) +\n                                            \"&formname=\" + encodeURIComponent(page.encounterFormName) + \"&id=0\";\n                                        if (page.isQuestionnaire) {\n                                            url = webRoot + \"/interface/forms/questionnaire_assessments/questionnaire_assessments.php\" +\n                                                \"?isPortal=\" + encodeURIComponent(isPortal ? 1 : 0) +\n                                                \"&formOrigin=\" + encodeURIComponent(page.formOrigin) +\n                                                \"&formname=\" + encodeURIComponent(page.encounterFormName) + \"&id=0\";\n                                        }\n                                    }\n                                    document.getElementById('encounterForm').src = url;\n                                }\n                            }\n                        });\n                    }\n                }\n            });\n        }\n        let cdate = page.onsiteDocument.get('createDate');\n        let status = page.onsiteDocument.get('denialReason');\n        let cnt = cdate.toString().indexOf(\"GMT\");\n        if (cnt !== -1) {\n            cdate = cdate.toString().substring(0, cnt);\n        }\n        $('#docPanelHeader').append('&nbsp;<span class=\"bg-light text-dark px-2\">' + jsText(currentNameStyled) + '</span>&nbsp;' +\n            jsText(' Dated: ' + cdate + ' Status: ' + status));\n    }\n    ,\n    /**\n     * show the doc for editing\n     * @param m doc id\n     */\n    showDetailDialog: function (m) {\n        page.onsiteDocument = m ? m : new model.OnsiteDocumentModel();\n        page.modelView.model = page.onsiteDocument;\n        page.dialogIsOpen = true;\n        if (page.onsiteDocument.id === null || page.onsiteDocument.id === '') {\n            page.renderModelView(false);\n        } else {\n            page.onsiteDocument.fetch({\n                success: function () {\n                    if (page.isDashboard || page.onsiteDocument.get('denialReason') === 'Locked') {\n                        page.renderModelView(false); // @todo TBD when should delete be allowed?\n                    } else {\n                        page.renderModelView(true);\n                    }\n                },\n                error: function (m, r) {\n                    app.appendAlert(app.getErrorMessage(r), 'alert-error', 0, 'modelAlert');\n                }\n            });\n        }\n    },\n\n    /**\n     * Render the model template in the container\n     * @param showDeleteButton\n     */\n    renderModelView: function (showDeleteButton) {\n        page.modelView.render();\n        app.hideProgress('modelLoader');\n\n        // initialize any special controls\n        if (showDeleteButton) {\n            // attach click handlers to the delete buttons\n            $('#confirmDeleteOnsiteDocumentContainer').hide('fast');\n            $('#deleteOnsiteDocumentButtonContainer').show();\n            $('#deleteOnsiteDocumentButton').click(function (e) {\n                e.preventDefault();\n                $('#confirmDeleteOnsiteDocumentContainer').show('fast');\n            });\n\n            $('#cancelDeleteOnsiteDocumentButton').click(function (e) {\n                e.preventDefault();\n                $('#confirmDeleteOnsiteDocumentContainer').hide('fast');\n            });\n\n            $('#confirmDeleteOnsiteDocumentButton').click(function (e) {\n                e.preventDefault();\n                page.deleteModel();\n            });\n        } else {\n            // no point in initializing the click handlers if we don't show the button\n            $('#deleteOnsiteDocumentButtonContainer').hide();\n        }\n    },\n\n    /**\n     * update the model that is currently displayed in the dialog\n     */\n    updateModel: function (reload = false) {\n        // reset any previous errors\n        $('#modelAlert').html('');\n        $('.control-group').removeClass('error');\n        $('.help-inline').html('');\n        if (page.isCharted) {\n            page.onsiteDocument.set('denialReason', 'Locked');\n            page.onsiteDocument.set('authorizingSignator', cuser);\n        }\n        // if this is new then on success we need to add it to the collection\n        var isNew = page.onsiteDocument.isNew();\n        let s = page.onsiteDocument.get('denialReason');\n        if (!isNew && s === 'New' && s !== 'In Review') {\n            page.onsiteDocument.set('denialReason', 'Open');\n            app.showProgress('modelLoader');\n        }\n        let isLink = $('#patientSignature').attr('src') ? $('#patientSignature').attr('src').indexOf('signhere') : -1;\n        let isWitnessLink = $('#witnessSignature').attr('src') ? $('#witnessSignature').attr('src').indexOf('signhere') : -1;\n        if (isLink !== -1) {\n            $('#patientSignature').attr('src', signhere);\n        }\n        if (isWitnessLink !== -1) {\n            $('#witnessSignature').attr('src', signhere);\n        }\n        var ptsignature = $('#patientSignature').attr('src');\n        if (ptsignature == signhere) {\n            if (page.signaturesRequired && page.presentPatientSignature) {\n                signerAlertMsg(signMsg, 6000, 'danger');\n                return false;\n            }\n            ptsignature = \"\";\n        }\n        var wtsignature = $('#witnessSignature').attr('src');\n        if (wtsignature == signhere) {\n            wtsignature = \"\";\n        }\n\n        page.formOrigin = isPortal ? 0 : 1;\n        page.formOrigin = isModule ? 2 : page.formOrigin;\n        let templateContent = document.getElementById('templatecontent').innerHTML;\n        if (page.encounterFormName && page.encounterFormId) {\n            // lbf templates are saved as iframe tag with src url for fetch content on doc load.\n            // no frame content is maintained in onsite document activity but template directives are.\n            templateContent = templateContent.replace(\"id=0\", \"id=\" + page.encounterFormId);\n        }\n        if (isPortal) {\n            templateContent = page.encode(templateContent, parseInt(csrfTokenDoclib[0]));\n        }\n        page.onsiteDocument.save({\n            'pid': cpid,\n            'facility': page.formOrigin, /* 0 portal, 1 dashboard, 2 patient documents */\n            'provider': page.onsiteDocument.get('provider'),\n            'encounter': page.onsiteDocument.get('encounter'),\n            'createDate': new Date(),\n            'docType': page.onsiteDocument.get('docType'),\n            'patientSignedStatus': ptsignature ? '1' : '0',\n            'patientSignedTime': ptsignature ? new Date() : '0000-00-00',\n            'authorizeSignedTime': page.onsiteDocument.get('authorizeSignedTime'),\n            'acceptSignedStatus': page.onsiteDocument.get('acceptSignedStatus'),\n            'authorizingSignator': page.onsiteDocument.get('authorizingSignator'),\n            'reviewDate': (!isPortal) ? new Date() : '0000-00-00',\n            'denialReason': page.onsiteDocument.get('denialReason'),\n            'authorizedSignature': page.onsiteDocument.get('authorizedSignature'),\n            'patientSignature': ptsignature,\n            'fullDocument': templateContent,\n            'fileName': page.onsiteDocument.get('fileName'),\n            'filePath': page.onsiteDocument.get('filePath'),\n            'csrf_token_form': csrfTokenDoclib\n        }, {\n            wait: true,\n            success: function () {\n                app.hideProgress('modelLoader');\n                if (page.isCharted) {\n                    pageAudit.onsitePortalActivity.set('status', 'closed');\n                    pageAudit.onsitePortalActivity.set('pendingAction', 'completed');\n                    pageAudit.onsitePortalActivity.set('actionUser', cuser);\n                }\n                pageAudit.onsitePortalActivity.set('date', page.onsiteDocument.get('createDate'));\n                pageAudit.onsitePortalActivity.set('activity', 'document');\n                pageAudit.onsitePortalActivity.set('patientId', cpid);\n                pageAudit.onsitePortalActivity.set('tableAction', 'update');\n                pageAudit.onsitePortalActivity.set('tableArgs', page.onsiteDocument.get('id'));\n                pageAudit.onsitePortalActivity.set('narrative', page.onsiteDocument.get('docType'));\n                pageAudit.onsitePortalActivity.set('actionTakenTime', new Date());\n                pageAudit.updateModel();\n                if (isNew) {\n                    $('#confirmDeleteOnsiteDocumentContainer').hide('fast');\n                    $('#deleteOnsiteDocumentButtonContainer').show();\n                    if (isPortal) {\n                        $(\"#submitTemplate\").show();\n                        $(\"#sendTemplate\").show();\n                    } else {\n                        $(\"#submitTemplate\").hide();\n                        $(\"#sendTemplate\").hide();\n                    }\n                    page.isNewDoc = false;\n                    page.onsiteDocuments.add(page.onsiteDocument)\n                }\n                if (model.reloadCollectionOnModelUpdate) {\n                    page.fetchOnsiteDocuments(page.fetchParams, true);\n                    page.showDetailDialog(page.onsiteDocument);\n                }\n                signerAlertMsg(msgSuccess, 2000, 'success');\n                if (page.isCharted && isModule) {\n                    $(\"#a_docReturn\").click();\n                    return;\n                }\n                if (reload) {\n                    setTimeout(\"location.reload(true);\", 3000);\n                }\n            },\n            error: function (model, response, scope) {\n                app.hideProgress('modelLoader');\n                app.appendAlert(app.getErrorMessage(response), 'alert-error', 0, 'modelAlert');\n            }\n        });\n    },\n    /**\n     * delete the model that is currently displayed in the dialog\n     */\n    deleteModel: function () {\n        // reset any previous errors\n        $('#modelAlert').html('');\n\n        app.showProgress('modelLoader');\n\n        page.onsiteDocument.destroy({\n            wait: true,\n            success: function () {\n                signerAlertMsg(msgDelete, 2000, 'success');\n                app.hideProgress('modelLoader');\n                pageAudit.onsitePortalActivity.set('status', 'deleted');\n                pageAudit.onsitePortalActivity.set('pendingAction', 'none');\n                pageAudit.onsitePortalActivity.set('activity', 'document');\n\n                pageAudit.onsitePortalActivity.set('pid', cpid);\n                pageAudit.onsitePortalActivity.set('tableAction', 'delete');\n                pageAudit.onsitePortalActivity.set('tableArgs', page.onsiteDocument.get('id'));\n                pageAudit.onsitePortalActivity.set('narrative', 'Patient deleted un-charted template');\n                pageAudit.updateModel()\n\n                if (model.reloadCollectionOnModelUpdate) {\n                    // re-fetch and render the collection after the model has been updated\n                    page.fetchOnsiteDocuments(page.fetchParams, true);\n                    setTimeout(\"location.reload(true);\", 3000);\n                }\n            },\n            error: function (model, response, scope) {\n                app.appendAlert(app.getErrorMessage(response), 'alert-error', 0, 'modelAlert');\n                app.hideProgress('modelLoader');\n            }\n        });\n    },\n    encode: function (content, k) {\n        let encoded = \"\";\n        content = btoa(content);\n        content = btoa(content);\n        for (i = 0; i < content.length; i++) {\n            let a = content.charCodeAt(i);\n            let b = a ^ k;\n            encoded = encoded + String.fromCharCode(b);\n        }\n        return btoa(encoded);\n    }\n};\n</Code>"
                }
            ],
            "url": "https://github.com/openemr/openemr/commit/abee8d2606c706176818de25eb88a2d08b8f7fa4",
            "description": "Improper Authorization in GitHub repository openemr/openemr prior to 7.0.1.",
            "date": "2023-05-28",
            "github_description": "Fixes #\nShort description of what this resolves:\nChanges proposed in this pull request:",
            "llm_raw_output": "{\n    \"CWE_IDS\": [\"CWE-918\"],\n    \"severity\": null\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-918"
                ],
                "severity": null
            },
            "ground_truth_CVE": "CVE-2023-2950",
            "ground_truth_CWEs": [
                "CWE-285"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS  . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\n\"CVSS v3.0 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.\nFile: lollms/security.py\nContent: \n<Code>\nfrom fastapi import HTTPException\nfrom ascii_colors import ASCIIColors\nfrom urllib.parse import urlparse\nimport socket\nfrom pathlib import Path\nfrom typing import List\nimport os\nimport re\nimport platform\nimport string\n\ndef check_access(lollmsElfServer, client_id):\n    client = lollmsElfServer.session.get_client(client_id)\n    if not client:\n        raise HTTPException(status_code=400, detail=f\"Not accessible without id\")\n    return client\n\n\ndef sanitize_based_on_separators(line):\n    \"\"\"\n    Sanitizes a line of code based on common command separators.\n\n    Parameters:\n    - line (str): The line of code to be sanitized.\n\n    Returns:\n    - str: The sanitized line of code.\n    \"\"\"\n    separators = ['&', '|', ';']\n    for sep in separators:\n        if sep in line:\n            line = line.split(sep)[0]  # Keep only the first command before the separator\n            break\n    return line.strip()\n\ndef sanitize_after_whitelisted_command(line, command):\n    \"\"\"\n    Sanitizes the line after a whitelisted command, removing any following commands\n    if a command separator is present.\n\n    Parameters:\n    - line (str): The line of code containing the whitelisted command.\n    - command (str): The whitelisted command.\n\n    Returns:\n    - str: The sanitized line of code, ensuring only the whitelisted command is executed.\n    \"\"\"\n    # Find the end of the whitelisted command in the line\n    command_end_index = line.find(command) + len(command)\n    # Extract the rest of the line after the whitelisted command\n    rest_of_line = line[command_end_index:]\n    # Sanitize the rest of the line based on separators\n    sanitized_rest = sanitize_based_on_separators(rest_of_line)\n    # If anything malicious was removed, sanitized_rest will be empty, so only return the whitelisted command part\n    if not sanitized_rest:\n        return line[:command_end_index].strip()\n    else:\n        # If rest_of_line starts directly with separators followed by malicious commands, sanitized_rest will be empty\n        # This means we should only return the part up to the whitelisted command\n        return line[:command_end_index + len(sanitized_rest)].strip()\n\n\ndef sanitize_shell_code(code, whitelist=None):\n    \"\"\"\n    Securely sanitizes a block of code by allowing commands from a provided whitelist,\n    but only up to the first command separator if followed by other commands.\n    Sanitizes based on common command separators if no whitelist is provided.\n\n    Parameters:\n    - code (str): The input code to be sanitized.\n    - whitelist (list): Optional. A list of whitelisted commands that are allowed.\n\n    Returns:\n    - str: The securely sanitized code.\n    \"\"\"\n    \n    # Split the code by newline characters\n    lines = code.split('\\n')\n    \n    # Initialize the sanitized code variable\n    sanitized_code = \"\"\n    \n    for line in lines:\n        if line.strip():  # Check if the line is not empty\n            if whitelist:\n                for command in whitelist:\n                    if line.strip().startswith(command):\n                        # Check for command separators after the whitelisted command\n                        sanitized_code = sanitize_after_whitelisted_command(line, command)\n                        break\n            else:\n                # Sanitize based on separators if no whitelist is provided\n                sanitized_code = sanitize_based_on_separators(line)\n            break  # Only process the first non-empty line\n    \n    return sanitized_code\n\n\nclass InvalidFilePathError(Exception):\n    pass\n\n\ndef sanitize_path(path: str, allow_absolute_path: bool = False, error_text=\"Absolute database path detected\", exception_text=\"Detected an attempt of path traversal or command injection. Are you kidding me?\"):\n    \"\"\"\n    Sanitize a given file path by checking for potentially dangerous patterns and unauthorized characters.\n\n    Args:\n    -----\n    path (str): The file path to sanitize.\n    allow_absolute_path (bool, optional): Whether to allow absolute paths. Default is False.\n    error_text (str, optional): The error message to display if an absolute path is detected. Default is \"Absolute database path detected\".\n    exception_text (str, optional): The exception message to display if a path traversal, command injection, or unauthorized character is detected. Default is \"Detected an attempt of path traversal or command injection. Are you kidding me?\".\n\n    Raises:\n    ------\n    HTTPException: If an absolute path, path traversal, command injection, or unauthorized character is detected.\n\n    Returns:\n    -------\n    str: The sanitized file path.\n\n    Note:\n    -----\n    This function checks for patterns like \"....\", multiple forward slashes, and command injection attempts like $(whoami). It also checks for unauthorized punctuation characters, excluding the dot (.) character.\n    \"\"\"    \n    if not allow_absolute_path and path.strip().startswith(\"/\"):\n        raise HTTPException(status_code=400, detail=exception_text)\n\n    if path is None:\n        return path\n\n    # Regular expression to detect patterns like \"....\", multiple forward slashes, and command injection attempts like $(whoami)\n    suspicious_patterns = re.compile(r'(\\.\\.+)|(/+/)|(\\$\\(.*\\))')\n\n    if suspicious_patterns.search(str(path)) or ((not allow_absolute_path) and Path(path).is_absolute()):\n        ASCIIColors.error(error_text)\n        raise HTTPException(status_code=400, detail=exception_text)\n\n    # Detect if any unauthorized characters, excluding the dot character, are present in the path\n    unauthorized_chars = set('!\"#$%&\\'()*+,:;<=>?@[]^`{|}~')\n    if any(char in unauthorized_chars for char in path):\n        raise HTTPException(status_code=400, detail=exception_text)\n\n    if not allow_absolute_path:\n        path = path.lstrip('/')\n\n    return path\n\n    \ndef sanitize_path_from_endpoint(path: str, error_text: str = \"A suspected LFI attack detected. The path sent to the server has suspicious elements in it!\", exception_text: str = \"Invalid path!\") -> str:\n    \"\"\"\n    Sanitize a given file path from an endpoint by checking for potentially dangerous patterns and unauthorized characters.\n\n    Args:\n    -----\n    path (str): The file path to sanitize.\n    error_text (str, optional): The error message to display if a path traversal or unauthorized character is detected. Default is \"A suspected LFI attack detected. The path sent to the server has suspicious elements in it!\".\n    exception_text (str, optional): The exception message to display if an absolute path or invalid character is detected. Default is \"Invalid path!\".\n\n    Raises:\n    ------\n    HTTPException: If an absolute path, path traversal, or unauthorized character is detected.\n\n    Returns:\n    -------\n    str: The sanitized file path.\n\n    Note:\n    -----\n    This function checks for patterns like \"....\" and multiple forward slashes. It also checks for unauthorized punctuation characters, excluding the dot (.) character.\n    \"\"\"\n\n    if path is None:\n        return path\n\n    if path.strip().startswith(\"/\"):\n        raise HTTPException(status_code=400, detail=exception_text)\n\n    # Regular expression to detect patterns like \"....\" and multiple forward slashes\n    suspicious_patterns = re.compile(r'(\\.\\.+)|(/+/)')\n\n    # Detect if any unauthorized characters, excluding the dot character, are present in the path\n    unauthorized_chars = set('!\"#$%&\\'()*+,:;<=>?@[]^`{|}~')\n    if any(char in unauthorized_chars for char in path):\n        raise HTTPException(status_code=400, detail=exception_text)\n\n    if suspicious_patterns.search(path) or Path(path).is_absolute():\n        ASCIIColors.error(error_text)\n        raise HTTPException(status_code=400, detail=exception_text)\n\n    path = path.lstrip('/')\n    return path\n\n\ndef forbid_remote_access(lollmsElfServer, exception_text = \"This functionality is forbidden if the server is exposed\"):\n    if not lollmsElfServer.config.force_accept_remote_access and lollmsElfServer.config.host!=\"localhost\" and lollmsElfServer.config.host!=\"127.0.0.1\":\n        raise Exception(exception_text)\n\ndef validate_path(path, allowed_paths:List[str|Path]):\n    # Convert the path to an absolute path\n    abs_path = os.path.realpath(str(path))\n\n    # Iterate over the allowed paths\n    for allowed_path in allowed_paths:\n        # Convert the allowed path to an absolute path\n        abs_allowed_path = os.path.realpath(allowed_path)\n\n        # Check if the absolute path starts with the absolute allowed path\n        if abs_path.startswith(abs_allowed_path):\n            return True\n\n    # If the path is not within any of the allowed paths, return False\n    return False\n\ndef is_allowed_url(url):\n    # Check if url is legit\n    parsed_url = urlparse(url)        \n    # Check if scheme is not http or https, return False\n    if parsed_url.scheme not in ['http', 'https']:\n        return False\n    \n    hostname = parsed_url.hostname\n    \n    try:\n        ip_address = socket.gethostbyname(hostname)\n    except socket.gaierror:\n        return False\n    \n    return not ip_address.startswith('127.') or ip_address.startswith('192.168.') or ip_address.startswith('10.') or ip_address.startswith('172.')\n\n\nif __name__==\"__main__\":\n    sanitize_path_from_endpoint(\"main\")\n    sanitize_path_from_endpoint(\"cat/main\")\n    print(\"Main passed\")\n    sanitize_path_from_endpoint(\".../user\")\n    print(\"hi\")\n</Code>"
                }
            ],
            "url": "https://github.com/parisneo/lollms/commit/95ad36eeffc6a6be3e3f35ed35a384d768f0ecf6",
            "description": "A path traversal vulnerability exists in the parisneo/lollms application, affecting version 9.4.0 and potentially earlier versions, but fixed in version 5.9.0. The vulnerability arises due to improper validation of file paths between Windows and Linux environments, allowing attackers to traverse beyond the intended directory and read any file on the Windows system. Specifically, the application fails to adequately sanitize file paths containing backslashes (`\\`), which can be exploited to access the root directory and read, or even delete, sensitive files. This issue was discovered in the context of the `/user_infos` endpoint, where a crafted request using backslashes to reference a file (e.g., `\\windows\\win.ini`) could result in unauthorized file access. The impact of this vulnerability includes the potential for attackers to access sensitive information such as environment variables, database files, and configuration files, which could lead to further compromise of the system.",
            "date": "2024-06-06",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n    \"CWE_IDS\": [\"CWE-22\", \"CWE-36\", \"CWE-73\", \"CWE-434\"],\n    \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-22",
                    "CWE-434",
                    "CWE-36",
                    "CWE-73"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2024-4881",
            "ground_truth_CWEs": [
                "CWE-36"
            ],
            "ground_truth_severities": {},
            "ground_truth_CVSS_version": [],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "GT_SUBSET_OF_PR"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS  . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\n\"CVSS v3.0 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Trivy is a security scanner. Prior to 0.51.2, if a malicious actor is able to trigger Trivy to scan container images from a crafted malicious registry, it could result in the leakage of credentials for legitimate registries such as AWS Elastic Container Registry (ECR), Google Cloud Artifact/Container Registry, or Azure Container Registry (ACR). These tokens can then be used to push/pull images from those registries to which the identity/user running Trivy has access. Systems are not affected if the default credential provider chain is unable to obtain valid credentials. This vulnerability only applies when scanning container images directly from a registry. This vulnerability is fixed in 0.51.2.\nFile: pkg/fanal/image/registry/azure/azure.go\nContent: \n<Code>\npackage azure\n\nimport (\n\t\"context\"\n\t\"errors\"\n\t\"fmt\"\n\t\"os\"\n\t\"strings\"\n\n\t\"github.com/Azure/azure-sdk-for-go/profiles/preview/preview/containerregistry/runtime/containerregistry\"\n\t\"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy\"\n\t\"github.com/Azure/azure-sdk-for-go/sdk/azidentity\"\n\t\"golang.org/x/xerrors\"\n\n\t\"github.com/aquasecurity/trivy/pkg/fanal/types\"\n)\n\ntype Registry struct {\n\tdomain string\n}\n\nconst (\n\tazureURL = \"azurecr.io\"\n\tscope    = \"https://management.azure.com/.default\"\n\tscheme   = \"https\"\n)\n\nfunc (r *Registry) CheckOptions(domain string, _ types.RegistryOptions) error {\n\tif !strings.HasSuffix(domain, azureURL) {\n\t\treturn xerrors.Errorf(\"Azure registry: %w\", types.InvalidURLPattern)\n\t}\n\tr.domain = domain\n\treturn nil\n}\n\nfunc (r *Registry) GetCredential(ctx context.Context) (string, string, error) {\n\tcred, err := azidentity.NewDefaultAzureCredential(nil)\n\tif err != nil {\n\t\treturn \"\", \"\", xerrors.Errorf(\"unable to generate acr credential error: %w\", err)\n\t}\n\taadToken, err := cred.GetToken(ctx, policy.TokenRequestOptions{Scopes: []string{scope}})\n\tif err != nil {\n\t\treturn \"\", \"\", xerrors.Errorf(\"unable to get an access token: %w\", err)\n\t}\n\trt, err := refreshToken(ctx, aadToken.Token, r.domain)\n\tif err != nil {\n\t\treturn \"\", \"\", xerrors.Errorf(\"unable to refresh token: %w\", err)\n\t}\n\treturn \"00000000-0000-0000-0000-000000000000\", *rt.RefreshToken, err\n}\n\nfunc refreshToken(ctx context.Context, accessToken, domain string) (containerregistry.RefreshToken, error) {\n\ttenantID := os.Getenv(\"AZURE_TENANT_ID\")\n\tif tenantID == \"\" {\n\t\treturn containerregistry.RefreshToken{}, errors.New(\"missing environment variable AZURE_TENANT_ID\")\n\t}\n\trepoClient := containerregistry.NewRefreshTokensClient(fmt.Sprintf(\"%s://%s\", scheme, domain))\n\treturn repoClient.GetFromExchange(ctx, \"access_token\", domain, tenantID, \"\", accessToken)\n}\n</Code>\n\nFile: pkg/fanal/image/registry/ecr/ecr.go\nContent: \n<Code>\npackage ecr\n\nimport (\n\t\"context\"\n\t\"encoding/base64\"\n\t\"strings\"\n\n\t\"github.com/aws/aws-sdk-go-v2/aws\"\n\t\"github.com/aws/aws-sdk-go-v2/config\"\n\t\"github.com/aws/aws-sdk-go-v2/credentials\"\n\t\"github.com/aws/aws-sdk-go-v2/service/ecr\"\n\t\"golang.org/x/xerrors\"\n\n\t\"github.com/aquasecurity/trivy/pkg/fanal/types\"\n)\n\nconst ecrURL = \"amazonaws.com\"\n\ntype ecrAPI interface {\n\tGetAuthorizationToken(ctx context.Context, params *ecr.GetAuthorizationTokenInput, optFns ...func(*ecr.Options)) (*ecr.GetAuthorizationTokenOutput, error)\n}\n\ntype ECR struct {\n\tClient ecrAPI\n}\n\nfunc getSession(option types.RegistryOptions) (aws.Config, error) {\n\t// create custom credential information if option is valid\n\tif option.AWSSecretKey != \"\" && option.AWSAccessKey != \"\" && option.AWSRegion != \"\" {\n\t\treturn config.LoadDefaultConfig(\n\t\t\tcontext.TODO(),\n\t\t\tconfig.WithRegion(option.AWSRegion),\n\t\t\tconfig.WithCredentialsProvider(credentials.NewStaticCredentialsProvider(option.AWSAccessKey, option.AWSSecretKey, option.AWSSessionToken)),\n\t\t)\n\t}\n\treturn config.LoadDefaultConfig(context.TODO())\n}\n\nfunc (e *ECR) CheckOptions(domain string, option types.RegistryOptions) error {\n\tif !strings.HasSuffix(domain, ecrURL) {\n\t\treturn xerrors.Errorf(\"ECR : %w\", types.InvalidURLPattern)\n\t}\n\n\tcfg, err := getSession(option)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tsvc := ecr.NewFromConfig(cfg)\n\te.Client = svc\n\treturn nil\n}\n\nfunc (e *ECR) GetCredential(ctx context.Context) (username, password string, err error) {\n\tinput := &ecr.GetAuthorizationTokenInput{}\n\tresult, err := e.Client.GetAuthorizationToken(ctx, input)\n\tif err != nil {\n\t\treturn \"\", \"\", xerrors.Errorf(\"failed to get authorization token: %w\", err)\n\t}\n\tfor _, data := range result.AuthorizationData {\n\t\tb, err := base64.StdEncoding.DecodeString(*data.AuthorizationToken)\n\t\tif err != nil {\n\t\t\treturn \"\", \"\", xerrors.Errorf(\"base64 decode failed: %w\", err)\n\t\t}\n\t\t// e.g. AWS:eyJwYXlsb2...\n\t\tsplit := strings.SplitN(string(b), \":\", 2)\n\t\tif len(split) == 2 {\n\t\t\treturn split[0], split[1], nil\n\t\t}\n\t}\n\treturn \"\", \"\", nil\n}\n</Code>\n\nFile: pkg/fanal/image/registry/google/google.go\nContent: \n<Code>\npackage google\n\nimport (\n\t\"context\"\n\t\"strings\"\n\n\t\"github.com/GoogleCloudPlatform/docker-credential-gcr/config\"\n\t\"github.com/GoogleCloudPlatform/docker-credential-gcr/credhelper\"\n\t\"github.com/GoogleCloudPlatform/docker-credential-gcr/store\"\n\t\"golang.org/x/xerrors\"\n\n\t\"github.com/aquasecurity/trivy/pkg/fanal/types\"\n)\n\ntype Registry struct {\n\tStore  store.GCRCredStore\n\tdomain string\n}\n\n// Google container registry\nconst gcrURL = \"gcr.io\"\n\n// Google artifact registry\nconst garURL = \"docker.pkg.dev\"\n\nfunc (g *Registry) CheckOptions(domain string, option types.RegistryOptions) error {\n\tif !strings.HasSuffix(domain, gcrURL) && !strings.HasSuffix(domain, garURL) {\n\t\treturn xerrors.Errorf(\"Google registry: %w\", types.InvalidURLPattern)\n\t}\n\tg.domain = domain\n\tif option.GCPCredPath != \"\" {\n\t\tg.Store = store.NewGCRCredStore(option.GCPCredPath)\n\t}\n\treturn nil\n}\n\nfunc (g *Registry) GetCredential(_ context.Context) (username, password string, err error) {\n\tvar credStore store.GCRCredStore\n\tif g.Store == nil {\n\t\tcredStore, err = store.DefaultGCRCredStore()\n\t\tif err != nil {\n\t\t\treturn \"\", \"\", xerrors.Errorf(\"failed to get GCRCredStore: %w\", err)\n\t\t}\n\t} else {\n\t\tcredStore = g.Store\n\t}\n\tuserCfg, err := config.LoadUserConfig()\n\tif err != nil {\n\t\treturn \"\", \"\", xerrors.Errorf(\"failed to load user config: %w\", err)\n\t}\n\thelper := credhelper.NewGCRCredentialHelper(credStore, userCfg)\n\treturn helper.Get(g.domain)\n}\n</Code>"
                }
            ],
            "url": "https://github.com/aquasecurity/trivy/commit/e7f14f729de259551203f313e57d2d9d3aa2ff87",
            "description": "Trivy is a security scanner. Prior to 0.51.2, if a malicious actor is able to trigger Trivy to scan container images from a crafted malicious registry, it could result in the leakage of credentials for legitimate registries such as AWS Elastic Container Registry (ECR), Google Cloud Artifact/Container Registry, or Azure Container Registry (ACR). These tokens can then be used to push/pull images from those registries to which the identity/user running Trivy has access. Systems are not affected if the default credential provider chain is unable to obtain valid credentials. This vulnerability only applies when scanning container images directly from a registry. This vulnerability is fixed in 0.51.2.",
            "date": "2024-05-20",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n    \"CWE_IDS\": [\"CWE-918\"],\n    \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-918"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2024-35192",
            "ground_truth_CWEs": [
                "CWE-522"
            ],
            "ground_truth_severities": {},
            "ground_truth_CVSS_version": [],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS  . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\n\"CVSS v3.0 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Traefik is an HTTP reverse proxy and load balancer. In affected versions sending a GET request to any Traefik endpoint with the \"Content-length\" request header results in an indefinite hang with the default configuration. This vulnerability can be exploited by attackers to induce a denial of service. This vulnerability has been addressed in version 2.11.2 and 3.0.0-rc5. Users are advised to upgrade. For affected versions, this vulnerability can be mitigated by configuring the readTimeout option.\n\nFile: pkg/config/static/static_config.go\nContent: \n<Code>\npackage static\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\tstdlog \"log\"\n\t\"strings\"\n\t\"time\"\n\n\tlegolog \"github.com/go-acme/lego/v4/log\"\n\t\"github.com/sirupsen/logrus\"\n\tptypes \"github.com/traefik/paerser/types\"\n\t\"github.com/traefik/traefik/v2/pkg/log\"\n\t\"github.com/traefik/traefik/v2/pkg/ping\"\n\tacmeprovider \"github.com/traefik/traefik/v2/pkg/provider/acme\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/consulcatalog\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/docker\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/ecs\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/file\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/http\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/kubernetes/crd\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/kubernetes/gateway\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/kubernetes/ingress\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/kv/consul\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/kv/etcd\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/kv/redis\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/kv/zk\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/marathon\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/nomad\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/rancher\"\n\t\"github.com/traefik/traefik/v2/pkg/provider/rest\"\n\t\"github.com/traefik/traefik/v2/pkg/tls\"\n\t\"github.com/traefik/traefik/v2/pkg/tracing/datadog\"\n\t\"github.com/traefik/traefik/v2/pkg/tracing/elastic\"\n\t\"github.com/traefik/traefik/v2/pkg/tracing/haystack\"\n\t\"github.com/traefik/traefik/v2/pkg/tracing/instana\"\n\t\"github.com/traefik/traefik/v2/pkg/tracing/jaeger\"\n\t\"github.com/traefik/traefik/v2/pkg/tracing/zipkin\"\n\t\"github.com/traefik/traefik/v2/pkg/types\"\n)\n\nconst (\n\t// DefaultInternalEntryPointName the name of the default internal entry point.\n\tDefaultInternalEntryPointName = \"traefik\"\n\n\t// DefaultGraceTimeout controls how long Traefik serves pending requests\n\t// prior to shutting down.\n\tDefaultGraceTimeout = 10 * time.Second\n\n\t// DefaultIdleTimeout before closing an idle connection.\n\tDefaultIdleTimeout = 180 * time.Second\n\n\t// DefaultReadTimeout defines the default maximum duration for reading the entire request, including the body.\n\tDefaultReadTimeout = 5 * time.Second\n\n\t// DefaultAcmeCAServer is the default ACME API endpoint.\n\tDefaultAcmeCAServer = \"https://acme-v02.api.letsencrypt.org/directory\"\n\n\t// DefaultUDPTimeout defines how long to wait by default on an idle session,\n\t// before releasing all resources related to that session.\n\tDefaultUDPTimeout = 3 * time.Second\n)\n\n// Configuration is the static configuration.\ntype Configuration struct {\n\tGlobal *Global `description:\"Global configuration options\" json:\"global,omitempty\" toml:\"global,omitempty\" yaml:\"global,omitempty\" export:\"true\"`\n\n\tServersTransport *ServersTransport `description:\"Servers default transport.\" json:\"serversTransport,omitempty\" toml:\"serversTransport,omitempty\" yaml:\"serversTransport,omitempty\" export:\"true\"`\n\tEntryPoints      EntryPoints       `description:\"Entry points definition.\" json:\"entryPoints,omitempty\" toml:\"entryPoints,omitempty\" yaml:\"entryPoints,omitempty\" export:\"true\"`\n\tProviders        *Providers        `description:\"Providers configuration.\" json:\"providers,omitempty\" toml:\"providers,omitempty\" yaml:\"providers,omitempty\" export:\"true\"`\n\n\tAPI     *API           `description:\"Enable api/dashboard.\" json:\"api,omitempty\" toml:\"api,omitempty\" yaml:\"api,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tMetrics *types.Metrics `description:\"Enable a metrics exporter.\" json:\"metrics,omitempty\" toml:\"metrics,omitempty\" yaml:\"metrics,omitempty\" export:\"true\"`\n\tPing    *ping.Handler  `description:\"Enable ping.\" json:\"ping,omitempty\" toml:\"ping,omitempty\" yaml:\"ping,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\n\tLog       *types.TraefikLog `description:\"Traefik log settings.\" json:\"log,omitempty\" toml:\"log,omitempty\" yaml:\"log,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tAccessLog *types.AccessLog  `description:\"Access log settings.\" json:\"accessLog,omitempty\" toml:\"accessLog,omitempty\" yaml:\"accessLog,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tTracing   *Tracing          `description:\"OpenTracing configuration.\" json:\"tracing,omitempty\" toml:\"tracing,omitempty\" yaml:\"tracing,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\n\tHostResolver *types.HostResolverConfig `description:\"Enable CNAME Flattening.\" json:\"hostResolver,omitempty\" toml:\"hostResolver,omitempty\" yaml:\"hostResolver,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\n\tCertificatesResolvers map[string]CertificateResolver `description:\"Certificates resolvers configuration.\" json:\"certificatesResolvers,omitempty\" toml:\"certificatesResolvers,omitempty\" yaml:\"certificatesResolvers,omitempty\" export:\"true\"`\n\n\t// Deprecated.\n\tPilot *Pilot `description:\"Traefik Pilot configuration (Deprecated).\" json:\"pilot,omitempty\" toml:\"pilot,omitempty\" yaml:\"pilot,omitempty\" export:\"true\"`\n\n\tExperimental *Experimental `description:\"experimental features.\" json:\"experimental,omitempty\" toml:\"experimental,omitempty\" yaml:\"experimental,omitempty\" export:\"true\"`\n}\n\n// CertificateResolver contains the configuration for the different types of certificates resolver.\ntype CertificateResolver struct {\n\tACME *acmeprovider.Configuration `description:\"Enable ACME (Let's Encrypt): automatic SSL.\" json:\"acme,omitempty\" toml:\"acme,omitempty\" yaml:\"acme,omitempty\" export:\"true\"`\n}\n\n// Global holds the global configuration.\ntype Global struct {\n\tCheckNewVersion    bool `description:\"Periodically check if a new version has been released.\" json:\"checkNewVersion,omitempty\" toml:\"checkNewVersion,omitempty\" yaml:\"checkNewVersion,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tSendAnonymousUsage bool `description:\"Periodically send anonymous usage statistics. If the option is not specified, it will be disabled by default.\" json:\"sendAnonymousUsage,omitempty\" toml:\"sendAnonymousUsage,omitempty\" yaml:\"sendAnonymousUsage,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n}\n\n// ServersTransport options to configure communication between Traefik and the servers.\ntype ServersTransport struct {\n\tInsecureSkipVerify  bool                `description:\"Disable SSL certificate verification.\" json:\"insecureSkipVerify,omitempty\" toml:\"insecureSkipVerify,omitempty\" yaml:\"insecureSkipVerify,omitempty\" export:\"true\"`\n\tRootCAs             []tls.FileOrContent `description:\"Add cert file for self-signed certificate.\" json:\"rootCAs,omitempty\" toml:\"rootCAs,omitempty\" yaml:\"rootCAs,omitempty\"`\n\tMaxIdleConnsPerHost int                 `description:\"If non-zero, controls the maximum idle (keep-alive) to keep per-host. If zero, DefaultMaxIdleConnsPerHost is used\" json:\"maxIdleConnsPerHost,omitempty\" toml:\"maxIdleConnsPerHost,omitempty\" yaml:\"maxIdleConnsPerHost,omitempty\" export:\"true\"`\n\tForwardingTimeouts  *ForwardingTimeouts `description:\"Timeouts for requests forwarded to the backend servers.\" json:\"forwardingTimeouts,omitempty\" toml:\"forwardingTimeouts,omitempty\" yaml:\"forwardingTimeouts,omitempty\" export:\"true\"`\n}\n\n// API holds the API configuration.\ntype API struct {\n\tInsecure           bool `description:\"Activate API directly on the entryPoint named traefik.\" json:\"insecure,omitempty\" toml:\"insecure,omitempty\" yaml:\"insecure,omitempty\" export:\"true\"`\n\tDashboard          bool `description:\"Activate dashboard.\" json:\"dashboard,omitempty\" toml:\"dashboard,omitempty\" yaml:\"dashboard,omitempty\" export:\"true\"`\n\tDebug              bool `description:\"Enable additional endpoints for debugging and profiling.\" json:\"debug,omitempty\" toml:\"debug,omitempty\" yaml:\"debug,omitempty\" export:\"true\"`\n\tDisableDashboardAd bool `description:\"Disable ad in the dashboard.\" json:\"disableDashboardAd,omitempty\" toml:\"disableDashboardAd,omitempty\" yaml:\"disableDashboardAd,omitempty\" export:\"true\"`\n\t// TODO: Re-enable statistics\n\t// Statistics      *types.Statistics `description:\"Enable more detailed statistics.\" json:\"statistics,omitempty\" toml:\"statistics,omitempty\" yaml:\"statistics,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n}\n\n// SetDefaults sets the default values.\nfunc (a *API) SetDefaults() {\n\ta.Dashboard = true\n}\n\n// RespondingTimeouts contains timeout configurations for incoming requests to the Traefik instance.\ntype RespondingTimeouts struct {\n\tReadTimeout  ptypes.Duration `description:\"ReadTimeout is the maximum duration for reading the entire request, including the body. If zero, no timeout is set.\" json:\"readTimeout,omitempty\" toml:\"readTimeout,omitempty\" yaml:\"readTimeout,omitempty\" export:\"true\"`\n\tWriteTimeout ptypes.Duration `description:\"WriteTimeout is the maximum duration before timing out writes of the response. If zero, no timeout is set.\" json:\"writeTimeout,omitempty\" toml:\"writeTimeout,omitempty\" yaml:\"writeTimeout,omitempty\" export:\"true\"`\n\tIdleTimeout  ptypes.Duration `description:\"IdleTimeout is the maximum amount duration an idle (keep-alive) connection will remain idle before closing itself. If zero, no timeout is set.\" json:\"idleTimeout,omitempty\" toml:\"idleTimeout,omitempty\" yaml:\"idleTimeout,omitempty\" export:\"true\"`\n}\n\n// SetDefaults sets the default values.\nfunc (a *RespondingTimeouts) SetDefaults() {\n\ta.ReadTimeout = ptypes.Duration(DefaultReadTimeout)\n\ta.IdleTimeout = ptypes.Duration(DefaultIdleTimeout)\n}\n\n// ForwardingTimeouts contains timeout configurations for forwarding requests to the backend servers.\ntype ForwardingTimeouts struct {\n\tDialTimeout           ptypes.Duration `description:\"The amount of time to wait until a connection to a backend server can be established. If zero, no timeout exists.\" json:\"dialTimeout,omitempty\" toml:\"dialTimeout,omitempty\" yaml:\"dialTimeout,omitempty\" export:\"true\"`\n\tResponseHeaderTimeout ptypes.Duration `description:\"The amount of time to wait for a server's response headers after fully writing the request (including its body, if any). If zero, no timeout exists.\" json:\"responseHeaderTimeout,omitempty\" toml:\"responseHeaderTimeout,omitempty\" yaml:\"responseHeaderTimeout,omitempty\" export:\"true\"`\n\tIdleConnTimeout       ptypes.Duration `description:\"The maximum period for which an idle HTTP keep-alive connection will remain open before closing itself\" json:\"idleConnTimeout,omitempty\" toml:\"idleConnTimeout,omitempty\" yaml:\"idleConnTimeout,omitempty\" export:\"true\"`\n}\n\n// SetDefaults sets the default values.\nfunc (f *ForwardingTimeouts) SetDefaults() {\n\tf.DialTimeout = ptypes.Duration(30 * time.Second)\n\tf.IdleConnTimeout = ptypes.Duration(90 * time.Second)\n}\n\n// LifeCycle contains configurations relevant to the lifecycle (such as the shutdown phase) of Traefik.\ntype LifeCycle struct {\n\tRequestAcceptGraceTimeout ptypes.Duration `description:\"Duration to keep accepting requests before Traefik initiates the graceful shutdown procedure.\" json:\"requestAcceptGraceTimeout,omitempty\" toml:\"requestAcceptGraceTimeout,omitempty\" yaml:\"requestAcceptGraceTimeout,omitempty\" export:\"true\"`\n\tGraceTimeOut              ptypes.Duration `description:\"Duration to give active requests a chance to finish before Traefik stops.\" json:\"graceTimeOut,omitempty\" toml:\"graceTimeOut,omitempty\" yaml:\"graceTimeOut,omitempty\" export:\"true\"`\n}\n\n// SetDefaults sets the default values.\nfunc (a *LifeCycle) SetDefaults() {\n\ta.GraceTimeOut = ptypes.Duration(DefaultGraceTimeout)\n}\n\n// Tracing holds the tracing configuration.\ntype Tracing struct {\n\tServiceName   string           `description:\"Set the name for this service.\" json:\"serviceName,omitempty\" toml:\"serviceName,omitempty\" yaml:\"serviceName,omitempty\" export:\"true\"`\n\tSpanNameLimit int              `description:\"Set the maximum character limit for Span names (default 0 = no limit).\" json:\"spanNameLimit,omitempty\" toml:\"spanNameLimit,omitempty\" yaml:\"spanNameLimit,omitempty\" export:\"true\"`\n\tJaeger        *jaeger.Config   `description:\"Settings for Jaeger.\" json:\"jaeger,omitempty\" toml:\"jaeger,omitempty\" yaml:\"jaeger,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tZipkin        *zipkin.Config   `description:\"Settings for Zipkin.\" json:\"zipkin,omitempty\" toml:\"zipkin,omitempty\" yaml:\"zipkin,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tDatadog       *datadog.Config  `description:\"Settings for Datadog.\" json:\"datadog,omitempty\" toml:\"datadog,omitempty\" yaml:\"datadog,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tInstana       *instana.Config  `description:\"Settings for Instana.\" json:\"instana,omitempty\" toml:\"instana,omitempty\" yaml:\"instana,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tHaystack      *haystack.Config `description:\"Settings for Haystack.\" json:\"haystack,omitempty\" toml:\"haystack,omitempty\" yaml:\"haystack,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tElastic       *elastic.Config  `description:\"Settings for Elastic.\" json:\"elastic,omitempty\" toml:\"elastic,omitempty\" yaml:\"elastic,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n}\n\n// SetDefaults sets the default values.\nfunc (t *Tracing) SetDefaults() {\n\tt.ServiceName = \"traefik\"\n\tt.SpanNameLimit = 0\n}\n\n// Providers contains providers configuration.\ntype Providers struct {\n\tProvidersThrottleDuration ptypes.Duration `description:\"Backends throttle duration: minimum duration between 2 events from providers before applying a new configuration. It avoids unnecessary reloads if multiples events are sent in a short amount of time.\" json:\"providersThrottleDuration,omitempty\" toml:\"providersThrottleDuration,omitempty\" yaml:\"providersThrottleDuration,omitempty\" export:\"true\"`\n\n\tDocker            *docker.Provider               `description:\"Enable Docker backend with default settings.\" json:\"docker,omitempty\" toml:\"docker,omitempty\" yaml:\"docker,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tFile              *file.Provider                 `description:\"Enable File backend with default settings.\" json:\"file,omitempty\" toml:\"file,omitempty\" yaml:\"file,omitempty\" export:\"true\"`\n\tMarathon          *marathon.Provider             `description:\"Enable Marathon backend with default settings.\" json:\"marathon,omitempty\" toml:\"marathon,omitempty\" yaml:\"marathon,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tKubernetesIngress *ingress.Provider              `description:\"Enable Kubernetes backend with default settings.\" json:\"kubernetesIngress,omitempty\" toml:\"kubernetesIngress,omitempty\" yaml:\"kubernetesIngress,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tKubernetesCRD     *crd.Provider                  `description:\"Enable Kubernetes backend with default settings.\" json:\"kubernetesCRD,omitempty\" toml:\"kubernetesCRD,omitempty\" yaml:\"kubernetesCRD,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tKubernetesGateway *gateway.Provider              `description:\"Enable Kubernetes gateway api provider with default settings.\" json:\"kubernetesGateway,omitempty\" toml:\"kubernetesGateway,omitempty\" yaml:\"kubernetesGateway,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tRest              *rest.Provider                 `description:\"Enable Rest backend with default settings.\" json:\"rest,omitempty\" toml:\"rest,omitempty\" yaml:\"rest,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tRancher           *rancher.Provider              `description:\"Enable Rancher backend with default settings.\" json:\"rancher,omitempty\" toml:\"rancher,omitempty\" yaml:\"rancher,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tConsulCatalog     *consulcatalog.ProviderBuilder `description:\"Enable ConsulCatalog backend with default settings.\" json:\"consulCatalog,omitempty\" toml:\"consulCatalog,omitempty\" yaml:\"consulCatalog,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tNomad             *nomad.ProviderBuilder         `description:\"Enable Nomad backend with default settings.\" json:\"nomad,omitempty\" toml:\"nomad,omitempty\" yaml:\"nomad,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tEcs               *ecs.Provider                  `description:\"Enable AWS ECS backend with default settings.\" json:\"ecs,omitempty\" toml:\"ecs,omitempty\" yaml:\"ecs,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\n\tConsul    *consul.ProviderBuilder `description:\"Enable Consul backend with default settings.\" json:\"consul,omitempty\" toml:\"consul,omitempty\" yaml:\"consul,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\"  export:\"true\"`\n\tEtcd      *etcd.Provider          `description:\"Enable Etcd backend with default settings.\" json:\"etcd,omitempty\" toml:\"etcd,omitempty\" yaml:\"etcd,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tZooKeeper *zk.Provider            `description:\"Enable ZooKeeper backend with default settings.\" json:\"zooKeeper,omitempty\" toml:\"zooKeeper,omitempty\" yaml:\"zooKeeper,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tRedis     *redis.Provider         `description:\"Enable Redis backend with default settings.\" json:\"redis,omitempty\" toml:\"redis,omitempty\" yaml:\"redis,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\tHTTP      *http.Provider          `description:\"Enable HTTP backend with default settings.\" json:\"http,omitempty\" toml:\"http,omitempty\" yaml:\"http,omitempty\" label:\"allowEmpty\" file:\"allowEmpty\" export:\"true\"`\n\n\tPlugin map[string]PluginConf `description:\"Plugins configuration.\" json:\"plugin,omitempty\" toml:\"plugin,omitempty\" yaml:\"plugin,omitempty\"`\n}\n\n// SetEffectiveConfiguration adds missing configuration parameters derived from existing ones.\n// It also takes care of maintaining backwards compatibility.\nfunc (c *Configuration) SetEffectiveConfiguration() {\n\t// Creates the default entry point if needed\n\tif !c.hasUserDefinedEntrypoint() {\n\t\tep := &EntryPoint{Address: \":80\"}\n\t\tep.SetDefaults()\n\t\t// TODO: double check this tomorrow\n\t\tif c.EntryPoints == nil {\n\t\t\tc.EntryPoints = make(EntryPoints)\n\t\t}\n\t\tc.EntryPoints[\"http\"] = ep\n\t}\n\n\t// Creates the internal traefik entry point if needed\n\tif (c.API != nil && c.API.Insecure) ||\n\t\t(c.Ping != nil && !c.Ping.ManualRouting && c.Ping.EntryPoint == DefaultInternalEntryPointName) ||\n\t\t(c.Metrics != nil && c.Metrics.Prometheus != nil && !c.Metrics.Prometheus.ManualRouting && c.Metrics.Prometheus.EntryPoint == DefaultInternalEntryPointName) ||\n\t\t(c.Providers != nil && c.Providers.Rest != nil && c.Providers.Rest.Insecure) {\n\t\tif _, ok := c.EntryPoints[DefaultInternalEntryPointName]; !ok {\n\t\t\tep := &EntryPoint{Address: \":8080\"}\n\t\t\tep.SetDefaults()\n\t\t\tc.EntryPoints[DefaultInternalEntryPointName] = ep\n\t\t}\n\t}\n\n\tif c.Providers.Docker != nil {\n\t\tif c.Providers.Docker.SwarmModeRefreshSeconds <= 0 {\n\t\t\tc.Providers.Docker.SwarmModeRefreshSeconds = ptypes.Duration(15 * time.Second)\n\t\t}\n\n\t\tif c.Providers.Docker.HTTPClientTimeout < 0 {\n\t\t\tc.Providers.Docker.HTTPClientTimeout = 0\n\t\t}\n\t}\n\n\tif c.Providers.Rancher != nil {\n\t\tif c.Providers.Rancher.RefreshSeconds <= 0 {\n\t\t\tc.Providers.Rancher.RefreshSeconds = 15\n\t\t}\n\t}\n\n\t// Enable anonymous usage when pilot is enabled.\n\tif c.Pilot != nil {\n\t\tc.Global.SendAnonymousUsage = true\n\t}\n\n\t// Disable Gateway API provider if not enabled in experimental.\n\tif c.Experimental == nil || !c.Experimental.KubernetesGateway {\n\t\tc.Providers.KubernetesGateway = nil\n\t}\n\n\tif c.Experimental == nil || !c.Experimental.HTTP3 {\n\t\tfor epName, ep := range c.EntryPoints {\n\t\t\tif ep.HTTP3 != nil {\n\t\t\t\tep.HTTP3 = nil\n\t\t\t\tlog.WithoutContext().Debugf(\"Disabling HTTP3 configuration for entryPoint %q: HTTP3 is disabled in the experimental configuration section\", epName)\n\t\t\t}\n\t\t}\n\t}\n\n\t// Configure Gateway API provider\n\tif c.Providers.KubernetesGateway != nil {\n\t\tlog.WithoutContext().Debugf(\"Experimental Kubernetes Gateway provider has been activated\")\n\t\tentryPoints := make(map[string]gateway.Entrypoint)\n\t\tfor epName, entryPoint := range c.EntryPoints {\n\t\t\tentryPoints[epName] = gateway.Entrypoint{Address: entryPoint.GetAddress(), HasHTTPTLSConf: entryPoint.HTTP.TLS != nil}\n\t\t}\n\n\t\tc.Providers.KubernetesGateway.EntryPoints = entryPoints\n\t}\n\n\tc.initACMEProvider()\n}\n\nfunc (c *Configuration) hasUserDefinedEntrypoint() bool {\n\treturn len(c.EntryPoints) != 0\n}\n\nfunc (c *Configuration) initACMEProvider() {\n\tfor _, resolver := range c.CertificatesResolvers {\n\t\tif resolver.ACME != nil {\n\t\t\tresolver.ACME.CAServer = getSafeACMECAServer(resolver.ACME.CAServer)\n\t\t}\n\t}\n\n\tlegolog.Logger = stdlog.New(log.WithoutContext().WriterLevel(logrus.DebugLevel), \"legolog: \", 0)\n}\n\n// ValidateConfiguration validate that configuration is coherent.\nfunc (c *Configuration) ValidateConfiguration() error {\n\tvar acmeEmail string\n\tfor name, resolver := range c.CertificatesResolvers {\n\t\tif resolver.ACME == nil {\n\t\t\tcontinue\n\t\t}\n\n\t\tif len(resolver.ACME.Storage) == 0 {\n\t\t\treturn fmt.Errorf(\"unable to initialize certificates resolver %q with no storage location for the certificates\", name)\n\t\t}\n\n\t\tif acmeEmail != \"\" && resolver.ACME.Email != acmeEmail {\n\t\t\treturn fmt.Errorf(\"unable to initialize certificates resolver %q, all the acme resolvers must use the same email\", name)\n\t\t}\n\t\tacmeEmail = resolver.ACME.Email\n\t}\n\n\tif c.Providers.ConsulCatalog != nil && c.Providers.ConsulCatalog.Namespace != \"\" && len(c.Providers.ConsulCatalog.Namespaces) > 0 {\n\t\treturn errors.New(\"Consul Catalog provider cannot have both namespace and namespaces options configured\")\n\t}\n\n\tif c.Providers.Consul != nil && c.Providers.Consul.Namespace != \"\" && len(c.Providers.Consul.Namespaces) > 0 {\n\t\treturn errors.New(\"Consul provider cannot have both namespace and namespaces options configured\")\n\t}\n\n\tif c.Providers.Nomad != nil && c.Providers.Nomad.Namespace != \"\" && len(c.Providers.Nomad.Namespaces) > 0 {\n\t\treturn errors.New(\"Nomad provider cannot have both namespace and namespaces options configured\")\n\t}\n\n\treturn nil\n}\n\nfunc getSafeACMECAServer(caServerSrc string) string {\n\tif len(caServerSrc) == 0 {\n\t\treturn DefaultAcmeCAServer\n\t}\n\n\tif strings.HasPrefix(caServerSrc, \"https://acme-v01.api.letsencrypt.org\") {\n\t\tcaServer := strings.Replace(caServerSrc, \"v01\", \"v02\", 1)\n\t\tlog.WithoutContext().\n\t\t\tWarnf(\"The CA server %[1]q refers to a v01 endpoint of the ACME API, please change to %[2]q. Fallback to %[2]q.\", caServerSrc, caServer)\n\t\treturn caServer\n\t}\n\n\tif strings.HasPrefix(caServerSrc, \"https://acme-staging.api.letsencrypt.org\") {\n\t\tcaServer := strings.Replace(caServerSrc, \"https://acme-staging.api.letsencrypt.org\", \"https://acme-staging-v02.api.letsencrypt.org\", 1)\n\t\tlog.WithoutContext().\n\t\t\tWarnf(\"The CA server %[1]q refers to a v01 endpoint of the ACME API, please change to %[2]q. Fallback to %[2]q.\", caServerSrc, caServer)\n\t\treturn caServer\n\t}\n\n\treturn caServerSrc\n}\n</Code>"
                }
            ],
            "url": "https://github.com/traefik/traefik/commit/240b83b77351dfd8cadb91c305b84e9d22e0f9c6",
            "description": "Traefik is an HTTP reverse proxy and load balancer. In affected versions sending a GET request to any Traefik endpoint with the \"Content-length\" request header results in an indefinite hang with the default configuration. This vulnerability can be exploited by attackers to induce a denial of service. This vulnerability has been addressed in version 2.11.2 and 3.0.0-rc5. Users are advised to upgrade. For affected versions, this vulnerability can be mitigated by configuring the readTimeout option.\n",
            "date": "2024-04-12",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-400\"],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-400"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2024-28869",
            "ground_truth_CWEs": [
                "CWE-755"
            ],
            "ground_truth_severities": {},
            "ground_truth_CVSS_version": [],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: No description provided.\nFile: classes/comparator.js\nContent: \n<Code>\nconst ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n</Code>\n\nFile: classes/range.js\nContent: \n<Code>\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n</Code>\n\nFile: classes/semver.js\nContent: \n<Code>\nconst debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n</Code>\n\nFile: functions/coerce.js\nContent: \n<Code>\nconst SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n</Code>\n\nFile: test/internal/re.js\nContent: \n<Code>\nconst { test } = require('tap')\nconst { src, re } = require('../../internal/re')\nconst semver = require('../../')\n\ntest('has a list of src, re, and tokens', (t) => {\n  t.match(Object.assign({}, semver), {\n    src: Array,\n    re: Array,\n    tokens: Object,\n  })\n  re.forEach(r => t.match(r, RegExp, 'regexps are regexps'))\n  src.forEach(s => t.match(s, String, 'src is strings'))\n  for (const i in semver.tokens) {\n    t.match(semver.tokens[i], Number, 'tokens are numbers')\n  }\n  t.end()\n})\n</Code>\n\nFile: test/map.js\nContent: \n<Code>\nconst t = require('tap')\n\n// ensure that the coverage map maps all coverage\nconst ignore = [\n  '.git',\n  '.github',\n  '.commitlintrc.js',\n  '.eslintrc.js',\n  '.eslintrc.local.js',\n  'node_modules',\n  'coverage',\n  'tap-snapshots',\n  'test',\n  'fixtures',\n]\n\nconst { statSync, readdirSync } = require('fs')\nconst find = (folder, set = [], root = true) => {\n  const ent = readdirSync(folder)\n  set.push(...ent.filter(f => !ignore.includes(f) && /\\.m?js$/.test(f)).map(f => folder + '/' + f))\n  for (const e of ent.filter(f => !ignore.includes(f) && !/\\.m?js$/.test(f))) {\n    if (statSync(folder + '/' + e).isDirectory()) {\n      find(folder + '/' + e, set, false)\n    }\n  }\n  if (!root) {\n    return\n  }\n  return set.map(f => f.slice(folder.length + 1)\n    .replace(/\\\\/g, '/'))\n    .sort((a, b) => a.localeCompare(b))\n}\n\nconst { resolve } = require('path')\nconst root = resolve(__dirname, '..')\n\nconst sut = find(root)\nconst tests = find(root + '/test')\nt.strictSame(sut, tests, 'test files should match system files')\nconst map = require('../map.js')\n\nfor (const testFile of tests) {\n  t.test(testFile, t => {\n    t.plan(1)\n    // cast to an array, since map() can return a string or array\n    const systemFiles = [].concat(map(testFile))\n    t.ok(systemFiles.some(sys => sut.includes(sys)), 'test covers a file')\n  })\n}\n</Code>"
                }
            ],
            "url": "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441",
            "description": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\r\r\r",
            "date": "2023-06-21",
            "github_description": "No description provided.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-703\"],\n  \"severity\": null\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-703"
                ],
                "severity": null
            },
            "ground_truth_CVE": "CVE-2022-25883",
            "ground_truth_CWEs": [
                "CWE-1333"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Description of changes:\nBypasses Guzzle's UriResolver for request paths that contain ../ parent path references.  Previously, the UriResolver would strip dot segments, leading to a situation where objects other than the intended target could be created or accessed.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\nFile: src/Api/Serializer/RestSerializer.php\nContent: \n<Code>\n<?php\nnamespace Aws\\Api\\Serializer;\n\nuse Aws\\Api\\MapShape;\nuse Aws\\Api\\Service;\nuse Aws\\Api\\Operation;\nuse Aws\\Api\\Shape;\nuse Aws\\Api\\StructureShape;\nuse Aws\\Api\\TimestampShape;\nuse Aws\\CommandInterface;\nuse Aws\\EndpointV2\\EndpointProviderV2;\nuse Aws\\EndpointV2\\EndpointV2SerializerTrait;\nuse GuzzleHttp\\Psr7;\nuse GuzzleHttp\\Psr7\\Request;\nuse GuzzleHttp\\Psr7\\Uri;\nuse GuzzleHttp\\Psr7\\UriResolver;\nuse Psr\\Http\\Message\\RequestInterface;\n\n/**\n * Serializes HTTP locations like header, uri, payload, etc...\n * @internal\n */\nabstract class RestSerializer\n{\n    use EndpointV2SerializerTrait;\n\n    /** @var Service */\n    private $api;\n\n    /** @var Uri */\n    private $endpoint;\n\n    /**\n     * @param Service $api      Service API description\n     * @param string  $endpoint Endpoint to connect to\n     */\n    public function __construct(Service $api, $endpoint)\n    {\n        $this->api = $api;\n        $this->endpoint = Psr7\\Utils::uriFor($endpoint);\n    }\n\n    /**\n     * @param CommandInterface $command Command to serialize into a request.\n     * @param $endpointProvider Provider used for dynamic endpoint resolution.\n     * @param $clientArgs Client arguments used for dynamic endpoint resolution.\n     *\n     * @return RequestInterface\n     */\n    public function __invoke(\n        CommandInterface $command,\n        $endpointProvider = null,\n        $clientArgs = null\n    )\n    {\n        $operation = $this->api->getOperation($command->getName());\n        $commandArgs = $command->toArray();\n        $opts = $this->serialize($operation, $commandArgs);\n        $headers = isset($opts['headers']) ? $opts['headers'] : [];\n\n        if ($endpointProvider instanceof EndpointProviderV2) {\n            $this->setRequestOptions(\n                $endpointProvider,\n                $command,\n                $operation,\n                $commandArgs,\n                $clientArgs,\n                $headers\n            );\n            $this->endpoint = new Uri($this->endpoint);\n        }\n        $uri = $this->buildEndpoint($operation, $commandArgs, $opts);\n\n        return new Request(\n            $operation['http']['method'],\n            $uri,\n            $headers,\n            isset($opts['body']) ? $opts['body'] : null\n        );\n    }\n\n    /**\n     * Modifies a hash of request options for a payload body.\n     *\n     * @param StructureShape   $member  Member to serialize\n     * @param array            $value   Value to serialize\n     * @param array            $opts    Request options to modify.\n     */\n    abstract protected function payload(\n        StructureShape $member,\n        array $value,\n        array &$opts\n    );\n\n    private function serialize(Operation $operation, array $args)\n    {\n        $opts = [];\n        $input = $operation->getInput();\n\n        // Apply the payload trait if present\n        if ($payload = $input['payload']) {\n            $this->applyPayload($input, $payload, $args, $opts);\n        }\n\n        foreach ($args as $name => $value) {\n            if ($input->hasMember($name)) {\n                $member = $input->getMember($name);\n                $location = $member['location'];\n                if (!$payload && !$location) {\n                    $bodyMembers[$name] = $value;\n                } elseif ($location == 'header') {\n                    $this->applyHeader($name, $member, $value, $opts);\n                } elseif ($location == 'querystring') {\n                    $this->applyQuery($name, $member, $value, $opts);\n                } elseif ($location == 'headers') {\n                    $this->applyHeaderMap($name, $member, $value, $opts);\n                }\n            }\n        }\n\n        if (isset($bodyMembers)) {\n            $this->payload($operation->getInput(), $bodyMembers, $opts);\n        } else if (!isset($opts['body']) && $this->hasPayloadParam($input, $payload)) {\n            $this->payload($operation->getInput(), [], $opts);\n        }\n\n        return $opts;\n    }\n\n    private function applyPayload(StructureShape $input, $name, array $args, array &$opts)\n    {\n        if (!isset($args[$name])) {\n            return;\n        }\n\n        $m = $input->getMember($name);\n\n        if ($m['streaming'] ||\n           ($m['type'] == 'string' || $m['type'] == 'blob')\n        ) {\n            // Streaming bodies or payloads that are strings are\n            // always just a stream of data.\n            $opts['body'] = Psr7\\Utils::streamFor($args[$name]);\n            return;\n        }\n\n        $this->payload($m, $args[$name], $opts);\n    }\n\n    private function applyHeader($name, Shape $member, $value, array &$opts)\n    {\n        if ($member->getType() === 'timestamp') {\n            $timestampFormat = !empty($member['timestampFormat'])\n                ? $member['timestampFormat']\n                : 'rfc822';\n            $value = TimestampShape::format($value, $timestampFormat);\n        } elseif ($member->getType() === 'boolean') {\n            $value = $value ? 'true' : 'false';\n        }\n\n        if ($member['jsonvalue']) {\n            $value = json_encode($value);\n            if (empty($value) && JSON_ERROR_NONE !== json_last_error()) {\n                throw new \\InvalidArgumentException('Unable to encode the provided value'\n                    . ' with \\'json_encode\\'. ' . json_last_error_msg());\n            }\n\n            $value = base64_encode($value);\n        }\n\n        $opts['headers'][$member['locationName'] ?: $name] = $value;\n    }\n\n    /**\n     * Note: This is currently only present in the Amazon S3 model.\n     */\n    private function applyHeaderMap($name, Shape $member, array $value, array &$opts)\n    {\n        $prefix = $member['locationName'];\n        foreach ($value as $k => $v) {\n            $opts['headers'][$prefix . $k] = $v;\n        }\n    }\n\n    private function applyQuery($name, Shape $member, $value, array &$opts)\n    {\n        if ($member instanceof MapShape) {\n            $opts['query'] = isset($opts['query']) && is_array($opts['query'])\n                ? $opts['query'] + $value\n                : $value;\n        } elseif ($value !== null) {\n            $type = $member->getType();\n            if ($type === 'boolean') {\n                $value = $value ? 'true' : 'false';\n            } elseif ($type === 'timestamp') {\n                $timestampFormat = !empty($member['timestampFormat'])\n                    ? $member['timestampFormat']\n                    : 'iso8601';\n                $value = TimestampShape::format($value, $timestampFormat);\n            }\n\n            $opts['query'][$member['locationName'] ?: $name] = $value;\n        }\n    }\n\n    private function buildEndpoint(Operation $operation, array $args, array $opts)\n    {\n        // Create an associative array of variable definitions used in expansions\n        $varDefinitions = $this->getVarDefinitions($operation, $args);\n\n        $relative = preg_replace_callback(\n            '/\\{([^\\}]+)\\}/',\n            function (array $matches) use ($varDefinitions) {\n                $isGreedy = substr($matches[1], -1, 1) == '+';\n                $k = $isGreedy ? substr($matches[1], 0, -1) : $matches[1];\n                if (!isset($varDefinitions[$k])) {\n                    return '';\n                }\n\n                if ($isGreedy) {\n                    return str_replace('%2F', '/', rawurlencode($varDefinitions[$k]));\n                }\n\n                return rawurlencode($varDefinitions[$k]);\n            },\n            $operation['http']['requestUri']\n        );\n\n        // Add the query string variables or appending to one if needed.\n        if (!empty($opts['query'])) {\n           $relative = $this->appendQuery($opts['query'], $relative);\n        }\n\n        $path = $this->endpoint->getPath();\n\n        //Accounts for trailing '/' in path when custom endpoint\n        //is provided to endpointProviderV2\n        if ($this->api->isModifiedModel()\n            && $this->api->getServiceName() === 's3'\n        ) {\n            if (substr($path, -1) === '/' && $relative[0] === '/') {\n                $path = rtrim($path, '/');\n            }\n            $relative = $path . $relative;\n        }\n        // If endpoint has path, remove leading '/' to preserve URI resolution.\n        if ($path && $relative[0] === '/') {\n            $relative = substr($relative, 1);\n        }\n\n        //Append path to endpoint when leading '//...' present\n        // as uri cannot be properly resolved\n        if ($this->api->isModifiedModel()\n            && strpos($relative, '//') === 0\n        ) {\n            return new Uri($this->endpoint . $relative);\n        }\n\n        // Expand path place holders using Amazon's slightly different URI\n        // template syntax.\n        return UriResolver::resolve($this->endpoint, new Uri($relative));\n    }\n\n    /**\n     * @param StructureShape $input\n     */\n    private function hasPayloadParam(StructureShape $input, $payload)\n    {\n        if ($payload) {\n            $potentiallyEmptyTypes = ['blob','string'];\n            if ($this->api->getMetadata('protocol') == 'rest-xml') {\n                $potentiallyEmptyTypes[] = 'structure';\n            }\n            $payloadMember = $input->getMember($payload);\n            if (in_array($payloadMember['type'], $potentiallyEmptyTypes)) {\n                return false;\n            }\n        }\n        foreach ($input->getMembers() as $member) {\n            if (!isset($member['location'])) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private function appendQuery($query, $endpoint)\n    {\n        $append = Psr7\\Query::build($query);\n        return $endpoint .= strpos($endpoint, '?') !== false ? \"&{$append}\" : \"?{$append}\";\n    }\n\n    private function getVarDefinitions($command, $args)\n    {\n        $varDefinitions = [];\n\n        foreach ($command->getInput()->getMembers() as $name => $member) {\n            if ($member['location'] == 'uri') {\n                $varDefinitions[$member['locationName'] ?: $name] =\n                    isset($args[$name])\n                        ? $args[$name]\n                        : null;\n            }\n        }\n        return $varDefinitions;\n    }\n}\n</Code>"
                }
            ],
            "url": "https://github.com/aws/aws-sdk-php/commit/aebc9f801438746ac4ade327551576cb75f635f2",
            "description": "AWS SDK for PHP is the Amazon Web Services software development kit for PHP. Within the scope of requests to S3 object keys and/or prefixes containing a Unix double-dot, a URI path traversal is possible. The issue exists in the `buildEndpoint` method in the RestSerializer component of the AWS SDK for PHP v3 prior to 3.288.1. The `buildEndpoint` method relies on the Guzzle Psr7 UriResolver utility, which strips dot segments from the request path in accordance with RFC 3986. Under certain conditions, this could lead to an arbitrary object being accessed. This issue has been patched in version 3.288.1.",
            "date": "2023-12-22",
            "github_description": "Description of changes:\nBypasses Guzzle's UriResolver for request paths that contain ../ parent path references.  Previously, the UriResolver would strip dot segments, leading to a situation where objects other than the intended target could be created or accessed.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\n    \"CWE-610\"\n  ],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-610"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2023-51651",
            "ground_truth_CWEs": [
                "CWE-22"
            ],
            "ground_truth_severities": {
                "V3.1": "LOW"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: No description provided.\nFile: src/base/PipeSocketHandler.cpp\nContent: \n<Code>\n#include \"PipeSocketHandler.hpp\"\n\nnamespace et {\nPipeSocketHandler::PipeSocketHandler() {}\n\nint PipeSocketHandler::connect(const SocketEndpoint& endpoint) {\n  lock_guard<std::recursive_mutex> mutexGuard(globalMutex);\n\n  string pipePath = endpoint.name();\n  sockaddr_un remote;\n\n  int sockFd = ::socket(AF_UNIX, SOCK_STREAM, 0);\n  FATAL_FAIL(sockFd);\n  initSocket(sockFd);\n  remote.sun_family = AF_UNIX;\n  strcpy(remote.sun_path, pipePath.c_str());\n\n  VLOG(3) << \"Connecting to \" << endpoint << \" with fd \" << sockFd;\n  int result =\n      ::connect(sockFd, (struct sockaddr*)&remote, sizeof(sockaddr_un));\n  auto localErrno = GetErrno();\n  if (result < 0 && localErrno != EINPROGRESS) {\n    VLOG(3) << \"Connection result: \" << result << \" (\" << strerror(localErrno)\n            << \")\";\n#ifdef WIN32\n    ::shutdown(sockFd, SD_BOTH);\n#else\n    ::shutdown(sockFd, SHUT_RDWR);\n#endif\n#ifdef _MSC_VER\n    FATAL_FAIL(::closesocket(sockFd));\n#else\n    FATAL_FAIL(::close(sockFd));\n#endif\n    sockFd = -1;\n    SetErrno(localErrno);\n    return sockFd;\n  }\n\n  fd_set fdset;\n  FD_ZERO(&fdset);\n  FD_SET(sockFd, &fdset);\n  timeval tv;\n  tv.tv_sec = 3; /* 3 second timeout */\n  tv.tv_usec = 0;\n  VLOG(4) << \"Before selecting sockFd\";\n  select(sockFd + 1, NULL, &fdset, NULL, &tv);\n\n  if (FD_ISSET(sockFd, &fdset)) {\n    VLOG(4) << \"sockFd \" << sockFd << \" is selected\";\n    int so_error;\n    socklen_t len = sizeof so_error;\n\n    FATAL_FAIL(\n        ::getsockopt(sockFd, SOL_SOCKET, SO_ERROR, (char*)&so_error, &len));\n\n    if (so_error == 0) {\n      LOG(INFO) << \"Connected to endpoint \" << endpoint;\n      // Initialize the socket again once it's blocking to make sure timeouts\n      // are set\n      initSocket(sockFd);\n\n      // if we get here, we must have connected successfully\n    } else {\n      LOG(INFO) << \"Error connecting to \" << endpoint << \": \" << so_error << \" \"\n                << strerror(so_error);\n#ifdef _MSC_VER\n      FATAL_FAIL(::closesocket(sockFd));\n#else\n      FATAL_FAIL(::close(sockFd));\n#endif\n      sockFd = -1;\n    }\n  } else {\n    auto localErrno = GetErrno();\n    LOG(INFO) << \"Error connecting to \" << endpoint << \": \" << localErrno << \" \"\n              << strerror(localErrno);\n#ifdef _MSC_VER\n    FATAL_FAIL(::closesocket(sockFd));\n#else\n    FATAL_FAIL(::close(sockFd));\n#endif\n    sockFd = -1;\n  }\n\n  LOG(INFO) << sockFd << \" is a good socket\";\n  if (sockFd >= 0) {\n    addToActiveSockets(sockFd);\n  }\n  return sockFd;\n}\n\nset<int> PipeSocketHandler::listen(const SocketEndpoint& endpoint) {\n  lock_guard<std::recursive_mutex> guard(globalMutex);\n\n  string pipePath = endpoint.name();\n  if (pipeServerSockets.find(pipePath) != pipeServerSockets.end()) {\n    throw runtime_error(\"Tried to listen twice on the same path\");\n  }\n\n  sockaddr_un local;\n\n  int fd = socket(AF_UNIX, SOCK_STREAM, 0);\n  FATAL_FAIL(fd);\n  initServerSocket(fd);\n  local.sun_family = AF_UNIX; /* local is declared before socket() ^ */\n  strcpy(local.sun_path, pipePath.c_str());\n  unlink(local.sun_path);\n\n  FATAL_FAIL(::bind(fd, (struct sockaddr*)&local, sizeof(sockaddr_un)));\n  ::listen(fd, 5);\n#ifndef WIN32\n  FATAL_FAIL(::chmod(local.sun_path, S_IRUSR | S_IWUSR | S_IXUSR));\n#endif\n\n  pipeServerSockets[pipePath] = set<int>({fd});\n  return pipeServerSockets[pipePath];\n}\n\nset<int> PipeSocketHandler::getEndpointFds(const SocketEndpoint& endpoint) {\n  lock_guard<std::recursive_mutex> guard(globalMutex);\n\n  string pipePath = endpoint.name();\n  if (pipeServerSockets.find(pipePath) == pipeServerSockets.end()) {\n    STFATAL << \"Tried to getPipeFd on a pipe without calling listen() first: \"\n            << pipePath;\n  }\n  return pipeServerSockets[pipePath];\n}\n\nvoid PipeSocketHandler::stopListening(const SocketEndpoint& endpoint) {\n  lock_guard<std::recursive_mutex> guard(globalMutex);\n\n  string pipePath = endpoint.name();\n  auto it = pipeServerSockets.find(pipePath);\n  if (it == pipeServerSockets.end()) {\n    STFATAL << \"Tried to stop listening to a pipe that we weren't listening on:\"\n            << pipePath;\n  }\n  int sockFd = *(it->second.begin());\n#ifdef _MSC_VER\n  FATAL_FAIL(::closesocket(sockFd));\n#else\n  FATAL_FAIL(::close(sockFd));\n#endif\n}\n}  // namespace et\n</Code>\n\nFile: src/terminal/TerminalClient.cpp\nContent: \n<Code>\n#include \"TerminalClient.hpp\"\n\n#include \"TelemetryService.hpp\"\n\nnamespace et {\nvector<PortForwardSourceRequest> parseRangesToRequests(const string& input) {\n  vector<PortForwardSourceRequest> pfsrs;\n  auto j = split(input, ',');\n  for (auto& pair : j) {\n    vector<string> sourceDestination = split(pair, ':');\n    try {\n      if (sourceDestination[0].find_first_not_of(\"0123456789-\") !=\n              string::npos &&\n          sourceDestination[1].find_first_not_of(\"0123456789-\") !=\n              string::npos) {\n        PortForwardSourceRequest pfsr;\n        pfsr.mutable_source()->set_name(sourceDestination[0]);\n        pfsr.mutable_destination()->set_name(sourceDestination[1]);\n        pfsrs.push_back(pfsr);\n      } else if (sourceDestination[0].find('-') != string::npos &&\n                 sourceDestination[1].find('-') != string::npos) {\n        vector<string> sourcePortRange = split(sourceDestination[0], '-');\n        int sourcePortStart = stoi(sourcePortRange[0]);\n        int sourcePortEnd = stoi(sourcePortRange[1]);\n\n        vector<string> destinationPortRange = split(sourceDestination[1], '-');\n        int destinationPortStart = stoi(destinationPortRange[0]);\n        int destinationPortEnd = stoi(destinationPortRange[1]);\n\n        if (sourcePortEnd - sourcePortStart !=\n            destinationPortEnd - destinationPortStart) {\n          STFATAL << \"source/destination port range mismatch\";\n          exit(1);\n        } else {\n          int portRangeLength = sourcePortEnd - sourcePortStart + 1;\n          for (int i = 0; i < portRangeLength; ++i) {\n            PortForwardSourceRequest pfsr;\n            pfsr.mutable_source()->set_port(sourcePortStart + i);\n            pfsr.mutable_destination()->set_port(destinationPortStart + i);\n            pfsrs.push_back(pfsr);\n          }\n        }\n      } else if (sourceDestination[0].find('-') != string::npos ||\n                 sourceDestination[1].find('-') != string::npos) {\n        STFATAL << \"Invalid port range syntax: if source is range, \"\n                   \"destination must be range\";\n      } else {\n        PortForwardSourceRequest pfsr;\n        pfsr.mutable_source()->set_port(stoi(sourceDestination[0]));\n        pfsr.mutable_destination()->set_port(stoi(sourceDestination[1]));\n        pfsrs.push_back(pfsr);\n      }\n    } catch (const std::logic_error& lr) {\n      STFATAL << \"Logic error: \" << lr.what();\n      exit(1);\n    }\n  }\n  return pfsrs;\n}\n\nTerminalClient::TerminalClient(shared_ptr<SocketHandler> _socketHandler,\n                               shared_ptr<SocketHandler> _pipeSocketHandler,\n                               const SocketEndpoint& _socketEndpoint,\n                               const string& id, const string& passkey,\n                               shared_ptr<Console> _console, bool jumphost,\n                               const string& tunnels,\n                               const string& reverseTunnels,\n                               bool forwardSshAgent,\n                               const string& identityAgent)\n    : console(_console), shuttingDown(false) {\n  portForwardHandler = shared_ptr<PortForwardHandler>(\n      new PortForwardHandler(_socketHandler, _pipeSocketHandler));\n  InitialPayload payload;\n  payload.set_jumphost(jumphost);\n\n  try {\n    if (tunnels.length()) {\n      auto pfsrs = parseRangesToRequests(tunnels);\n      for (auto& pfsr : pfsrs) {\n#ifdef WIN32\n        STFATAL << \"Source tunnel not supported on windows yet\";\n#else\n        auto pfsresponse =\n            portForwardHandler->createSource(pfsr, nullptr, -1, -1);\n        if (pfsresponse.has_error()) {\n          throw std::runtime_error(pfsresponse.error());\n        }\n#endif\n      }\n    }\n    if (reverseTunnels.length()) {\n      auto pfsrs = parseRangesToRequests(reverseTunnels);\n      for (auto& pfsr : pfsrs) {\n        *(payload.add_reversetunnels()) = pfsr;\n      }\n    }\n    if (forwardSshAgent) {\n      PortForwardSourceRequest pfsr;\n      string authSock = \"\";\n      if (identityAgent.length()) {\n        authSock.assign(identityAgent);\n      } else {\n        auto authSockEnv = getenv(\"SSH_AUTH_SOCK\");\n        if (!authSockEnv) {\n          CLOG(INFO, \"stdout\")\n              << \"Missing environment variable SSH_AUTH_SOCK.  Are you sure \"\n                 \"you \"\n                 \"ran ssh-agent first?\"\n              << endl;\n          exit(1);\n        }\n        authSock.assign(authSockEnv);\n      }\n      if (authSock.length()) {\n        pfsr.mutable_destination()->set_name(authSock);\n        pfsr.set_environmentvariable(\"SSH_AUTH_SOCK\");\n        *(payload.add_reversetunnels()) = pfsr;\n      }\n    }\n  } catch (const std::runtime_error& ex) {\n    CLOG(INFO, \"stdout\") << \"Error establishing port forward: \" << ex.what()\n                         << endl;\n    exit(1);\n  }\n\n  connection = shared_ptr<ClientConnection>(\n      new ClientConnection(_socketHandler, _socketEndpoint, id, passkey));\n\n  int connectFailCount = 0;\n  while (true) {\n    try {\n      bool fail = true;\n      if (connection->connect()) {\n        connection->writePacket(\n            Packet(EtPacketType::INITIAL_PAYLOAD, protoToString(payload)));\n        fd_set rfd;\n        timeval tv;\n        for (int a = 0; a < 3; a++) {\n          FD_ZERO(&rfd);\n          int clientFd = connection->getSocketFd();\n          if (clientFd < 0) {\n            std::this_thread::sleep_for(std::chrono::seconds(1));\n            continue;\n          }\n          FD_SET(clientFd, &rfd);\n          tv.tv_sec = 1;\n          tv.tv_usec = 0;\n          select(clientFd + 1, &rfd, NULL, NULL, &tv);\n          if (FD_ISSET(clientFd, &rfd)) {\n            Packet initialResponsePacket;\n            if (connection->readPacket(&initialResponsePacket)) {\n              if (initialResponsePacket.getHeader() !=\n                  EtPacketType::INITIAL_RESPONSE) {\n                CLOG(INFO, \"stdout\") << \"Error: Missing initial response\\n\";\n                STFATAL << \"Missing initial response!\";\n              }\n              auto initialResponse = stringToProto<InitialResponse>(\n                  initialResponsePacket.getPayload());\n              if (initialResponse.has_error()) {\n                CLOG(INFO, \"stdout\") << \"Error initializing connection: \"\n                                     << initialResponse.error() << endl;\n                exit(1);\n              }\n              fail = false;\n              break;\n            }\n          }\n        }\n      }\n      if (fail) {\n        LOG(WARNING) << \"Connecting to server failed: Connect timeout\";\n        connectFailCount++;\n        if (connectFailCount == 3) {\n          throw std::runtime_error(\"Connect Timeout\");\n        }\n      }\n    } catch (const runtime_error& err) {\n      LOG(INFO) << \"Could not make initial connection to server\";\n      CLOG(INFO, \"stdout\") << \"Could not make initial connection to \"\n                           << _socketEndpoint << \": \" << err.what() << endl;\n      exit(1);\n    }\n\n    TelemetryService::get()->logToDatadog(\"Connection Established\",\n                                          el::Level::Info, __FILE__, __LINE__);\n    break;\n  }\n  VLOG(1) << \"Client created with id: \" << connection->getId();\n};\n\nTerminalClient::~TerminalClient() {\n  connection->shutdown();\n  console.reset();\n  portForwardHandler.reset();\n  connection.reset();\n}\n\nvoid TerminalClient::run(const string& command) {\n  if (console) {\n    console->setup();\n  }\n\n// TE sends/receives data to/from the shell one char at a time.\n#define BUF_SIZE (16 * 1024)\n  char b[BUF_SIZE];\n\n  time_t keepaliveTime = time(NULL) + CLIENT_KEEP_ALIVE_DURATION;\n  bool waitingOnKeepalive = false;\n\n  if (command.length()) {\n    LOG(INFO) << \"Got command: \" << command;\n    et::TerminalBuffer tb;\n    tb.set_buffer(command + \"; exit\\n\");\n\n    connection->writePacket(\n        Packet(TerminalPacketType::TERMINAL_BUFFER, protoToString(tb)));\n  }\n\n  TerminalInfo lastTerminalInfo;\n\n  if (!console.get()) {\n    CLOG(INFO, \"stdout\") << \"ET running, feel free to background...\" << endl;\n  }\n\n  while (!connection->isShuttingDown()) {\n    {\n      lock_guard<recursive_mutex> guard(shutdownMutex);\n      if (shuttingDown) {\n        break;\n      }\n    }\n    // Data structures needed for select() and\n    // non-blocking I/O.\n    fd_set rfd;\n    timeval tv;\n\n    FD_ZERO(&rfd);\n    int maxfd = -1;\n    int consoleFd = -1;\n    if (console) {\n      consoleFd = console->getFd();\n      maxfd = consoleFd;\n      FD_SET(consoleFd, &rfd);\n    }\n    int clientFd = connection->getSocketFd();\n    if (clientFd > 0) {\n      FD_SET(clientFd, &rfd);\n      maxfd = max(maxfd, clientFd);\n    }\n    // TODO: set port forward sockets as well for performance reasons.\n    tv.tv_sec = 0;\n    tv.tv_usec = 10000;\n    select(maxfd + 1, &rfd, NULL, NULL, &tv);\n\n    try {\n      if (console) {\n        // Check for data to send.\n        if (FD_ISSET(consoleFd, &rfd)) {\n          // Read from stdin and write to our client that will then send it to\n          // the server.\n          VLOG(4) << \"Got data from stdin\";\n#ifdef WIN32\n          DWORD events;\n          INPUT_RECORD buffer[128];\n          HANDLE handle = GetStdHandle(STD_INPUT_HANDLE);\n          PeekConsoleInput(handle, buffer, 128, &events);\n          if (events > 0) {\n            ReadConsoleInput(handle, buffer, 128, &events);\n            string s;\n            for (int keyEvent = 0; keyEvent < events; keyEvent++) {\n              if (buffer[keyEvent].EventType == KEY_EVENT &&\n                  buffer[keyEvent].Event.KeyEvent.bKeyDown) {\n                char charPressed =\n                    ((char)buffer[keyEvent].Event.KeyEvent.uChar.AsciiChar);\n                if (charPressed) {\n                  s += charPressed;\n                }\n              }\n            }\n            if (s.length()) {\n              et::TerminalBuffer tb;\n              tb.set_buffer(s);\n\n              connection->writePacket(Packet(\n                  TerminalPacketType::TERMINAL_BUFFER, protoToString(tb)));\n              keepaliveTime = time(NULL) + CLIENT_KEEP_ALIVE_DURATION;\n            }\n          }\n#else\n          if (console) {\n            int rc = ::read(consoleFd, b, BUF_SIZE);\n            FATAL_FAIL(rc);\n            if (rc > 0) {\n              // VLOG(1) << \"Sending byte: \" << int(b) << \" \" << char(b) << \" \"\n              // << connection->getWriter()->getSequenceNumber();\n              string s(b, rc);\n              et::TerminalBuffer tb;\n              tb.set_buffer(s);\n\n              connection->writePacket(Packet(\n                  TerminalPacketType::TERMINAL_BUFFER, protoToString(tb)));\n              keepaliveTime = time(NULL) + CLIENT_KEEP_ALIVE_DURATION;\n            }\n          }\n#endif\n        }\n      }\n\n      if (clientFd > 0 && FD_ISSET(clientFd, &rfd)) {\n        VLOG(4) << \"Clientfd is selected\";\n        while (connection->hasData()) {\n          VLOG(4) << \"connection has data\";\n          Packet packet;\n          if (!connection->read(&packet)) {\n            break;\n          }\n          uint8_t packetType = packet.getHeader();\n          if (packetType == et::TerminalPacketType::PORT_FORWARD_DATA ||\n              packetType ==\n                  et::TerminalPacketType::PORT_FORWARD_DESTINATION_REQUEST ||\n              packetType ==\n                  et::TerminalPacketType::PORT_FORWARD_DESTINATION_RESPONSE) {\n            keepaliveTime = time(NULL) + CLIENT_KEEP_ALIVE_DURATION;\n            VLOG(4) << \"Got PF packet type \" << packetType;\n            portForwardHandler->handlePacket(packet, connection);\n            continue;\n          }\n          switch (packetType) {\n            case et::TerminalPacketType::TERMINAL_BUFFER: {\n              if (console) {\n                VLOG(3) << \"Got terminal buffer\";\n                // Read from the server and write to our fake terminal\n                et::TerminalBuffer tb =\n                    stringToProto<et::TerminalBuffer>(packet.getPayload());\n                const string& s = tb.buffer();\n                // VLOG(5) << \"Got message: \" << s;\n                // VLOG(1) << \"Got byte: \" << int(b) << \" \" << char(b) << \" \" <<\n                // connection->getReader()->getSequenceNumber();\n                keepaliveTime = time(NULL) + CLIENT_KEEP_ALIVE_DURATION;\n                console->write(s);\n              }\n              break;\n            }\n            case et::TerminalPacketType::KEEP_ALIVE:\n              waitingOnKeepalive = false;\n              // This will fill up log file quickly but is helpful for debugging\n              // latency issues.\n              LOG(INFO) << \"Got a keepalive\";\n              break;\n            default:\n              STFATAL << \"Unknown packet type: \" << int(packetType);\n          }\n        }\n      }\n\n      if (clientFd > 0 && keepaliveTime < time(NULL)) {\n        keepaliveTime = time(NULL) + CLIENT_KEEP_ALIVE_DURATION;\n        if (waitingOnKeepalive) {\n          LOG(INFO) << \"Missed a keepalive, killing connection.\";\n          connection->closeSocketAndMaybeReconnect();\n          waitingOnKeepalive = false;\n        } else {\n          LOG(INFO) << \"Writing keepalive packet\";\n          connection->writePacket(Packet(TerminalPacketType::KEEP_ALIVE, \"\"));\n          waitingOnKeepalive = true;\n        }\n      }\n      if (clientFd < 0) {\n        // We are disconnected, so stop waiting for keepalive.\n        waitingOnKeepalive = false;\n      }\n\n      if (console) {\n        TerminalInfo ti = console->getTerminalInfo();\n\n        if (ti != lastTerminalInfo) {\n          LOG(INFO) << \"Window size changed: row: \" << ti.row()\n                    << \" column: \" << ti.column() << \" width: \" << ti.width()\n                    << \" height: \" << ti.height();\n          lastTerminalInfo = ti;\n          connection->writePacket(\n              Packet(TerminalPacketType::TERMINAL_INFO, protoToString(ti)));\n        }\n      }\n\n      vector<PortForwardDestinationRequest> requests;\n      vector<PortForwardData> dataToSend;\n      portForwardHandler->update(&requests, &dataToSend);\n      for (auto& pfr : requests) {\n        connection->writePacket(\n            Packet(TerminalPacketType::PORT_FORWARD_DESTINATION_REQUEST,\n                   protoToString(pfr)));\n        VLOG(4) << \"send PF request\";\n        keepaliveTime = time(NULL) + CLIENT_KEEP_ALIVE_DURATION;\n      }\n      for (auto& pwd : dataToSend) {\n        connection->writePacket(\n            Packet(TerminalPacketType::PORT_FORWARD_DATA, protoToString(pwd)));\n        VLOG(4) << \"send PF data\";\n        keepaliveTime = time(NULL) + CLIENT_KEEP_ALIVE_DURATION;\n      }\n    } catch (const runtime_error& re) {\n      STERROR << \"Error: \" << re.what();\n      CLOG(INFO, \"stdout\") << \"Connection closing because of error: \"\n                           << re.what() << endl;\n      lock_guard<recursive_mutex> guard(shutdownMutex);\n      shuttingDown = true;\n    }\n  }\n  if (console) {\n    console->teardown();\n  }\n  CLOG(INFO, \"stdout\") << \"Session terminated\" << endl;\n}\n}  // namespace et\n</Code>"
                }
            ],
            "url": "https://github.com/MisterTea/EternalTerminal/commit/900348bb8bc96e1c7ba4888ac8480f643c43d3c3",
            "description": "A privilege escalation to root exists in Eternal Terminal prior to version 6.2.0. This is due to the combination of a race condition, buffer overflow, and logic bug all in PipeSocketHandler::listen().",
            "date": "2022-08-16",
            "github_description": "No description provided.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-404\", \"CWE-754\"],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-754",
                    "CWE-404"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2022-24949",
            "ground_truth_CWEs": [
                "CWE-362",
                "CWE-120"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS  . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\n\"CVSS v3.0 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: What type of PR is this?\n(REQUIRED)\n\nsecurity\nbug\n\nWhat this PR does / why we need it:\nAddresses several security concerns raised by external audit/review\n\nAll user HTTP requests now use a custom Transport class that applies a timeout and blocks known internal address spaces\nNote that you can't simple whitelist specific IP's, you must resolve the domain name first and then check the address space of the resolved IP. This prevents attackers from creating a DNS entry that resolves to a local address space and using that url to attack a Mealie instance.\n\nAlso, note that these are mitigations, they are not 100% fixes.\nWhich issue(s) this PR fixes:\n\nCloses fix: Add 127.0.1.1 to exclude list\u00a0#3364\n\nSpecial notes for your reviewer:\nI've tested locally and all the automated testing should pass. If possible, I would like another reviewer to pull down these changes and attempt to\n\nScrape a few recipes from different domains\nUse the Scrape Image functionality to pull external images into Mealie from a few different domains.\n\nTesting\nSee Above\nFile: mealie/core/settings/settings.py\nContent: \n<Code>\nimport secrets\nfrom pathlib import Path\n\nfrom pydantic import field_validator\nfrom pydantic_settings import BaseSettings, SettingsConfigDict\n\nfrom mealie.core.settings.themes import Theme\n\nfrom .db_providers import AbstractDBProvider, db_provider_factory\n\n\ndef determine_secrets(data_dir: Path, production: bool) -> str:\n    if not production:\n        return \"shh-secret-test-key\"\n\n    secrets_file = data_dir.joinpath(\".secret\")\n    if secrets_file.is_file():\n        with open(secrets_file) as f:\n            return f.read()\n    else:\n        data_dir.mkdir(parents=True, exist_ok=True)\n        with open(secrets_file, \"w\") as f:\n            new_secret = secrets.token_hex(32)\n            f.write(new_secret)\n        return new_secret\n\n\nclass AppSettings(BaseSettings):\n    theme: Theme = Theme()\n\n    PRODUCTION: bool\n    BASE_URL: str = \"http://localhost:8080\"\n    \"\"\"trailing slashes are trimmed (ex. `http://localhost:8080/` becomes ``http://localhost:8080`)\"\"\"\n\n    STATIC_FILES: str = \"\"\n    \"\"\"path to static files directory (ex. `mealie/dist`)\"\"\"\n\n    IS_DEMO: bool = False\n    API_PORT: int = 9000\n    API_DOCS: bool = True\n    TOKEN_TIME: int = 48\n    \"\"\"time in hours\"\"\"\n\n    SECRET: str\n    LOG_LEVEL: str = \"INFO\"\n    \"\"\"corresponds to standard Python log levels\"\"\"\n\n    GIT_COMMIT_HASH: str = \"unknown\"\n\n    ALLOW_SIGNUP: bool = True\n\n    # ===============================================\n    # Security Configuration\n\n    SECURITY_MAX_LOGIN_ATTEMPTS: int = 5\n    SECURITY_USER_LOCKOUT_TIME: int = 24\n    \"time in hours\"\n\n    @field_validator(\"BASE_URL\")\n    @classmethod\n    def remove_trailing_slash(cls, v: str) -> str:\n        if v and v[-1] == \"/\":\n            return v[:-1]\n\n        return v\n\n    @property\n    def DOCS_URL(self) -> str | None:\n        return \"/docs\" if self.API_DOCS else None\n\n    @property\n    def REDOC_URL(self) -> str | None:\n        return \"/redoc\" if self.API_DOCS else None\n\n    # ===============================================\n    # Database Configuration\n\n    DB_ENGINE: str = \"sqlite\"  # Options: 'sqlite', 'postgres'\n    DB_PROVIDER: AbstractDBProvider | None = None\n\n    @property\n    def DB_URL(self) -> str | None:\n        return self.DB_PROVIDER.db_url if self.DB_PROVIDER else None\n\n    @property\n    def DB_URL_PUBLIC(self) -> str | None:\n        return self.DB_PROVIDER.db_url_public if self.DB_PROVIDER else None\n\n    DEFAULT_GROUP: str = \"Home\"\n\n    _DEFAULT_EMAIL: str = \"changeme@example.com\"\n    \"\"\"\n    This is the default email used for the first user created in the database. This is only used if no users\n    exist in the database. it should no longer be set by end users.\n    \"\"\"\n    _DEFAULT_PASSWORD: str = \"MyPassword\"\n    \"\"\"\n    This is the default password used for the first user created in the database. This is only used if no users\n    exist in the database. it should no longer be set by end users.\n    \"\"\"\n\n    # ===============================================\n    # Email Configuration\n\n    SMTP_HOST: str | None = None\n    SMTP_PORT: str | None = \"587\"\n    SMTP_FROM_NAME: str | None = \"Mealie\"\n    SMTP_FROM_EMAIL: str | None = None\n    SMTP_USER: str | None = None\n    SMTP_PASSWORD: str | None = None\n    SMTP_AUTH_STRATEGY: str | None = \"TLS\"  # Options: 'TLS', 'SSL', 'NONE'\n\n    @property\n    def SMTP_ENABLE(self) -> bool:\n        return AppSettings.validate_smtp(\n            self.SMTP_HOST,\n            self.SMTP_PORT,\n            self.SMTP_FROM_NAME,\n            self.SMTP_FROM_EMAIL,\n            self.SMTP_AUTH_STRATEGY,\n            self.SMTP_USER,\n            self.SMTP_PASSWORD,\n        )\n\n    @staticmethod\n    def validate_smtp(\n        host: str | None = None,\n        port: str | None = None,\n        from_name: str | None = None,\n        from_email: str | None = None,\n        strategy: str | None = None,\n        user: str | None = None,\n        password: str | None = None,\n    ) -> bool:\n        \"\"\"Validates all SMTP variables are set\"\"\"\n        required = {host, port, from_name, from_email, strategy}\n\n        if strategy and strategy.upper() in {\"TLS\", \"SSL\"}:\n            required.add(user)\n            required.add(password)\n\n        return \"\" not in required and None not in required\n\n    # ===============================================\n    # LDAP Configuration\n\n    LDAP_AUTH_ENABLED: bool = False\n    LDAP_SERVER_URL: str | None = None\n    LDAP_TLS_INSECURE: bool = False\n    LDAP_TLS_CACERTFILE: str | None = None\n    LDAP_ENABLE_STARTTLS: bool = False\n    LDAP_BASE_DN: str | None = None\n    LDAP_QUERY_BIND: str | None = None\n    LDAP_QUERY_PASSWORD: str | None = None\n    LDAP_USER_FILTER: str | None = None\n    LDAP_ADMIN_FILTER: str | None = None\n    LDAP_ID_ATTRIBUTE: str = \"uid\"\n    LDAP_MAIL_ATTRIBUTE: str = \"mail\"\n    LDAP_NAME_ATTRIBUTE: str = \"name\"\n\n    @property\n    def LDAP_ENABLED(self) -> bool:\n        \"\"\"Validates LDAP settings are all set\"\"\"\n        required = {\n            self.LDAP_SERVER_URL,\n            self.LDAP_BASE_DN,\n            self.LDAP_ID_ATTRIBUTE,\n            self.LDAP_MAIL_ATTRIBUTE,\n            self.LDAP_NAME_ATTRIBUTE,\n        }\n        not_none = None not in required\n        return self.LDAP_AUTH_ENABLED and not_none\n\n    # ===============================================\n    # OIDC Configuration\n    OIDC_AUTH_ENABLED: bool = False\n    OIDC_CLIENT_ID: str | None = None\n    OIDC_CONFIGURATION_URL: str | None = None\n    OIDC_SIGNUP_ENABLED: bool = True\n    OIDC_USER_GROUP: str | None = None\n    OIDC_ADMIN_GROUP: str | None = None\n    OIDC_AUTO_REDIRECT: bool = False\n    OIDC_PROVIDER_NAME: str = \"OAuth\"\n    OIDC_REMEMBER_ME: bool = False\n    OIDC_SIGNING_ALGORITHM: str = \"RS256\"\n\n    @property\n    def OIDC_READY(self) -> bool:\n        \"\"\"Validates OIDC settings are all set\"\"\"\n\n        required = {self.OIDC_CLIENT_ID, self.OIDC_CONFIGURATION_URL}\n        not_none = None not in required\n        return self.OIDC_AUTH_ENABLED and not_none\n\n    # ===============================================\n    # Testing Config\n\n    TESTING: bool = False\n    model_config = SettingsConfigDict(arbitrary_types_allowed=True, extra=\"allow\")\n\n\ndef app_settings_constructor(data_dir: Path, production: bool, env_file: Path, env_encoding=\"utf-8\") -> AppSettings:\n    \"\"\"\n    app_settings_constructor is a factory function that returns an AppSettings object. It is used to inject the\n    required dependencies into the AppSettings object and nested child objects. AppSettings should not be substantiated\n    directly, but rather through this factory function.\n    \"\"\"\n    app_settings = AppSettings(\n        _env_file=env_file,  # type: ignore\n        _env_file_encoding=env_encoding,  # type: ignore\n        **{\"SECRET\": determine_secrets(data_dir, production)},\n    )\n\n    app_settings.DB_PROVIDER = db_provider_factory(\n        app_settings.DB_ENGINE or \"sqlite\",\n        data_dir,\n        env_file=env_file,\n        env_encoding=env_encoding,\n    )\n\n    return app_settings\n</Code>\n\nFile: mealie/services/recipe/recipe_data_service.py\nContent: \n<Code>\nimport asyncio\nimport shutil\nfrom pathlib import Path\n\nfrom httpx import AsyncClient, Response\nfrom pydantic import UUID4\n\nfrom mealie.pkgs import img\nfrom mealie.schema.recipe.recipe import Recipe\nfrom mealie.services._base_service import BaseService\n\n_FIREFOX_UA = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0\"\n\n\nasync def gather_with_concurrency(n, *coros, ignore_exceptions=False):\n    semaphore = asyncio.Semaphore(n)\n\n    async def sem_coro(coro):\n        async with semaphore:\n            return await coro\n\n    results = await asyncio.gather(*(sem_coro(c) for c in coros), return_exceptions=ignore_exceptions)\n    if ignore_exceptions:\n        results = [r for r in results if not isinstance(r, Exception)]\n    return results\n\n\nasync def largest_content_len(urls: list[str]) -> tuple[str, int]:\n    largest_url = \"\"\n    largest_len = 0\n\n    async def do(client: AsyncClient, url: str) -> Response:\n        return await client.head(url, headers={\"User-Agent\": _FIREFOX_UA})\n\n    async with AsyncClient() as client:\n        tasks = [do(client, url) for url in urls]\n        responses: list[Response] = await gather_with_concurrency(10, *tasks, ignore_exceptions=True)\n        for response in responses:\n            len_int = int(response.headers.get(\"Content-Length\", 0))\n            if len_int > largest_len:\n                largest_url = str(response.url)\n                largest_len = len_int\n\n    return largest_url, largest_len\n\n\nclass NotAnImageError(Exception):\n    pass\n\n\nclass InvalidDomainError(Exception):\n    pass\n\n\nclass RecipeDataService(BaseService):\n    minifier: img.ABCMinifier\n\n    def __init__(self, recipe_id: UUID4, group_id: UUID4 | None = None) -> None:\n        \"\"\"\n        RecipeDataService is a service that consolidates the reading/writing actions related\n        to assets, and images for a recipe.\n        \"\"\"\n        super().__init__()\n\n        self.recipe_id = recipe_id\n        self.slug = group_id\n        self.minifier = img.PillowMinifier(purge=True, logger=self.logger)\n\n        self.dir_data = Recipe.directory_from_id(self.recipe_id)\n        self.dir_image = self.dir_data.joinpath(\"images\")\n        self.dir_image_timeline = self.dir_image.joinpath(\"timeline\")\n        self.dir_assets = self.dir_data.joinpath(\"assets\")\n\n        for dir in [self.dir_image, self.dir_image_timeline, self.dir_assets]:\n            dir.mkdir(parents=True, exist_ok=True)\n\n    def delete_all_data(self) -> None:\n        try:\n            shutil.rmtree(self.dir_data)\n        except Exception as e:\n            self.logger.exception(f\"Failed to delete recipe data: {e}\")\n\n    def write_image(self, file_data: bytes | Path, extension: str, image_dir: Path | None = None) -> Path:\n        if not image_dir:\n            image_dir = self.dir_image\n\n        extension = extension.replace(\".\", \"\")\n        image_path = image_dir.joinpath(f\"original.{extension}\")\n        image_path.unlink(missing_ok=True)\n\n        if isinstance(file_data, Path):\n            shutil.copy2(file_data, image_path)\n        elif isinstance(file_data, bytes):\n            with open(image_path, \"ab\") as f:\n                f.write(file_data)\n        else:\n            with open(image_path, \"ab\") as f:\n                shutil.copyfileobj(file_data, f)\n\n        self.minifier.minify(image_path)\n\n        return image_path\n\n    @staticmethod\n    def _validate_image_url(url: str) -> bool:\n        # sourcery skip: invert-any-all, use-any\n        \"\"\"\n        Validates that the URL is of an allowed source and restricts certain sources to prevent\n        malicious images from being downloaded.\n        \"\"\"\n        invalid_domains = {\"127.0.0.1\", \"localhost\"}\n        for domain in invalid_domains:\n            if domain in url:\n                return False\n\n        return True\n\n    async def scrape_image(self, image_url) -> None:\n        self.logger.info(f\"Image URL: {image_url}\")\n\n        if not self._validate_image_url(image_url):\n            self.logger.error(f\"Invalid image URL: {image_url}\")\n            raise InvalidDomainError(f\"Invalid domain: {image_url}\")\n\n        if isinstance(image_url, str):  # Handles String Types\n            pass\n\n        elif isinstance(image_url, list):  # Handles List Types\n            # Multiple images have been defined in the schema - usually different resolutions\n            # Typically would be in smallest->biggest order, but can't be certain so test each.\n            # 'Google will pick the best image to display in Search results based on the aspect ratio and resolution.'\n            image_url, _ = await largest_content_len(image_url)\n\n        elif isinstance(image_url, dict):  # Handles Dictionary Types\n            for key in image_url:\n                if key == \"url\":\n                    image_url = image_url.get(\"url\")\n\n        ext = image_url.split(\".\")[-1]\n\n        if ext not in img.IMAGE_EXTENSIONS:\n            ext = \"jpg\"  # Guess the extension\n\n        file_name = f\"{str(self.recipe_id)}.{ext}\"\n        file_path = Recipe.directory_from_id(self.recipe_id).joinpath(\"images\", file_name)\n\n        async with AsyncClient() as client:\n            try:\n                r = await client.get(image_url, headers={\"User-Agent\": _FIREFOX_UA})\n            except Exception:\n                self.logger.exception(\"Fatal Image Request Exception\")\n                return None\n\n            if r.status_code != 200:\n                # TODO: Probably should throw an exception in this case as well, but before these changes\n                # we were returning None if it failed anyways.\n                return None\n\n            content_type = r.headers.get(\"content-type\", \"\")\n\n            if \"image\" not in content_type:\n                self.logger.error(f\"Content-Type: {content_type} is not an image\")\n                raise NotAnImageError(f\"Content-Type {content_type} is not an image\")\n\n            self.logger.debug(f\"File Name Suffix {file_path.suffix}\")\n            self.write_image(r.read(), file_path.suffix)\n            file_path.unlink(missing_ok=True)\n</Code>\n\nFile: mealie/services/scraper/scraper.py\nContent: \n<Code>\nfrom enum import Enum\nfrom uuid import uuid4\n\nfrom fastapi import HTTPException, status\nfrom slugify import slugify\n\nfrom mealie.core.root_logger import get_logger\nfrom mealie.lang.providers import Translator\nfrom mealie.pkgs import cache\nfrom mealie.schema.recipe import Recipe\nfrom mealie.services.recipe.recipe_data_service import RecipeDataService\nfrom mealie.services.scraper.scraped_extras import ScrapedExtras\n\nfrom .recipe_scraper import RecipeScraper\n\n\nclass ParserErrors(str, Enum):\n    BAD_RECIPE_DATA = \"BAD_RECIPE_DATA\"\n    NO_RECIPE_DATA = \"NO_RECIPE_DATA\"\n    CONNECTION_ERROR = \"CONNECTION_ERROR\"\n\n\nasync def create_from_url(url: str, translator: Translator) -> tuple[Recipe, ScrapedExtras | None]:\n    \"\"\"Main entry point for generating a recipe from a URL. Pass in a URL and\n    a Recipe object will be returned if successful.\n\n    Args:\n        url (str): a valid string representing a URL\n\n    Returns:\n        Recipe: Recipe Object\n    \"\"\"\n    scraper = RecipeScraper(translator)\n    new_recipe, extras = await scraper.scrape(url)\n\n    if not new_recipe:\n        raise HTTPException(status.HTTP_400_BAD_REQUEST, {\"details\": ParserErrors.BAD_RECIPE_DATA.value})\n\n    new_recipe.id = uuid4()\n    logger = get_logger()\n    logger.debug(f\"Image {new_recipe.image}\")\n\n    recipe_data_service = RecipeDataService(new_recipe.id)\n\n    try:\n        await recipe_data_service.scrape_image(new_recipe.image)\n\n        if new_recipe.name is None:\n            new_recipe.name = \"Untitled\"\n\n        new_recipe.slug = slugify(new_recipe.name)\n        new_recipe.image = cache.new_key(4)\n    except Exception as e:\n        recipe_data_service.logger.exception(f\"Error Scraping Image: {e}\")\n        new_recipe.image = \"no image\"\n\n    if new_recipe.name is None or new_recipe.name == \"\":\n        new_recipe.name = f\"No Recipe Name Found - {str(uuid4())}\"\n        new_recipe.slug = slugify(new_recipe.name)\n\n    return new_recipe, extras\n</Code>\n\nFile: mealie/services/scraper/scraper_strategies.py\nContent: \n<Code>\nimport time\nfrom abc import ABC, abstractmethod\nfrom collections.abc import Callable\nfrom typing import Any\n\nimport extruct\nfrom fastapi import HTTPException, status\nfrom httpx import AsyncClient\nfrom recipe_scrapers import NoSchemaFoundInWildMode, SchemaScraperFactory, scrape_html\nfrom slugify import slugify\nfrom w3lib.html import get_base_url\n\nfrom mealie.core.root_logger import get_logger\nfrom mealie.lang.providers import Translator\nfrom mealie.schema.recipe.recipe import Recipe, RecipeStep\nfrom mealie.services.scraper.scraped_extras import ScrapedExtras\n\nfrom . import cleaner\n\n_FIREFOX_UA = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0\"\nSCRAPER_TIMEOUT = 15\n\n\nclass ForceTimeoutException(Exception):\n    pass\n\n\nasync def safe_scrape_html(url: str) -> str:\n    \"\"\"\n    Scrapes the html from a url but will cancel the request\n    if the request takes longer than 15 seconds. This is used to mitigate\n    DDOS attacks from users providing a url with arbitrary large content.\n    \"\"\"\n    async with AsyncClient() as client:\n        html_bytes = b\"\"\n        async with client.stream(\"GET\", url, timeout=SCRAPER_TIMEOUT, headers={\"User-Agent\": _FIREFOX_UA}) as resp:\n            start_time = time.time()\n\n            async for chunk in resp.aiter_bytes(chunk_size=1024):\n                html_bytes += chunk\n\n                if time.time() - start_time > SCRAPER_TIMEOUT:\n                    raise ForceTimeoutException()\n\n        # =====================================\n        # Copied from requests text property\n\n        # Try charset from content-type\n        content = None\n        encoding = resp.encoding\n\n        if not html_bytes:\n            return \"\"\n\n        # Fallback to auto-detected encoding.\n        if encoding is None:\n            encoding = resp.apparent_encoding\n\n        # Decode unicode from given encoding.\n        try:\n            content = str(html_bytes, encoding, errors=\"replace\")\n        except (LookupError, TypeError):\n            # A LookupError is raised if the encoding was not found which could\n            # indicate a misspelling or similar mistake.\n            #\n            # A TypeError can be raised if encoding is None\n            #\n            # So we try blindly encoding.\n            content = str(html_bytes, errors=\"replace\")\n\n        return content\n\n\nclass ABCScraperStrategy(ABC):\n    \"\"\"\n    Abstract class for all recipe parsers.\n    \"\"\"\n\n    url: str\n\n    def __init__(self, url: str, translator: Translator) -> None:\n        self.logger = get_logger()\n        self.url = url\n        self.translator = translator\n\n    @abstractmethod\n    async def get_html(self, url: str) -> str: ...\n\n    @abstractmethod\n    async def parse(self) -> tuple[Recipe, ScrapedExtras] | tuple[None, None]:\n        \"\"\"Parse a recipe from a web URL.\n\n        Args:\n            recipe_url (str): Full URL of the recipe to scrape.\n\n        Returns:\n            Recipe: Recipe object.\n        \"\"\"\n        ...\n\n\nclass RecipeScraperPackage(ABCScraperStrategy):\n    async def get_html(self, url: str) -> str:\n        return await safe_scrape_html(url)\n\n    def clean_scraper(self, scraped_data: SchemaScraperFactory.SchemaScraper, url: str) -> tuple[Recipe, ScrapedExtras]:\n        def try_get_default(\n            func_call: Callable | None, get_attr: str, default: Any, clean_func=None, **clean_func_kwargs\n        ):\n            value = default\n\n            if func_call:\n                try:\n                    value = func_call()\n                except Exception:\n                    self.logger.error(f\"Error parsing recipe func_call for '{get_attr}'\")\n\n            if value == default:\n                try:\n                    value = scraped_data.schema.data.get(get_attr)\n                except Exception:\n                    self.logger.error(f\"Error parsing recipe attribute '{get_attr}'\")\n\n            if clean_func:\n                value = clean_func(value, **clean_func_kwargs)\n\n            return value\n\n        def get_instructions() -> list[RecipeStep]:\n            instruction_as_text = try_get_default(\n                scraped_data.instructions, \"recipeInstructions\", [\"No Instructions Found\"]\n            )\n\n            self.logger.debug(f\"Scraped Instructions: (Type: {type(instruction_as_text)}) \\n {instruction_as_text}\")\n\n            instruction_as_text = cleaner.clean_instructions(instruction_as_text)\n\n            self.logger.debug(f\"Cleaned Instructions: (Type: {type(instruction_as_text)}) \\n {instruction_as_text}\")\n\n            try:\n                return [RecipeStep(title=\"\", text=x.get(\"text\")) for x in instruction_as_text]\n            except TypeError:\n                return []\n\n        cook_time = try_get_default(\n            None, \"performTime\", None, cleaner.clean_time, translator=self.translator\n        ) or try_get_default(None, \"cookTime\", None, cleaner.clean_time, translator=self.translator)\n\n        extras = ScrapedExtras()\n\n        extras.set_tags(try_get_default(None, \"keywords\", \"\", cleaner.clean_tags))\n\n        recipe = Recipe(\n            name=try_get_default(scraped_data.title, \"name\", \"No Name Found\", cleaner.clean_string),\n            slug=\"\",\n            image=try_get_default(None, \"image\", None, cleaner.clean_image),\n            description=try_get_default(None, \"description\", \"\", cleaner.clean_string),\n            nutrition=try_get_default(None, \"nutrition\", None, cleaner.clean_nutrition),\n            recipe_yield=try_get_default(scraped_data.yields, \"recipeYield\", \"1\", cleaner.clean_string),\n            recipe_ingredient=try_get_default(\n                scraped_data.ingredients, \"recipeIngredient\", [\"\"], cleaner.clean_ingredients\n            ),\n            recipe_instructions=get_instructions(),\n            total_time=try_get_default(None, \"totalTime\", None, cleaner.clean_time, translator=self.translator),\n            prep_time=try_get_default(None, \"prepTime\", None, cleaner.clean_time, translator=self.translator),\n            perform_time=cook_time,\n            org_url=url,\n        )\n\n        return recipe, extras\n\n    async def scrape_url(self) -> SchemaScraperFactory.SchemaScraper | Any | None:\n        recipe_html = await self.get_html(self.url)\n\n        try:\n            scraped_schema = scrape_html(recipe_html, org_url=self.url)\n        except (NoSchemaFoundInWildMode, AttributeError):\n            self.logger.error(f\"Recipe Scraper was unable to extract a recipe from {self.url}\")\n            return None\n\n        except ConnectionError as e:\n            raise HTTPException(status.HTTP_400_BAD_REQUEST, {\"details\": \"CONNECTION_ERROR\"}) from e\n\n        # Check to see if the recipe is valid\n        try:\n            ingredients = scraped_schema.ingredients()\n        except Exception:\n            ingredients = []\n\n        try:\n            instruct: list | str = scraped_schema.instructions()\n        except Exception:\n            instruct = []\n\n        if instruct or ingredients:\n            return scraped_schema\n\n        self.logger.debug(f\"Recipe Scraper [Package] was unable to extract a recipe from {self.url}\")\n        return None\n\n    async def parse(self):\n        \"\"\"\n        Parse a recipe from a given url.\n        \"\"\"\n        scraped_data = await self.scrape_url()\n\n        if scraped_data is None:\n            return None\n\n        return self.clean_scraper(scraped_data, self.url)\n\n\nclass RecipeScraperOpenGraph(ABCScraperStrategy):\n    async def get_html(self, url: str) -> str:\n        return await safe_scrape_html(url)\n\n    def get_recipe_fields(self, html) -> dict | None:\n        \"\"\"\n        Get the recipe fields from the Open Graph data.\n        \"\"\"\n\n        def og_field(properties: dict, field_name: str) -> str:\n            return next((val for name, val in properties if name == field_name), \"\")\n\n        def og_fields(properties: list[tuple[str, str]], field_name: str) -> list[str]:\n            return list({val for name, val in properties if name == field_name})\n\n        base_url = get_base_url(html, self.url)\n        data = extruct.extract(html, base_url=base_url, errors=\"log\")\n        try:\n            properties = data[\"opengraph\"][0][\"properties\"]\n        except Exception:\n            return None\n\n        return {\n            \"name\": og_field(properties, \"og:title\"),\n            \"description\": og_field(properties, \"og:description\"),\n            \"image\": og_field(properties, \"og:image\"),\n            \"recipeYield\": \"\",\n            \"recipeIngredient\": [\"Could not detect ingredients\"],\n            \"recipeInstructions\": [{\"text\": \"Could not detect instructions\"}],\n            \"slug\": slugify(og_field(properties, \"og:title\")),\n            \"orgURL\": self.url,\n            \"categories\": [],\n            \"tags\": og_fields(properties, \"og:article:tag\"),\n            \"dateAdded\": None,\n            \"notes\": [],\n            \"extras\": [],\n        }\n\n    async def parse(self):\n        \"\"\"\n        Parse a recipe from a given url.\n        \"\"\"\n        html = await self.get_html(self.url)\n\n        og_data = self.get_recipe_fields(html)\n\n        if og_data is None:\n            return None\n\n        return Recipe(**og_data), ScrapedExtras()\n</Code>"
                }
            ],
            "url": "https://github.com/mealie-recipes/mealie/commit/2a3463b7466bc297aede50046da9550d919ec56f",
            "description": "Mealie is a self hosted recipe manager and meal planner. Prior to 1.4.0, the safe_scrape_html function utilizes a user-controlled URL to issue a request to a remote server. Based on the content of the response, it will either parse the content or disregard it. This function, nor those that call it, add any restrictions on the URL that can be provided, nor is it restricted to being an FQDN (i.e., an IP address can be provided). As this function\u2019s return will be handled differently by its caller depending on the response, it is possible for an attacker to use this functionality to positively identify HTTP(s) servers on the local network with any IP/port combination. This issue can result in any authenticated user being able to map HTTP servers on a local network that the Mealie service has access to. Note that by default any user can create an account on a Mealie server, and that the default changeme@example.com user is available with its hard-coded password. This vulnerability is fixed in 1.4.0.",
            "date": "2024-04-19",
            "github_description": "What type of PR is this?\n(REQUIRED)\n\nsecurity\nbug\n\nWhat this PR does / why we need it:\nAddresses several security concerns raised by external audit/review\n\nAll user HTTP requests now use a custom Transport class that applies a timeout and blocks known internal address spaces\nNote that you can't simple whitelist specific IP's, you must resolve the domain name first and then check the address space of the resolved IP. This prevents attackers from creating a DNS entry that resolves to a local address space and using that url to attack a Mealie instance.\n\nAlso, note that these are mitigations, they are not 100% fixes.\nWhich issue(s) this PR fixes:\n\nCloses fix: Add 127.0.1.1 to exclude list\u00a0#3364\n\nSpecial notes for your reviewer:\nI've tested locally and all the automated testing should pass. If possible, I would like another reviewer to pull down these changes and attempt to\n\nScrape a few recipes from different domains\nUse the Scrape Image functionality to pull external images into Mealie from a few different domains.\n\nTesting\nSee Above",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\n    \"CWE-285\"\n  ],\n  \"severity\": null\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-285"
                ],
                "severity": null
            },
            "ground_truth_CVE": "CVE-2024-31991",
            "ground_truth_CWEs": [
                "CWE-918"
            ],
            "ground_truth_severities": {},
            "ground_truth_CVSS_version": [],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS  . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\n\"CVSS v3.0 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: In mintplex-labs/anything-llm, an attacker can exploit improper input validation by sending a malformed JSON payload to the '/system/enable-multi-user' endpoint. This triggers an error that is caught by a catch block, which in turn deletes all users and disables the 'multi_user_mode'. The vulnerability allows an attacker to remove all existing users and potentially create a new admin user without requiring a password, leading to unauthorized access and control over the application.\nFile: server/endpoints/system.js\nContent: \n<Code>\nprocess.env.NODE_ENV === \"development\"\n  ? require(\"dotenv\").config({ path: `.env.${process.env.NODE_ENV}` })\n  : require(\"dotenv\").config();\nconst { viewLocalFiles, normalizePath } = require(\"../utils/files\");\nconst { purgeDocument, purgeFolder } = require(\"../utils/files/purgeDocument\");\nconst { getVectorDbClass } = require(\"../utils/helpers\");\nconst { updateENV, dumpENV } = require(\"../utils/helpers/updateENV\");\nconst {\n  reqBody,\n  makeJWT,\n  userFromSession,\n  multiUserMode,\n  queryParams,\n} = require(\"../utils/http\");\nconst { setupLogoUploads, setupPfpUploads } = require(\"../utils/files/multer\");\nconst { v4 } = require(\"uuid\");\nconst { SystemSettings } = require(\"../models/systemSettings\");\nconst { User } = require(\"../models/user\");\nconst { validatedRequest } = require(\"../utils/middleware/validatedRequest\");\nconst { handleLogoUploads } = setupLogoUploads();\nconst { handlePfpUploads } = setupPfpUploads();\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst {\n  getDefaultFilename,\n  determineLogoFilepath,\n  fetchLogo,\n  validFilename,\n  renameLogoFile,\n  removeCustomLogo,\n  LOGO_FILENAME,\n} = require(\"../utils/files/logo\");\nconst { Telemetry } = require(\"../models/telemetry\");\nconst { WelcomeMessages } = require(\"../models/welcomeMessages\");\nconst { ApiKey } = require(\"../models/apiKeys\");\nconst { getCustomModels } = require(\"../utils/helpers/customModels\");\nconst { WorkspaceChats } = require(\"../models/workspaceChats\");\nconst {\n  flexUserRoleValid,\n  ROLES,\n} = require(\"../utils/middleware/multiUserProtected\");\nconst { fetchPfp, determinePfpFilepath } = require(\"../utils/files/pfp\");\nconst {\n  prepareWorkspaceChatsForExport,\n  exportChatsAsType,\n} = require(\"../utils/helpers/chat/convertTo\");\nconst { EventLogs } = require(\"../models/eventLogs\");\nconst { CollectorApi } = require(\"../utils/collectorApi\");\n\nfunction systemEndpoints(app) {\n  if (!app) return;\n\n  app.get(\"/ping\", (_, response) => {\n    response.status(200).json({ online: true });\n  });\n\n  app.get(\"/migrate\", async (_, response) => {\n    response.sendStatus(200);\n  });\n\n  app.get(\"/env-dump\", async (_, response) => {\n    if (process.env.NODE_ENV !== \"production\")\n      return response.sendStatus(200).end();\n    await dumpENV();\n    response.sendStatus(200).end();\n  });\n\n  app.get(\"/setup-complete\", async (_, response) => {\n    try {\n      const results = await SystemSettings.currentSettings();\n      response.status(200).json({ results });\n    } catch (e) {\n      console.log(e.message, e);\n      response.sendStatus(500).end();\n    }\n  });\n\n  app.get(\n    \"/system/check-token\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        if (multiUserMode(response)) {\n          const user = await userFromSession(request, response);\n          if (!user || user.suspended) {\n            response.sendStatus(403).end();\n            return;\n          }\n\n          response.sendStatus(200).end();\n          return;\n        }\n\n        response.sendStatus(200).end();\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.post(\"/request-token\", async (request, response) => {\n    try {\n      const bcrypt = require(\"bcrypt\");\n\n      if (await SystemSettings.isMultiUserMode()) {\n        const { username, password } = reqBody(request);\n        const existingUser = await User.get({ username });\n\n        if (!existingUser) {\n          await EventLogs.logEvent(\n            \"failed_login_invalid_username\",\n            {\n              ip: request.ip || \"Unknown IP\",\n              username: username || \"Unknown user\",\n            },\n            existingUser?.id\n          );\n          response.status(200).json({\n            user: null,\n            valid: false,\n            token: null,\n            message: \"[001] Invalid login credentials.\",\n          });\n          return;\n        }\n\n        if (!bcrypt.compareSync(password, existingUser.password)) {\n          await EventLogs.logEvent(\n            \"failed_login_invalid_password\",\n            {\n              ip: request.ip || \"Unknown IP\",\n              username: username || \"Unknown user\",\n            },\n            existingUser?.id\n          );\n          response.status(200).json({\n            user: null,\n            valid: false,\n            token: null,\n            message: \"[002] Invalid login credentials.\",\n          });\n          return;\n        }\n\n        if (existingUser.suspended) {\n          await EventLogs.logEvent(\n            \"failed_login_account_suspended\",\n            {\n              ip: request.ip || \"Unknown IP\",\n              username: username || \"Unknown user\",\n            },\n            existingUser?.id\n          );\n          response.status(200).json({\n            user: null,\n            valid: false,\n            token: null,\n            message: \"[004] Account suspended by admin.\",\n          });\n          return;\n        }\n\n        await Telemetry.sendTelemetry(\n          \"login_event\",\n          { multiUserMode: false },\n          existingUser?.id\n        );\n\n        await EventLogs.logEvent(\n          \"login_event\",\n          {\n            ip: request.ip || \"Unknown IP\",\n            username: existingUser.username || \"Unknown user\",\n          },\n          existingUser?.id\n        );\n\n        response.status(200).json({\n          valid: true,\n          user: existingUser,\n          token: makeJWT(\n            { id: existingUser.id, username: existingUser.username },\n            \"30d\"\n          ),\n          message: null,\n        });\n        return;\n      } else {\n        const { password } = reqBody(request);\n        if (\n          !bcrypt.compareSync(\n            password,\n            bcrypt.hashSync(process.env.AUTH_TOKEN, 10)\n          )\n        ) {\n          await EventLogs.logEvent(\"failed_login_invalid_password\", {\n            ip: request.ip || \"Unknown IP\",\n            multiUserMode: false,\n          });\n          response.status(401).json({\n            valid: false,\n            token: null,\n            message: \"[003] Invalid password provided\",\n          });\n          return;\n        }\n\n        await Telemetry.sendTelemetry(\"login_event\", { multiUserMode: false });\n        await EventLogs.logEvent(\"login_event\", {\n          ip: request.ip || \"Unknown IP\",\n          multiUserMode: false,\n        });\n        response.status(200).json({\n          valid: true,\n          token: makeJWT({ p: password }, \"30d\"),\n          message: null,\n        });\n      }\n    } catch (e) {\n      console.log(e.message, e);\n      response.sendStatus(500).end();\n    }\n  });\n\n  app.get(\n    \"/system/system-vectors\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin, ROLES.manager])],\n    async (request, response) => {\n      try {\n        const query = queryParams(request);\n        const VectorDb = getVectorDbClass();\n        const vectorCount = !!query.slug\n          ? await VectorDb.namespaceCount(query.slug)\n          : await VectorDb.totalVectors();\n        response.status(200).json({ vectorCount });\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.delete(\n    \"/system/remove-document\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin, ROLES.manager])],\n    async (request, response) => {\n      try {\n        const { name } = reqBody(request);\n        await purgeDocument(name);\n        response.sendStatus(200).end();\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.delete(\n    \"/system/remove-documents\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin, ROLES.manager])],\n    async (request, response) => {\n      try {\n        const { names } = reqBody(request);\n        for await (const name of names) await purgeDocument(name);\n        response.sendStatus(200).end();\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.delete(\n    \"/system/remove-folder\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin, ROLES.manager])],\n    async (request, response) => {\n      try {\n        const { name } = reqBody(request);\n        await purgeFolder(name);\n        response.sendStatus(200).end();\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.get(\n    \"/system/local-files\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin, ROLES.manager])],\n    async (_, response) => {\n      try {\n        const localFiles = await viewLocalFiles();\n        response.status(200).json({ localFiles });\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.get(\n    \"/system/document-processing-status\",\n    [validatedRequest],\n    async (_, response) => {\n      try {\n        const online = await new CollectorApi().online();\n        response.sendStatus(online ? 200 : 503);\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.get(\n    \"/system/accepted-document-types\",\n    [validatedRequest],\n    async (_, response) => {\n      try {\n        const types = await new CollectorApi().acceptedFileTypes();\n        if (!types) {\n          response.sendStatus(404).end();\n          return;\n        }\n\n        response.status(200).json({ types });\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.post(\n    \"/system/update-env\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin])],\n    async (request, response) => {\n      try {\n        const body = reqBody(request);\n        const { newValues, error } = await updateENV(\n          body,\n          false,\n          response?.locals?.user?.id\n        );\n        if (process.env.NODE_ENV === \"production\") await dumpENV();\n        response.status(200).json({ newValues, error });\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.post(\n    \"/system/update-password\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        // Cannot update password in multi - user mode.\n        if (multiUserMode(response)) {\n          response.sendStatus(401).end();\n          return;\n        }\n\n        const { usePassword, newPassword } = reqBody(request);\n        const { error } = await updateENV(\n          {\n            AuthToken: usePassword ? newPassword : \"\",\n            JWTSecret: usePassword ? v4() : \"\",\n          },\n          true\n        );\n        if (process.env.NODE_ENV === \"production\") await dumpENV();\n        response.status(200).json({ success: !error, error });\n      } catch (e) {\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.post(\n    \"/system/enable-multi-user\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        const { username, password } = reqBody(request);\n        const multiUserModeEnabled = await SystemSettings.isMultiUserMode();\n        if (multiUserModeEnabled) {\n          response.status(200).json({\n            success: false,\n            error: \"Multi-user mode is already enabled.\",\n          });\n          return;\n        }\n\n        const { user, error } = await User.create({\n          username,\n          password,\n          role: ROLES.admin,\n        });\n        await SystemSettings.updateSettings({\n          multi_user_mode: true,\n          users_can_delete_workspaces: false,\n          limit_user_messages: false,\n          message_limit: 25,\n        });\n\n        await updateENV(\n          {\n            AuthToken: \"\",\n            JWTSecret: process.env.JWT_SECRET || v4(),\n          },\n          true\n        );\n        if (process.env.NODE_ENV === \"production\") await dumpENV();\n        await Telemetry.sendTelemetry(\"enabled_multi_user_mode\", {\n          multiUserMode: true,\n        });\n        await EventLogs.logEvent(\"multi_user_mode_enabled\", {}, user?.id);\n        response.status(200).json({ success: !!user, error });\n      } catch (e) {\n        await User.delete({});\n        await SystemSettings.updateSettings({\n          multi_user_mode: false,\n        });\n\n        console.log(e.message, e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.get(\"/system/multi-user-mode\", async (_, response) => {\n    try {\n      const multiUserMode = await SystemSettings.isMultiUserMode();\n      response.status(200).json({ multiUserMode });\n    } catch (e) {\n      console.log(e.message, e);\n      response.sendStatus(500).end();\n    }\n  });\n\n  app.get(\"/system/logo\", async function (_, response) {\n    try {\n      const defaultFilename = getDefaultFilename();\n      const logoPath = await determineLogoFilepath(defaultFilename);\n      const { found, buffer, size, mime } = fetchLogo(logoPath);\n      if (!found) {\n        response.sendStatus(204).end();\n        return;\n      }\n\n      response.writeHead(200, {\n        \"Content-Type\": mime || \"image/png\",\n        \"Content-Disposition\": `attachment; filename=${path.basename(\n          logoPath\n        )}`,\n        \"Content-Length\": size,\n      });\n      response.end(Buffer.from(buffer, \"base64\"));\n      return;\n    } catch (error) {\n      console.error(\"Error processing the logo request:\", error);\n      response.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.get(\"/system/footer-data\", [validatedRequest], async (_, response) => {\n    try {\n      const footerData =\n        (await SystemSettings.get({ label: \"footer_data\" }))?.value ??\n        JSON.stringify([]);\n      response.status(200).json({ footerData: footerData });\n    } catch (error) {\n      console.error(\"Error fetching footer data:\", error);\n      response.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.get(\"/system/support-email\", [validatedRequest], async (_, response) => {\n    try {\n      const supportEmail =\n        (\n          await SystemSettings.get({\n            label: \"support_email\",\n          })\n        )?.value ?? null;\n      response.status(200).json({ supportEmail: supportEmail });\n    } catch (error) {\n      console.error(\"Error fetching support email:\", error);\n      response.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.get(\n    \"/system/pfp/:id\",\n    [validatedRequest, flexUserRoleValid([ROLES.all])],\n    async function (request, response) {\n      try {\n        const { id } = request.params;\n        const pfpPath = await determinePfpFilepath(id);\n\n        if (!pfpPath) {\n          response.sendStatus(204).end();\n          return;\n        }\n\n        const { found, buffer, size, mime } = fetchPfp(pfpPath);\n        if (!found) {\n          response.sendStatus(204).end();\n          return;\n        }\n\n        response.writeHead(200, {\n          \"Content-Type\": mime || \"image/png\",\n          \"Content-Disposition\": `attachment; filename=${path.basename(\n            pfpPath\n          )}`,\n          \"Content-Length\": size,\n        });\n        response.end(Buffer.from(buffer, \"base64\"));\n        return;\n      } catch (error) {\n        console.error(\"Error processing the logo request:\", error);\n        response.status(500).json({ message: \"Internal server error\" });\n      }\n    }\n  );\n\n  app.post(\n    \"/system/upload-pfp\",\n    [validatedRequest, flexUserRoleValid([ROLES.all])],\n    handlePfpUploads.single(\"file\"),\n    async function (request, response) {\n      try {\n        const user = await userFromSession(request, response);\n        const uploadedFileName = request.randomFileName;\n        if (!uploadedFileName) {\n          return response.status(400).json({ message: \"File upload failed.\" });\n        }\n\n        const userRecord = await User.get({ id: user.id });\n        const oldPfpFilename = userRecord.pfpFilename;\n        if (oldPfpFilename) {\n          const oldPfpPath = path.join(\n            __dirname,\n            `../storage/assets/pfp/${normalizePath(userRecord.pfpFilename)}`\n          );\n\n          if (fs.existsSync(oldPfpPath)) fs.unlinkSync(oldPfpPath);\n        }\n\n        const { success, error } = await User.update(user.id, {\n          pfpFilename: uploadedFileName,\n        });\n\n        return response.status(success ? 200 : 500).json({\n          message: success\n            ? \"Profile picture uploaded successfully.\"\n            : error || \"Failed to update with new profile picture.\",\n        });\n      } catch (error) {\n        console.error(\"Error processing the profile picture upload:\", error);\n        response.status(500).json({ message: \"Internal server error\" });\n      }\n    }\n  );\n\n  app.delete(\n    \"/system/remove-pfp\",\n    [validatedRequest, flexUserRoleValid([ROLES.all])],\n    async function (request, response) {\n      try {\n        const user = await userFromSession(request, response);\n        const userRecord = await User.get({ id: user.id });\n        const oldPfpFilename = userRecord.pfpFilename;\n\n        console.log(\"oldPfpFilename\", oldPfpFilename);\n        if (oldPfpFilename) {\n          const oldPfpPath = path.join(\n            __dirname,\n            `../storage/assets/pfp/${normalizePath(oldPfpFilename)}`\n          );\n\n          if (fs.existsSync(oldPfpPath)) fs.unlinkSync(oldPfpPath);\n        }\n\n        const { success, error } = await User.update(user.id, {\n          pfpFilename: null,\n        });\n\n        return response.status(success ? 200 : 500).json({\n          message: success\n            ? \"Profile picture removed successfully.\"\n            : error || \"Failed to remove profile picture.\",\n        });\n      } catch (error) {\n        console.error(\"Error processing the profile picture removal:\", error);\n        response.status(500).json({ message: \"Internal server error\" });\n      }\n    }\n  );\n\n  app.post(\n    \"/system/upload-logo\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin, ROLES.manager])],\n    handleLogoUploads.single(\"logo\"),\n    async (request, response) => {\n      if (!request.file || !request.file.originalname) {\n        return response.status(400).json({ message: \"No logo file provided.\" });\n      }\n\n      if (!validFilename(request.file.originalname)) {\n        return response.status(400).json({\n          message: \"Invalid file name. Please choose a different file.\",\n        });\n      }\n\n      try {\n        const newFilename = await renameLogoFile(request.file.originalname);\n        const existingLogoFilename = await SystemSettings.currentLogoFilename();\n        await removeCustomLogo(existingLogoFilename);\n\n        const { success, error } = await SystemSettings.updateSettings({\n          logo_filename: newFilename,\n        });\n\n        return response.status(success ? 200 : 500).json({\n          message: success\n            ? \"Logo uploaded successfully.\"\n            : error || \"Failed to update with new logo.\",\n        });\n      } catch (error) {\n        console.error(\"Error processing the logo upload:\", error);\n        response.status(500).json({ message: \"Error uploading the logo.\" });\n      }\n    }\n  );\n\n  app.get(\"/system/is-default-logo\", async (_, response) => {\n    try {\n      const currentLogoFilename = await SystemSettings.currentLogoFilename();\n      const isDefaultLogo = currentLogoFilename === LOGO_FILENAME;\n      response.status(200).json({ isDefaultLogo });\n    } catch (error) {\n      console.error(\"Error processing the logo request:\", error);\n      response.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.get(\n    \"/system/remove-logo\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin, ROLES.manager])],\n    async (_request, response) => {\n      try {\n        const currentLogoFilename = await SystemSettings.currentLogoFilename();\n        await removeCustomLogo(currentLogoFilename);\n        const { success, error } = await SystemSettings.updateSettings({\n          logo_filename: LOGO_FILENAME,\n        });\n\n        return response.status(success ? 200 : 500).json({\n          message: success\n            ? \"Logo removed successfully.\"\n            : error || \"Failed to update with new logo.\",\n        });\n      } catch (error) {\n        console.error(\"Error processing the logo removal:\", error);\n        response.status(500).json({ message: \"Error removing the logo.\" });\n      }\n    }\n  );\n\n  app.get(\n    \"/system/can-delete-workspaces\",\n    [validatedRequest],\n    async function (request, response) {\n      try {\n        if (!response.locals.multiUserMode) {\n          return response.status(200).json({ canDelete: true });\n        }\n\n        const user = await userFromSession(request, response);\n        if ([ROLES.admin, ROLES.manager].includes(user?.role)) {\n          return response.status(200).json({ canDelete: true });\n        }\n\n        const canDelete = await SystemSettings.canDeleteWorkspaces();\n        response.status(200).json({ canDelete });\n      } catch (error) {\n        console.error(\"Error fetching can delete workspaces:\", error);\n        response.status(500).json({\n          success: false,\n          message: \"Internal server error\",\n          canDelete: false,\n        });\n      }\n    }\n  );\n\n  app.get(\n    \"/system/welcome-messages\",\n    [validatedRequest, flexUserRoleValid([ROLES.all])],\n    async function (_, response) {\n      try {\n        const welcomeMessages = await WelcomeMessages.getMessages();\n        response.status(200).json({ success: true, welcomeMessages });\n      } catch (error) {\n        console.error(\"Error fetching welcome messages:\", error);\n        response\n          .status(500)\n          .json({ success: false, message: \"Internal server error\" });\n      }\n    }\n  );\n\n  app.post(\n    \"/system/set-welcome-messages\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin, ROLES.manager])],\n    async (request, response) => {\n      try {\n        const { messages = [] } = reqBody(request);\n        if (!Array.isArray(messages)) {\n          return response.status(400).json({\n            success: false,\n            message: \"Invalid message format. Expected an array of messages.\",\n          });\n        }\n\n        await WelcomeMessages.saveAll(messages);\n        return response.status(200).json({\n          success: true,\n          message: \"Welcome messages saved successfully.\",\n        });\n      } catch (error) {\n        console.error(\"Error processing the welcome messages:\", error);\n        response.status(500).json({\n          success: true,\n          message: \"Error saving the welcome messages.\",\n        });\n      }\n    }\n  );\n\n  app.get(\"/system/api-keys\", [validatedRequest], async (_, response) => {\n    try {\n      if (response.locals.multiUserMode) {\n        return response.sendStatus(401).end();\n      }\n\n      const apiKeys = await ApiKey.where({});\n      return response.status(200).json({\n        apiKeys,\n        error: null,\n      });\n    } catch (error) {\n      console.error(error);\n      response.status(500).json({\n        apiKey: null,\n        error: \"Could not find an API Key.\",\n      });\n    }\n  });\n\n  app.post(\n    \"/system/generate-api-key\",\n    [validatedRequest],\n    async (_, response) => {\n      try {\n        if (response.locals.multiUserMode) {\n          return response.sendStatus(401).end();\n        }\n\n        const { apiKey, error } = await ApiKey.create();\n        await Telemetry.sendTelemetry(\"api_key_created\");\n        await EventLogs.logEvent(\n          \"api_key_created\",\n          {},\n          response?.locals?.user?.id\n        );\n        return response.status(200).json({\n          apiKey,\n          error,\n        });\n      } catch (error) {\n        console.error(error);\n        response.status(500).json({\n          apiKey: null,\n          error: \"Error generating api key.\",\n        });\n      }\n    }\n  );\n\n  app.delete(\"/system/api-key\", [validatedRequest], async (_, response) => {\n    try {\n      if (response.locals.multiUserMode) {\n        return response.sendStatus(401).end();\n      }\n\n      await ApiKey.delete();\n      await EventLogs.logEvent(\n        \"api_key_deleted\",\n        { deletedBy: response.locals?.user?.username },\n        response?.locals?.user?.id\n      );\n      return response.status(200).end();\n    } catch (error) {\n      console.error(error);\n      response.status(500).end();\n    }\n  });\n\n  app.post(\n    \"/system/custom-models\",\n    [validatedRequest],\n    async (request, response) => {\n      try {\n        const { provider, apiKey = null, basePath = null } = reqBody(request);\n        const { models, error } = await getCustomModels(\n          provider,\n          apiKey,\n          basePath\n        );\n        return response.status(200).json({\n          models,\n          error,\n        });\n      } catch (error) {\n        console.error(error);\n        response.status(500).end();\n      }\n    }\n  );\n\n  app.post(\n    \"/system/event-logs\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin])],\n    async (request, response) => {\n      try {\n        const { offset = 0, limit = 20 } = reqBody(request);\n        const logs = await EventLogs.whereWithData({}, limit, offset * limit, {\n          id: \"desc\",\n        });\n        const totalLogs = await EventLogs.count();\n        const hasPages = totalLogs > (offset + 1) * limit;\n\n        response.status(200).json({ logs: logs, hasPages, totalLogs });\n      } catch (e) {\n        console.error(e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.delete(\n    \"/system/event-logs\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin])],\n    async (_, response) => {\n      try {\n        await EventLogs.delete();\n        await EventLogs.logEvent(\n          \"event_logs_cleared\",\n          {},\n          response?.locals?.user?.id\n        );\n        response.json({ success: true });\n      } catch (e) {\n        console.error(e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.post(\n    \"/system/workspace-chats\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin, ROLES.manager])],\n    async (request, response) => {\n      try {\n        const { offset = 0, limit = 20 } = reqBody(request);\n        const chats = await WorkspaceChats.whereWithData(\n          {},\n          limit,\n          offset * limit,\n          { id: \"desc\" }\n        );\n        const totalChats = await WorkspaceChats.count();\n        const hasPages = totalChats > (offset + 1) * limit;\n\n        response.status(200).json({ chats: chats, hasPages, totalChats });\n      } catch (e) {\n        console.error(e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.delete(\n    \"/system/workspace-chats/:id\",\n    [validatedRequest, flexUserRoleValid([ROLES.admin, ROLES.manager])],\n    async (request, response) => {\n      try {\n        const { id } = request.params;\n        await WorkspaceChats.delete({ id: Number(id) });\n        response.json({ success: true, error: null });\n      } catch (e) {\n        console.error(e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  app.get(\n    \"/system/export-chats\",\n    [validatedRequest, flexUserRoleValid([ROLES.manager, ROLES.admin])],\n    async (request, response) => {\n      try {\n        const { type = \"jsonl\" } = request.query;\n        const chats = await prepareWorkspaceChatsForExport(type);\n        const { contentType, data } = await exportChatsAsType(chats, type);\n        await EventLogs.logEvent(\n          \"exported_chats\",\n          {\n            type,\n          },\n          response.locals.user?.id\n        );\n        response.setHeader(\"Content-Type\", contentType);\n        response.status(200).send(data);\n      } catch (e) {\n        console.error(e);\n        response.sendStatus(500).end();\n      }\n    }\n  );\n\n  // Used for when a user in multi-user updates their own profile\n  // from the UI.\n  app.post(\"/system/user\", [validatedRequest], async (request, response) => {\n    try {\n      const sessionUser = await userFromSession(request, response);\n      const { username, password } = reqBody(request);\n      const id = Number(sessionUser.id);\n\n      if (!id) {\n        response.status(400).json({ success: false, error: \"Invalid user ID\" });\n        return;\n      }\n\n      const updates = {};\n      if (username) {\n        updates.username = username;\n      }\n      if (password) {\n        updates.password = password;\n      }\n\n      if (Object.keys(updates).length === 0) {\n        response\n          .status(400)\n          .json({ success: false, error: \"No updates provided\" });\n        return;\n      }\n\n      const { success, error } = await User.update(id, updates);\n      response.status(200).json({ success, error });\n    } catch (e) {\n      console.error(e);\n      response.sendStatus(500).end();\n    }\n  });\n}\n\nmodule.exports = { systemEndpoints };\n</Code>"
                }
            ],
            "url": "https://github.com/mintplex-labs/anything-llm/commit/99cfee1e7025fe9a0919a4d506ba1e1b819f6073",
            "description": "In mintplex-labs/anything-llm, an attacker can exploit improper input validation by sending a malformed JSON payload to the '/system/enable-multi-user' endpoint. This triggers an error that is caught by a catch block, which in turn deletes all users and disables the 'multi_user_mode'. The vulnerability allows an attacker to remove all existing users and potentially create a new admin user without requiring a password, leading to unauthorized access and control over the application.",
            "date": "2024-04-16",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-20\", \"CWE-79\", \"CWE-502\"],\n  \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-79",
                    "CWE-20",
                    "CWE-502"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2024-3029",
            "ground_truth_CWEs": [
                "CWE-20"
            ],
            "ground_truth_severities": {},
            "ground_truth_CVSS_version": [],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "GT_SUBSET_OF_PR"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: \u2753 Type of change\n\n \ud83d\udcd6 Documentation (updates to the documentation or readme)\n \ud83d\udc1e Bug fix (a non-breaking change that fixes an issue)\n \ud83d\udc4c Enhancement (improving an existing functionality like performance)\n \u2728 New feature (a non-breaking change that adds functionality)\n \ud83e\uddf9 Chore (updates to the build process or auxiliary tools and libraries)\n \u26a0\ufe0f Breaking change (fix or feature that would cause existing functionality to change)\n\n\ud83d\udcda Description\nThis only seems to be used in a server route, but we are leaking it in rendered HTML.\n\n\n\ngithub-module/src/runtime/server/utils/queries.ts\n\n\n        Lines 61 to 65\n      in\n      507be69\n\n\n\n\n\n\n const gq = graphql.defaults({ \n\n\n\n headers: { \n\n\n\n authorization: `token ${options.token}` \n\n\n\n } \n\n\n\n }) \n\n\n\n\n\n\ud83d\udcdd Checklist\n\n I have linked an issue or discussion.\n I have updated the documentation accordingly.\nFile: src/module.ts\nContent: \n<Code>\nimport { defu } from 'defu'\nimport { addImports, addComponent, createResolver, defineNuxtModule, resolveModule } from '@nuxt/kit'\nimport type { GithubRepositoryOptions } from './runtime/types'\n\nexport interface ModuleOptions extends GithubRepositoryOptions {\n  disableCache?: boolean\n  remarkPlugin?: boolean\n  releases?: boolean\n  contributors?: boolean\n  maxContributors?: number\n  /**\n   * Parse contents (releases content, readme) Markdown and return AST tree.\n   *\n   * Note: This option is only available when you have `@nuxt/content` installed in your project.\n   *\n   * @default true\n   */\n  parseContents?: boolean\n}\n\ndeclare module '@nuxt/schema' {\n  interface PublicRuntimeConfig {\n    // @ts-ignore\n    github?: ModuleOptions;\n  }\n\n  interface RuntimeConfig {\n    // @ts-ignore\n    github?: ModuleOptions;\n  }\n}\n\nexport default defineNuxtModule<ModuleOptions>({\n  meta: {\n    name: '@nuxtlabs/github-module',\n    configKey: 'github'\n  },\n  defaults: {\n    owner: '',\n    repo: '',\n    token: undefined,\n    branch: 'main',\n    api: 'https://api.github.com',\n    remarkPlugin: true,\n    disableCache: false,\n    releases: true,\n    contributors: true,\n    maxContributors: 100,\n    parseContents: true\n  },\n  setup (options, nuxt) {\n    const { resolve } = createResolver(import.meta.url)\n    const runtimeDir = resolve('./runtime')\n\n    if (!options.owner) {\n      // Check if we can split repo name into owner/repo\n      if (options.repo && options.repo.includes('/')) {\n        const [owner, repo] = options.repo.split('/')\n        options.owner = owner\n        options.repo = repo\n      }\n    }\n\n    // @ts-ignore\n    if (!nuxt.options.runtimeConfig.public) { nuxt.options.runtimeConfig.public = {} }\n\n    const config = {\n      api: options.api || process.env.GITHUB_OWNER,\n      owner: options.owner || process.env.GITHUB_OWNER,\n      branch: options.branch || process.env.GITHUB_BRANCH,\n      repo: options.repo || process.env.GITHUB_REPO,\n      token: options.token || process.env.GITHUB_TOKEN,\n      disableCache: options.disableCache,\n      parseContents: options.parseContents,\n      maxContributors: options.maxContributors\n    }\n\n    // Public runtime config\n    // @ts-ignore\n    nuxt.options.runtimeConfig.public.github = defu(nuxt.options.runtimeConfig.public.github, config)\n    // @ts-ignore\n    nuxt.options.runtimeConfig.github = defu(nuxt.options.runtimeConfig.github, config)\n\n    // Autolink issue/PR/commit links using `remark-github` plugin\n    if (options.remarkPlugin) {\n      // @ts-ignore\n      nuxt.hook('content:context', (context) => {\n        context.markdown.remarkPlugins ??= {}\n\n        if (!Array.isArray(context.markdown.remarkPlugins)) {\n          context.markdown.remarkPlugins['remark-github'] = { repository: `${options.owner}/${options.repo}` }\n        }\n      })\n    }\n\n    const nitroConfig = nuxt.options.nitro\n\n    // Init Nitro handlers\n    nitroConfig.handlers = nitroConfig.handlers || []\n    nitroConfig.prerender = nitroConfig.prerender || {}\n    nitroConfig.prerender.routes = nitroConfig.prerender.routes || []\n\n    // Setup repository API\n    nitroConfig.handlers.push({\n      route: '/api/_github/repository',\n      handler: resolveModule('./server/api/repository', { paths: runtimeDir })\n    }, {\n      route: '/api/_github/repository/:query',\n      handler: resolveModule('./server/api/repository', { paths: runtimeDir })\n    })\n\n    // Setup readme file API\n    nitroConfig.handlers.push({\n      route: '/api/_github/readme',\n      handler: resolveModule('./server/api/readme', { paths: runtimeDir })\n    }, {\n      route: '/api/_github/readme/:query',\n      handler: resolveModule('./server/api/readme', { paths: runtimeDir })\n    })\n\n    // Repository component\n    addComponent({\n      name: 'GithubRepository',\n      filePath: resolveModule('./components/GithubRepository', { paths: runtimeDir }),\n      global: true\n    })\n\n    // GithubLink component\n    addComponent({\n      name: 'GithubLink',\n      filePath: resolveModule('./components/GithubLink', { paths: runtimeDir }),\n      global: true\n    })\n\n    // GithubReadme component\n    addComponent({\n      name: 'GithubReadme',\n      filePath: resolveModule('./components/GithubReadme', { paths: runtimeDir }),\n      global: true\n    })\n\n    // Setup releases API\n    if (options.releases) {\n      // Releases list\n      nitroConfig.handlers.push({\n        route: '/api/_github/releases',\n        handler: resolveModule('./server/api/releases/index', { paths: runtimeDir })\n      }, {\n        route: '/api/_github/releases/:query',\n        handler: resolveModule('./server/api/releases/index', { paths: runtimeDir })\n      })\n      nitroConfig.prerender.routes.push('/api/_github/releases')\n\n      // Releases components\n      addComponent({\n        name: 'GithubReleases',\n        filePath: resolveModule('./components/GithubReleases', { paths: runtimeDir }),\n        global: true\n      })\n      addComponent({\n        name: 'GithubLastRelease',\n        filePath: resolveModule('./components/GithubLastRelease', { paths: runtimeDir }),\n        global: true\n      })\n      addComponent({\n        name: 'GithubRelease',\n        filePath: resolveModule('./components/GithubRelease', { paths: runtimeDir }),\n        global: true\n      })\n    }\n\n    // Setup contributors API\n    if (options.contributors) {\n      nitroConfig.handlers.push({\n        route: '/api/_github/contributors',\n        handler: resolveModule('./server/api/contributors', { paths: runtimeDir })\n      }, {\n        route: '/api/_github/contributors/:query',\n        handler: resolveModule('./server/api/contributors', { paths: runtimeDir })\n      })\n      nitroConfig.prerender.routes.push('/api/_github/contributors')\n\n      // TODO: Add prerender for file arguments (using :source argument)\n      nitroConfig.handlers.push({\n        route: '/api/_github/contributors/file',\n        handler: resolveModule('./server/api/contributors/file', { paths: runtimeDir })\n      }, {\n        route: '/api/_github/contributors/file/:query',\n        handler: resolveModule('./server/api/contributors/file', { paths: runtimeDir })\n      })\n\n      // Contributors components\n      addComponent({\n        name: 'GithubContributors',\n        filePath: resolveModule('./components/GithubContributors', { paths: runtimeDir }),\n        global: true\n      })\n      addComponent({\n        name: 'GithubFileContributors',\n        filePath: resolveModule('./components/GithubFileContributors', { paths: runtimeDir }),\n        global: true\n      })\n    }\n\n    // Setup commits API\n    nitroConfig.handlers.push({\n      route: '/api/_github/commits',\n      handler: resolveModule('./server/api/commits', { paths: runtimeDir })\n    }, {\n      route: '/api/_github/commits/:query',\n      handler: resolveModule('./server/api/commits', { paths: runtimeDir })\n    })\n\n    // GithubCommits component\n    addComponent({\n      name: 'GithubCommits',\n      filePath: resolveModule('./components/GithubCommits', { paths: runtimeDir }),\n      global: true\n    })\n\n    addImports({\n      name: 'useGithub',\n      from: resolveModule('./composables/useGithub', { paths: runtimeDir })\n    })\n\n    nitroConfig.externals = defu(typeof nitroConfig.externals === 'object' ? nitroConfig.externals : {}, {\n      inline: [\n        // Inline module runtime in Nitro bundle\n        resolve('./runtime')\n      ]\n    })\n  }\n})\n</Code>"
                }
            ],
            "url": "https://github.com/nuxtlabs/github-module/commit/5490c43f729eee60f07920bf88c0aabdc1398b6e",
            "description": "Use of Hard-coded Credentials in GitHub repository nuxtlabs/github-module prior to 1.6.2.",
            "date": "2023-04-18",
            "github_description": "\u2753 Type of change\n\n \ud83d\udcd6 Documentation (updates to the documentation or readme)\n \ud83d\udc1e Bug fix (a non-breaking change that fixes an issue)\n \ud83d\udc4c Enhancement (improving an existing functionality like performance)\n \u2728 New feature (a non-breaking change that adds functionality)\n \ud83e\uddf9 Chore (updates to the build process or auxiliary tools and libraries)\n \u26a0\ufe0f Breaking change (fix or feature that would cause existing functionality to change)\n\n\ud83d\udcda Description\nThis only seems to be used in a server route, but we are leaking it in rendered HTML.\n\n\n\ngithub-module/src/runtime/server/utils/queries.ts\n\n\n        Lines 61 to 65\n      in\n      507be69\n\n\n\n\n\n\n const gq = graphql.defaults({ \n\n\n\n headers: { \n\n\n\n authorization: `token ${options.token}` \n\n\n\n } \n\n\n\n }) \n\n\n\n\n\n\ud83d\udcdd Checklist\n\n I have linked an issue or discussion.\n I have updated the documentation accordingly.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-200\"],\n  \"severity\": \"low\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-200"
                ],
                "severity": "LOW"
            },
            "ground_truth_CVE": "CVE-2023-2138",
            "ground_truth_CWEs": [
                "CWE-798"
            ],
            "ground_truth_severities": {
                "V3.1": "CRITICAL"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "NOT_OVERLAPPED"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Missing Authorization in GitHub repository chocobozzz/peertube prior to 4.1.0.\nFile: server/middlewares/validators/videos/video-rates.ts\nContent: \n<Code>\nimport express from 'express'\nimport { body, param, query } from 'express-validator'\nimport { HttpStatusCode } from '../../../../shared/models/http/http-error-codes'\nimport { VideoRateType } from '../../../../shared/models/videos'\nimport { isAccountNameValid } from '../../../helpers/custom-validators/accounts'\nimport { isIdValid } from '../../../helpers/custom-validators/misc'\nimport { isRatingValid } from '../../../helpers/custom-validators/video-rates'\nimport { isVideoRatingTypeValid } from '../../../helpers/custom-validators/videos'\nimport { logger } from '../../../helpers/logger'\nimport { AccountVideoRateModel } from '../../../models/account/account-video-rate'\nimport { areValidationErrors, doesVideoExist, isValidVideoIdParam } from '../shared'\n\nconst videoUpdateRateValidator = [\n  isValidVideoIdParam('id'),\n\n  body('rating').custom(isVideoRatingTypeValid).withMessage('Should have a valid rate type'),\n\n  async (req: express.Request, res: express.Response, next: express.NextFunction) => {\n    logger.debug('Checking videoRate parameters', { parameters: req.body })\n\n    if (areValidationErrors(req, res)) return\n    if (!await doesVideoExist(req.params.id, res)) return\n\n    return next()\n  }\n]\n\nconst getAccountVideoRateValidatorFactory = function (rateType: VideoRateType) {\n  return [\n    param('name').custom(isAccountNameValid).withMessage('Should have a valid account name'),\n    param('videoId').custom(isIdValid).not().isEmpty().withMessage('Should have a valid videoId'),\n\n    async (req: express.Request, res: express.Response, next: express.NextFunction) => {\n      logger.debug('Checking videoCommentGetValidator parameters.', { parameters: req.params })\n\n      if (areValidationErrors(req, res)) return\n\n      const rate = await AccountVideoRateModel.loadLocalAndPopulateVideo(rateType, req.params.name, +req.params.videoId)\n      if (!rate) {\n        return res.fail({\n          status: HttpStatusCode.NOT_FOUND_404,\n          message: 'Video rate not found'\n        })\n      }\n\n      res.locals.accountVideoRate = rate\n\n      return next()\n    }\n  ]\n}\n\nconst videoRatingValidator = [\n  query('rating').optional().custom(isRatingValid).withMessage('Value must be one of \"like\" or \"dislike\"'),\n\n  (req: express.Request, res: express.Response, next: express.NextFunction) => {\n    logger.debug('Checking rating parameter', { parameters: req.params })\n\n    if (areValidationErrors(req, res)) return\n\n    return next()\n  }\n]\n\n// ---------------------------------------------------------------------------\n\nexport {\n  videoUpdateRateValidator,\n  getAccountVideoRateValidatorFactory,\n  videoRatingValidator\n}\n</Code>\n\nFile: server/tests/api/check-params/video-comments.ts\nContent: \n<Code>\n/* eslint-disable @typescript-eslint/no-unused-expressions,@typescript-eslint/require-await */\n\nimport 'mocha'\nimport * as chai from 'chai'\nimport { checkBadCountPagination, checkBadSortPagination, checkBadStartPagination } from '@server/tests/shared'\nimport { HttpStatusCode, VideoCreateResult, VideoPrivacy } from '@shared/models'\nimport {\n  cleanupTests,\n  createSingleServer,\n  makeDeleteRequest,\n  makeGetRequest,\n  makePostBodyRequest,\n  PeerTubeServer,\n  setAccessTokensToServers\n} from '@shared/server-commands'\n\nconst expect = chai.expect\n\ndescribe('Test video comments API validator', function () {\n  let pathThread: string\n  let pathComment: string\n  let server: PeerTubeServer\n  let video: VideoCreateResult\n  let userAccessToken: string\n  let userAccessToken2: string\n  let commentId: number\n  let privateCommentId: number\n  let privateVideo: VideoCreateResult\n\n  // ---------------------------------------------------------------\n\n  before(async function () {\n    this.timeout(30000)\n\n    server = await createSingleServer(1)\n\n    await setAccessTokensToServers([ server ])\n\n    {\n      video = await server.videos.upload({ attributes: {} })\n      pathThread = '/api/v1/videos/' + video.uuid + '/comment-threads'\n    }\n\n    {\n      privateVideo = await server.videos.upload({ attributes: { privacy: VideoPrivacy.PRIVATE } })\n    }\n\n    {\n      const created = await server.comments.createThread({ videoId: video.uuid, text: 'coucou' })\n      commentId = created.id\n      pathComment = '/api/v1/videos/' + video.uuid + '/comments/' + commentId\n    }\n\n    {\n      const created = await server.comments.createThread({ videoId: privateVideo.uuid, text: 'coucou' })\n      privateCommentId = created.id\n    }\n\n    {\n      const user = { username: 'user1', password: 'my super password' }\n      await server.users.create({ username: user.username, password: user.password })\n      userAccessToken = await server.login.getAccessToken(user)\n    }\n\n    {\n      const user = { username: 'user2', password: 'my super password' }\n      await server.users.create({ username: user.username, password: user.password })\n      userAccessToken2 = await server.login.getAccessToken(user)\n    }\n  })\n\n  describe('When listing video comment threads', function () {\n    it('Should fail with a bad start pagination', async function () {\n      await checkBadStartPagination(server.url, pathThread, server.accessToken)\n    })\n\n    it('Should fail with a bad count pagination', async function () {\n      await checkBadCountPagination(server.url, pathThread, server.accessToken)\n    })\n\n    it('Should fail with an incorrect sort', async function () {\n      await checkBadSortPagination(server.url, pathThread, server.accessToken)\n    })\n\n    it('Should fail with an incorrect video', async function () {\n      await makeGetRequest({\n        url: server.url,\n        path: '/api/v1/videos/ba708d62-e3d7-45d9-9d73-41b9097cc02d/comment-threads',\n        expectedStatus: HttpStatusCode.NOT_FOUND_404\n      })\n    })\n\n    it('Should fail with a private video without token', async function () {\n      await makeGetRequest({\n        url: server.url,\n        path: '/api/v1/videos/' + privateVideo.shortUUID + '/comment-threads',\n        expectedStatus: HttpStatusCode.UNAUTHORIZED_401\n      })\n    })\n\n    it('Should fail with another user token', async function () {\n      await makeGetRequest({\n        url: server.url,\n        token: userAccessToken,\n        path: '/api/v1/videos/' + privateVideo.shortUUID + '/comment-threads',\n        expectedStatus: HttpStatusCode.FORBIDDEN_403\n      })\n    })\n\n    it('Should succeed with the correct params', async function () {\n      await makeGetRequest({\n        url: server.url,\n        token: server.accessToken,\n        path: '/api/v1/videos/' + privateVideo.shortUUID + '/comment-threads',\n        expectedStatus: HttpStatusCode.OK_200\n      })\n    })\n  })\n\n  describe('When listing comments of a thread', function () {\n    it('Should fail with an incorrect video', async function () {\n      await makeGetRequest({\n        url: server.url,\n        path: '/api/v1/videos/ba708d62-e3d7-45d9-9d73-41b9097cc02d/comment-threads/' + commentId,\n        expectedStatus: HttpStatusCode.NOT_FOUND_404\n      })\n    })\n\n    it('Should fail with an incorrect thread id', async function () {\n      await makeGetRequest({\n        url: server.url,\n        path: '/api/v1/videos/' + video.shortUUID + '/comment-threads/156',\n        expectedStatus: HttpStatusCode.NOT_FOUND_404\n      })\n    })\n\n    it('Should fail with a private video without token', async function () {\n      await makeGetRequest({\n        url: server.url,\n        path: '/api/v1/videos/' + privateVideo.shortUUID + '/comment-threads/' + privateCommentId,\n        expectedStatus: HttpStatusCode.UNAUTHORIZED_401\n      })\n    })\n\n    it('Should fail with another user token', async function () {\n      await makeGetRequest({\n        url: server.url,\n        token: userAccessToken,\n        path: '/api/v1/videos/' + privateVideo.shortUUID + '/comment-threads/' + privateCommentId,\n        expectedStatus: HttpStatusCode.FORBIDDEN_403\n      })\n    })\n\n    it('Should success with the correct params', async function () {\n      await makeGetRequest({\n        url: server.url,\n        token: server.accessToken,\n        path: '/api/v1/videos/' + privateVideo.shortUUID + '/comment-threads/' + privateCommentId,\n        expectedStatus: HttpStatusCode.OK_200\n      })\n\n      await makeGetRequest({\n        url: server.url,\n        path: '/api/v1/videos/' + video.shortUUID + '/comment-threads/' + commentId,\n        expectedStatus: HttpStatusCode.OK_200\n      })\n    })\n  })\n\n  describe('When adding a video thread', function () {\n\n    it('Should fail with a non authenticated user', async function () {\n      const fields = {\n        text: 'text'\n      }\n      await makePostBodyRequest({\n        url: server.url,\n        path: pathThread,\n        token: 'none',\n        fields,\n        expectedStatus: HttpStatusCode.UNAUTHORIZED_401\n      })\n    })\n\n    it('Should fail with nothing', async function () {\n      const fields = {}\n      await makePostBodyRequest({ url: server.url, path: pathThread, token: server.accessToken, fields })\n    })\n\n    it('Should fail with a short comment', async function () {\n      const fields = {\n        text: ''\n      }\n      await makePostBodyRequest({ url: server.url, path: pathThread, token: server.accessToken, fields })\n    })\n\n    it('Should fail with a long comment', async function () {\n      const fields = {\n        text: 'h'.repeat(10001)\n      }\n      await makePostBodyRequest({ url: server.url, path: pathThread, token: server.accessToken, fields })\n    })\n\n    it('Should fail with an incorrect video', async function () {\n      const path = '/api/v1/videos/ba708d62-e3d7-45d9-9d73-41b9097cc02d/comment-threads'\n      const fields = {\n        text: 'super comment'\n      }\n      await makePostBodyRequest({\n        url: server.url,\n        path,\n        token: server.accessToken,\n        fields,\n        expectedStatus: HttpStatusCode.NOT_FOUND_404\n      })\n    })\n\n    it('Should succeed with the correct parameters', async function () {\n      const fields = {\n        text: 'super comment'\n      }\n      await makePostBodyRequest({\n        url: server.url,\n        path: pathThread,\n        token: server.accessToken,\n        fields,\n        expectedStatus: HttpStatusCode.OK_200\n      })\n    })\n  })\n\n  describe('When adding a comment to a thread', function () {\n    it('Should fail with a non authenticated user', async function () {\n      const fields = {\n        text: 'text'\n      }\n      await makePostBodyRequest({\n        url: server.url,\n        path: pathComment,\n        token: 'none',\n        fields,\n        expectedStatus: HttpStatusCode.UNAUTHORIZED_401\n      })\n    })\n\n    it('Should fail with nothing', async function () {\n      const fields = {}\n      await makePostBodyRequest({ url: server.url, path: pathComment, token: server.accessToken, fields })\n    })\n\n    it('Should fail with a short comment', async function () {\n      const fields = {\n        text: ''\n      }\n      await makePostBodyRequest({ url: server.url, path: pathComment, token: server.accessToken, fields })\n    })\n\n    it('Should fail with a long comment', async function () {\n      const fields = {\n        text: 'h'.repeat(10001)\n      }\n      await makePostBodyRequest({ url: server.url, path: pathComment, token: server.accessToken, fields })\n    })\n\n    it('Should fail with an incorrect video', async function () {\n      const path = '/api/v1/videos/ba708d62-e3d7-45d9-9d73-41b9097cc02d/comments/' + commentId\n      const fields = {\n        text: 'super comment'\n      }\n      await makePostBodyRequest({\n        url: server.url,\n        path,\n        token: server.accessToken,\n        fields,\n        expectedStatus: HttpStatusCode.NOT_FOUND_404\n      })\n    })\n\n    it('Should fail with an incorrect comment', async function () {\n      const path = '/api/v1/videos/' + video.uuid + '/comments/124'\n      const fields = {\n        text: 'super comment'\n      }\n      await makePostBodyRequest({\n        url: server.url,\n        path,\n        token: server.accessToken,\n        fields,\n        expectedStatus: HttpStatusCode.NOT_FOUND_404\n      })\n    })\n\n    it('Should succeed with the correct parameters', async function () {\n      const fields = {\n        text: 'super comment'\n      }\n      await makePostBodyRequest({\n        url: server.url,\n        path: pathComment,\n        token: server.accessToken,\n        fields,\n        expectedStatus: HttpStatusCode.OK_200\n      })\n    })\n  })\n\n  describe('When removing video comments', function () {\n    it('Should fail with a non authenticated user', async function () {\n      await makeDeleteRequest({ url: server.url, path: pathComment, token: 'none', expectedStatus: HttpStatusCode.UNAUTHORIZED_401 })\n    })\n\n    it('Should fail with another user', async function () {\n      await makeDeleteRequest({\n        url: server.url,\n        path: pathComment,\n        token: userAccessToken,\n        expectedStatus: HttpStatusCode.FORBIDDEN_403\n      })\n    })\n\n    it('Should fail with an incorrect video', async function () {\n      const path = '/api/v1/videos/ba708d62-e3d7-45d9-9d73-41b9097cc02d/comments/' + commentId\n      await makeDeleteRequest({ url: server.url, path, token: server.accessToken, expectedStatus: HttpStatusCode.NOT_FOUND_404 })\n    })\n\n    it('Should fail with an incorrect comment', async function () {\n      const path = '/api/v1/videos/' + video.uuid + '/comments/124'\n      await makeDeleteRequest({ url: server.url, path, token: server.accessToken, expectedStatus: HttpStatusCode.NOT_FOUND_404 })\n    })\n\n    it('Should succeed with the same user', async function () {\n      let commentToDelete: number\n\n      {\n        const created = await server.comments.createThread({ videoId: video.uuid, token: userAccessToken, text: 'hello' })\n        commentToDelete = created.id\n      }\n\n      const path = '/api/v1/videos/' + video.uuid + '/comments/' + commentToDelete\n\n      await makeDeleteRequest({ url: server.url, path, token: userAccessToken2, expectedStatus: HttpStatusCode.FORBIDDEN_403 })\n      await makeDeleteRequest({ url: server.url, path, token: userAccessToken, expectedStatus: HttpStatusCode.NO_CONTENT_204 })\n    })\n\n    it('Should succeed with the owner of the video', async function () {\n      let commentToDelete: number\n      let anotherVideoUUID: string\n\n      {\n        const { uuid } = await server.videos.upload({ token: userAccessToken, attributes: { name: 'video' } })\n        anotherVideoUUID = uuid\n      }\n\n      {\n        const created = await server.comments.createThread({ videoId: anotherVideoUUID, text: 'hello' })\n        commentToDelete = created.id\n      }\n\n      const path = '/api/v1/videos/' + anotherVideoUUID + '/comments/' + commentToDelete\n\n      await makeDeleteRequest({ url: server.url, path, token: userAccessToken2, expectedStatus: HttpStatusCode.FORBIDDEN_403 })\n      await makeDeleteRequest({ url: server.url, path, token: userAccessToken, expectedStatus: HttpStatusCode.NO_CONTENT_204 })\n    })\n\n    it('Should succeed with the correct parameters', async function () {\n      await makeDeleteRequest({\n        url: server.url,\n        path: pathComment,\n        token: server.accessToken,\n        expectedStatus: HttpStatusCode.NO_CONTENT_204\n      })\n    })\n  })\n\n  describe('When a video has comments disabled', function () {\n    before(async function () {\n      video = await server.videos.upload({ attributes: { commentsEnabled: false } })\n      pathThread = '/api/v1/videos/' + video.uuid + '/comment-threads'\n    })\n\n    it('Should return an empty thread list', async function () {\n      const res = await makeGetRequest({\n        url: server.url,\n        path: pathThread,\n        expectedStatus: HttpStatusCode.OK_200\n      })\n      expect(res.body.total).to.equal(0)\n      expect(res.body.data).to.have.lengthOf(0)\n    })\n\n    it('Should return an thread comments list')\n\n    it('Should return conflict on thread add', async function () {\n      const fields = {\n        text: 'super comment'\n      }\n      await makePostBodyRequest({\n        url: server.url,\n        path: pathThread,\n        token: server.accessToken,\n        fields,\n        expectedStatus: HttpStatusCode.CONFLICT_409\n      })\n    })\n\n    it('Should return conflict on comment thread add')\n  })\n\n  describe('When listing admin comments threads', function () {\n    const path = '/api/v1/videos/comments'\n\n    it('Should fail with a bad start pagination', async function () {\n      await checkBadStartPagination(server.url, path, server.accessToken)\n    })\n\n    it('Should fail with a bad count pagination', async function () {\n      await checkBadCountPagination(server.url, path, server.accessToken)\n    })\n\n    it('Should fail with an incorrect sort', async function () {\n      await checkBadSortPagination(server.url, path, server.accessToken)\n    })\n\n    it('Should fail with a non authenticated user', async function () {\n      await makeGetRequest({\n        url: server.url,\n        path,\n        expectedStatus: HttpStatusCode.UNAUTHORIZED_401\n      })\n    })\n\n    it('Should fail with a non admin user', async function () {\n      await makeGetRequest({\n        url: server.url,\n        path,\n        token: userAccessToken,\n        expectedStatus: HttpStatusCode.FORBIDDEN_403\n      })\n    })\n\n    it('Should succeed with the correct params', async function () {\n      await makeGetRequest({\n        url: server.url,\n        path,\n        token: server.accessToken,\n        query: {\n          isLocal: false,\n          search: 'toto',\n          searchAccount: 'toto',\n          searchVideo: 'toto'\n        },\n        expectedStatus: HttpStatusCode.OK_200\n      })\n    })\n  })\n\n  after(async function () {\n    await cleanupTests([ server ])\n  })\n})\n</Code>"
                }
            ],
            "url": "https://github.com/chocobozzz/peertube/commit/6ea9295b8f5dd7cc254202a79aad61c666cc4259",
            "description": "Missing Authorization in GitHub repository chocobozzz/peertube prior to 4.1.0.",
            "date": "2022-02-23",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-862\"],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-862"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2022-0726",
            "ground_truth_CWEs": [
                "CWE-862"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": true,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: bookstack is vulnerable to Unrestricted Upload of File with Dangerous Type\nFile: app/Uploads/ImageRepo.php\nContent: \n<Code>\n<?php\n\nnamespace BookStack\\Uploads;\n\nuse BookStack\\Auth\\Permissions\\PermissionService;\nuse BookStack\\Entities\\Models\\Page;\nuse BookStack\\Exceptions\\ImageUploadException;\nuse Exception;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Symfony\\Component\\HttpFoundation\\File\\UploadedFile;\n\nclass ImageRepo\n{\n    protected $image;\n    protected $imageService;\n    protected $restrictionService;\n    protected $page;\n\n    protected static $supportedExtensions = ['jpg', 'jpeg', 'png', 'gif', 'webp'];\n\n    /**\n     * ImageRepo constructor.\n     */\n    public function __construct(\n        Image $image,\n        ImageService $imageService,\n        PermissionService $permissionService,\n        Page $page\n    ) {\n        $this->image = $image;\n        $this->imageService = $imageService;\n        $this->restrictionService = $permissionService;\n        $this->page = $page;\n    }\n\n    /**\n     * Check if the given image extension is supported by BookStack.\n     */\n    public function imageExtensionSupported(string $extension): bool\n    {\n        return in_array(trim($extension, '. \\t\\n\\r\\0\\x0B'), static::$supportedExtensions);\n    }\n\n    /**\n     * Get an image with the given id.\n     */\n    public function getById($id): Image\n    {\n        return $this->image->findOrFail($id);\n    }\n\n    /**\n     * Execute a paginated query, returning in a standard format.\n     * Also runs the query through the restriction system.\n     */\n    private function returnPaginated($query, $page = 1, $pageSize = 24): array\n    {\n        $images = $query->orderBy('created_at', 'desc')->skip($pageSize * ($page - 1))->take($pageSize + 1)->get();\n        $hasMore = count($images) > $pageSize;\n\n        $returnImages = $images->take($pageSize);\n        $returnImages->each(function ($image) {\n            $this->loadThumbs($image);\n        });\n\n        return [\n            'images'   => $returnImages,\n            'has_more' => $hasMore,\n        ];\n    }\n\n    /**\n     * Fetch a list of images in a paginated format, filtered by image type.\n     * Can be filtered by uploaded to and also by name.\n     */\n    public function getPaginatedByType(\n        string $type,\n        int $page = 0,\n        int $pageSize = 24,\n        int $uploadedTo = null,\n        string $search = null,\n        callable $whereClause = null\n    ): array {\n        $imageQuery = $this->image->newQuery()->where('type', '=', strtolower($type));\n\n        if ($uploadedTo !== null) {\n            $imageQuery = $imageQuery->where('uploaded_to', '=', $uploadedTo);\n        }\n\n        if ($search !== null) {\n            $imageQuery = $imageQuery->where('name', 'LIKE', '%' . $search . '%');\n        }\n\n        // Filter by page access\n        $imageQuery = $this->restrictionService->filterRelatedEntity(Page::class, $imageQuery, 'images', 'uploaded_to');\n\n        if ($whereClause !== null) {\n            $imageQuery = $imageQuery->where($whereClause);\n        }\n\n        return $this->returnPaginated($imageQuery, $page, $pageSize);\n    }\n\n    /**\n     * Get paginated gallery images within a specific page or book.\n     */\n    public function getEntityFiltered(\n        string $type,\n        string $filterType = null,\n        int $page = 0,\n        int $pageSize = 24,\n        int $uploadedTo = null,\n        string $search = null\n    ): array {\n        $contextPage = $this->page->findOrFail($uploadedTo);\n        $parentFilter = null;\n\n        if ($filterType === 'book' || $filterType === 'page') {\n            $parentFilter = function (Builder $query) use ($filterType, $contextPage) {\n                if ($filterType === 'page') {\n                    $query->where('uploaded_to', '=', $contextPage->id);\n                } elseif ($filterType === 'book') {\n                    $validPageIds = $contextPage->book->pages()->visible()->get(['id'])->pluck('id')->toArray();\n                    $query->whereIn('uploaded_to', $validPageIds);\n                }\n            };\n        }\n\n        return $this->getPaginatedByType($type, $page, $pageSize, null, $search, $parentFilter);\n    }\n\n    /**\n     * Save a new image into storage and return the new image.\n     *\n     * @throws ImageUploadException\n     */\n    public function saveNew(UploadedFile $uploadFile, string $type, int $uploadedTo = 0, int $resizeWidth = null, int $resizeHeight = null, bool $keepRatio = true): Image\n    {\n        $image = $this->imageService->saveNewFromUpload($uploadFile, $type, $uploadedTo, $resizeWidth, $resizeHeight, $keepRatio);\n        $this->loadThumbs($image);\n\n        return $image;\n    }\n\n    /**\n     * Save a new image from an existing image data string.\n     *\n     * @throws ImageUploadException\n     */\n    public function saveNewFromData(string $imageName, string $imageData, string $type, int $uploadedTo = 0)\n    {\n        $image = $this->imageService->saveNew($imageName, $imageData, $type, $uploadedTo);\n        $this->loadThumbs($image);\n\n        return $image;\n    }\n\n    /**\n     * Save a drawing the the database.\n     *\n     * @throws ImageUploadException\n     */\n    public function saveDrawing(string $base64Uri, int $uploadedTo): Image\n    {\n        $name = 'Drawing-' . strval(user()->id) . '-' . strval(time()) . '.png';\n\n        return $this->imageService->saveNewFromBase64Uri($base64Uri, $name, 'drawio', $uploadedTo);\n    }\n\n    /**\n     * Update the details of an image via an array of properties.\n     *\n     * @throws ImageUploadException\n     * @throws Exception\n     */\n    public function updateImageDetails(Image $image, $updateDetails): Image\n    {\n        $image->fill($updateDetails);\n        $image->save();\n        $this->loadThumbs($image);\n\n        return $image;\n    }\n\n    /**\n     * Destroys an Image object along with its revisions, files and thumbnails.\n     *\n     * @throws Exception\n     */\n    public function destroyImage(Image $image = null): bool\n    {\n        if ($image) {\n            $this->imageService->destroy($image);\n        }\n\n        return true;\n    }\n\n    /**\n     * Destroy all images of a certain type.\n     *\n     * @throws Exception\n     */\n    public function destroyByType(string $imageType)\n    {\n        $images = $this->image->where('type', '=', $imageType)->get();\n        foreach ($images as $image) {\n            $this->destroyImage($image);\n        }\n    }\n\n    /**\n     * Load thumbnails onto an image object.\n     *\n     * @throws Exception\n     */\n    public function loadThumbs(Image $image)\n    {\n        $image->thumbs = [\n            'gallery' => $this->getThumbnail($image, 150, 150, false),\n            'display' => $this->getThumbnail($image, 1680, null, true),\n        ];\n    }\n\n    /**\n     * Get the thumbnail for an image.\n     * If $keepRatio is true only the width will be used.\n     * Checks the cache then storage to avoid creating / accessing the filesystem on every check.\n     *\n     * @throws Exception\n     */\n    protected function getThumbnail(Image $image, ?int $width = 220, ?int $height = 220, bool $keepRatio = false): ?string\n    {\n        try {\n            return $this->imageService->getThumbnail($image, $width, $height, $keepRatio);\n        } catch (Exception $exception) {\n            return null;\n        }\n    }\n\n    /**\n     * Get the raw image data from an Image.\n     */\n    public function getImageData(Image $image): ?string\n    {\n        try {\n            return $this->imageService->getImageData($image);\n        } catch (Exception $exception) {\n            return null;\n        }\n    }\n\n    /**\n     * Get the user visible pages using the given image.\n     */\n    public function getPagesUsingImage(Image $image): array\n    {\n        $pages = Page::visible()\n            ->where('html', 'like', '%' . $image->url . '%')\n            ->get(['id', 'name', 'slug', 'book_id']);\n\n        foreach ($pages as $page) {\n            $page->url = $page->getUrl();\n        }\n\n        return $pages->all();\n    }\n}\n</Code>"
                }
            ],
            "url": "https://github.com/bookstackapp/bookstack/commit/64937ab826b56d086af9ecea532510d37520ebc8",
            "description": "bookstack is vulnerable to Unrestricted Upload of File with Dangerous Type",
            "date": "2021-10-27",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-434\"],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-434"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2021-3906",
            "ground_truth_CWEs": [
                "CWE-434"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": true,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Describe the bug\nSVGs are hard to make safe (https://www.slideshare.net/x00mario/the-image-that-called-me). Disallow them in core; if there is sufficient demand, they might be allowed via a plugin that includes a sanitization dependency, but I don't trust that approach enough for core.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions\nFile: api/v1/_uploadPublicFile/PKPUploadPublicFileHandler.inc.php\nContent: \n<Code>\n<?php\n/**\n * @file api/v1/contexts/PKPUploadPublicFileHandler.inc.php\n *\n * Copyright (c) 2014-2021 Simon Fraser University\n * Copyright (c) 2000-2021 John Willinsky\n * Distributed under the GNU GPL v3. For full terms see the file docs/COPYING.\n *\n * @class PKPUploadPublicFileHandler\n * @ingroup api_v1_uploadPublicFile\n *\n * @brief Handle API requests to upload a file to a user's public directory.\n */\nimport('lib.pkp.classes.handler.APIHandler');\n\nclass PKPUploadPublicFileHandler extends APIHandler {\n\t/**\n\t * @copydoc APIHandler::__construct()\n\t */\n\tpublic function __construct() {\n\t\t$this->_handlerPath = '_uploadPublicFile';\n\t\t$roles = [ROLE_ID_SITE_ADMIN, ROLE_ID_MANAGER, ROLE_ID_SUB_EDITOR, ROLE_ID_REVIEWER, ROLE_ID_AUTHOR, ROLE_ID_ASSISTANT, ROLE_ID_READER];\n\t\t$this->_endpoints = array(\n\t\t\t'OPTIONS' => array(\n\t\t\t\tarray(\n\t\t\t\t\t'pattern' => $this->getEndpointPattern(),\n\t\t\t\t\t'handler' => array($this, 'getOptions'),\n\t\t\t\t\t'roles' => $roles,\n\t\t\t\t),\n\t\t\t),\n\t\t\t'POST' => array(\n\t\t\t\tarray(\n\t\t\t\t\t'pattern' => $this->getEndpointPattern(),\n\t\t\t\t\t'handler' => array($this, 'uploadFile'),\n\t\t\t\t\t'roles' => $roles,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tparent::__construct();\n\t}\n\n\t/**\n\t * @copydoc PKPHandler::authorize\n\t */\n\tpublic function authorize($request, &$args, $roleAssignments) {\n\t\timport('lib.pkp.classes.security.authorization.PolicySet');\n\t\t$rolePolicy = new PolicySet(COMBINING_PERMIT_OVERRIDES);\n\n\t\timport('lib.pkp.classes.security.authorization.RoleBasedHandlerOperationPolicy');\n\t\tforeach($roleAssignments as $role => $operations) {\n\t\t\t$rolePolicy->addPolicy(new RoleBasedHandlerOperationPolicy($request, $role, $operations));\n\t\t}\n\t\t$this->addPolicy($rolePolicy);\n\n\t\treturn parent::authorize($request, $args, $roleAssignments);\n\t}\n\n\t/**\n\t * A helper method which adds the necessary response headers to allow\n\t * file uploads\n\t *\n\t * @param $response Response object\n\t * @return Response\n\t */\n\tprivate function getResponse($response) {\n\t\treturn $response->withHeader('Access-Control-Allow-Headers', 'Content-Type, X-Requested-With, X-PINGOTHER, X-File-Name, Cache-Control');\n\t}\n\n\t/**\n\t * Upload a requested file\n\t *\n\t * @param $slimRequest Request Slim request object\n\t * @param $response Response object\n\t * @param $args array arguments\n\t * @return Response\n\t */\n\tpublic function uploadFile($slimRequest, $response, $args) {\n\t\t$request = $this->getRequest();\n\n\t\tif (empty($_FILES) || empty($_FILES['file'])) {\n\t\t\treturn $response->withStatus(400)->withJsonError('api.files.400.noUpload');\n\t\t}\n\n\t\t$siteDir = Core::getBaseDir() . '/' . Config::getVar('files', 'public_files_dir') . '/site';\n\n\t\tif (!file_exists($siteDir) || !is_writeable($siteDir)) {\n\t\t\treturn $response->withStatus(500)->withJsonError('api.publicFiles.500.badFilesDir');\n\t\t}\n\t\t$userDir = $siteDir . '/images/' . $request->getUser()->getUsername();\n\t\t$isUserAllowed = true;\n\t\t$allowedDirSize = Config::getVar('files', 'public_user_dir_size', 5000) * 1024;\n\t\t$allowedFileTypes = ['gif', 'jpg', 'png', 'webp', 'svg'];\n\n\t\tHookRegistry::call('API::uploadPublicFile::permissions', [\n\t\t\t&$userDir,\n\t\t\t&$isUserAllowed,\n\t\t\t&$allowedDirSize,\n\t\t\t&$allowedFileTypes,\n\t\t\t$request,\n\t\t\t$this->getAuthorizedContextObject(ASSOC_TYPE_USER_ROLES),\n\t\t]);\n\n\t\t// Allow plugins to control who can upload files\n\t\tif (!$isUserAllowed) {\n\t\t\treturn $response->withStatus(403)->withJsonError('api.publicFiles.403.unauthorized');\n\t\t}\n\n\t\t// Don't allow user to exceed the alotted space in their public directory\n\t\t$currentSize = 0;\n\t\tif ($allowedDirSize > 0 && file_exists($userDir)) {\n\t\t\tforeach (new RecursiveIteratorIterator(new RecursiveDirectoryIterator($userDir, FilesystemIterator::SKIP_DOTS)) as $object) {\n\t\t\t\t$currentSize += $object->getSize();\n\t\t\t}\n\t\t}\n\t\tif (($currentSize + $_FILES['file']['size']) > $allowedDirSize) {\n\t\t\treturn $response->withStatus(413)->withJsonError('api.publicFiles.413.noDirSpace', [\n\t\t\t\t'fileUploadSize' => ceil($_FILES['file']['size']/1024),\n\t\t\t\t'dirSizeLeft' => ceil(($allowedDirSize - $currentSize)/1024),\n\t\t\t]);\n\t\t}\n\n\t\timport('lib.pkp.classes.file.FileManager');\n\t\t$fileManager = new FileManager();\n\t\t$filename = $fileManager->getUploadedFileName('file');\n\t\t$filename = trim(\n\t\t\tpreg_replace(\n\t\t\t\t\"/[^a-z0-9\\.\\-]+/\",\n\t\t\t\t\"\",\n\t\t\t\tstr_replace(\n\t\t\t\t\t[' ', '_', ':'],\n\t\t\t\t\t'-',\n\t\t\t\t\tstrtolower($filename)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\t$extension = pathinfo(strtolower(trim($filename)), PATHINFO_EXTENSION);\n\n\t\t// Only allow permitted file types\n\t\tif (!in_array($extension, $allowedFileTypes)) {\n\t\t\treturn $response->withStatus(400)->withJsonError('api.publicFiles.400.extensionNotSupported', [\n\t\t\t\t'fileTypes' => join(__('common.commaListSeparator'), $allowedFileTypes)\n\t\t\t]);\n\t\t}\n\n\t\t// Perform additional checks on images\n\t\tif (in_array($extension, ['gif', 'jpg', 'jpeg', 'png', 'jpe', 'webp', 'svg'])) {\n\t\t\tif (getimagesize($_FILES['file']['tmp_name']) === false) {\n\t\t\t\treturn $response->withStatus(400)->withJsonError('api.publicFiles.400.invalidImage');\n\t\t\t}\n\t\t\t$extensionFromMimeType = $fileManager->getImageExtension(PKPString::mime_content_type($_FILES['file']['tmp_name']));\n\t\t\tif ($extensionFromMimeType !== '.' . $extension) {\n\t\t\t\treturn $response->withStatus(400)->withJsonError('api.publicFiles.400.mimeTypeNotMatched');\n\t\t\t}\n\t\t}\n\n\t\t// Save the file\n\t\t$destinationPath = $this->_getFilename($siteDir . '/images/' . $request->getUser()->getUsername() . '/' . $filename, $fileManager);\n\t\t$success = $fileManager->uploadFile('file', $destinationPath);\n\n\t\tif ($success === false) {\n\t\t\tif ($fileManager->uploadError($filename)) {\n\t\t\t\tswitch ($fileManager->getUploadErrorCode($filename)) {\n\t\t\t\t\tcase UPLOAD_ERR_INI_SIZE:\n\t\t\t\t\tcase UPLOAD_ERR_FORM_SIZE:\n\t\t\t\t\treturn $response->withStatus(400)->withJsonError('api.files.400.fileSize', ['maxSize' => Application::getReadableMaxFileSize()]);\n\t\t\t\t\tcase UPLOAD_ERR_PARTIAL:\n\t\t\t\t\treturn $response->withStatus(400)->withJsonError('api.files.400.uploadFailed');\n\t\t\t\t\tcase UPLOAD_ERR_NO_FILE:\n\t\t\t\t\treturn $response->withStatus(400)->withJsonError('api.files.400.noUpload');\n\t\t\t\t\tcase UPLOAD_ERR_NO_TMP_DIR:\n\t\t\t\t\tcase UPLOAD_ERR_CANT_WRITE:\n\t\t\t\t\tcase UPLOAD_ERR_EXTENSION:\n\t\t\t\t\treturn $response->withStatus(400)->withJsonError('api.files.400.config');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $response->withStatus(400)->withJsonError('api.files.400.uploadFailed');\n\t\t}\n\n\t\treturn $this->getResponse($response->withJson([\n\t\t\t'url' => $request->getBaseUrl() . '/' .\n\t\t\t\t\tConfig::getVar('files', 'public_files_dir') . '/site/images/' .\n\t\t\t\t\t$request->getUser()->getUsername() . '/' .\n\t\t\t\t\tpathinfo($destinationPath, PATHINFO_BASENAME),\n\t\t]));\n\t}\n\n\t/**\n\t * Respond affirmatively to a HTTP OPTIONS request with headers which allow\n\t * file uploads\n\t *\n\t * @param $slimRequest Request Slim request object\n\t * @param $response Response object\n\t * @param $args array arguments\n\t * @return Response\n\t */\n\tpublic function getOptions($slimRequest, $response, $args) {\n\t\treturn $this->getResponse($response);\n\t}\n\n\t/**\n\t * A recursive function to get a filename that will not overwrite an\n\t * existing file\n\t *\n\t * @param string $path Preferred filename\n\t * @param FileManager $fileManager\n\t * @return string\n\t */\n\tprivate function _getFilename($path, $fileManager) {\n\t\tif ($fileManager->fileExists($path)) {\n\t\t\t$pathParts = pathinfo($path);\n\t\t\t$filename = $pathParts['filename'] . '-' . md5(microtime()) . '.' . $pathParts['extension'];\n\t\t\tif (strlen($filename > 255)) {\n\t\t\t\t$filename = substr($filename, -255, 255);\n\t\t\t}\n\t\t\treturn $this->_getFilename($pathParts['dirname'] . '/' . $filename, $fileManager);\n\t\t}\n\t\treturn $path;\n\t}\n}\n</Code>\n\nFile: classes/file/FileManager.inc.php\nContent: \n<Code>\n<?php\n\n/**\n * @defgroup file File\n * Implements file management tools, including a database-backed list of files\n * associated with submissions.\n */\n\n/**\n * @file classes/file/FileManager.inc.php\n *\n * Copyright (c) 2014-2021 Simon Fraser University\n * Copyright (c) 2000-2021 John Willinsky\n * Distributed under the GNU GPL v3. For full terms see the file docs/COPYING.\n * ePUB mime type added  Leah M Root (rootl) SUNY Geneseo\n * @class FileManager\n * @ingroup file\n *\n * @brief Class defining basic operations for file management.\n */\n\n\ndefine('FILE_MODE_MASK', 0666);\ndefine('DIRECTORY_MODE_MASK', 0777);\n\ndefine('DOCUMENT_TYPE_DEFAULT', 'default');\ndefine('DOCUMENT_TYPE_AUDIO', 'audio');\ndefine('DOCUMENT_TYPE_EXCEL', 'excel');\ndefine('DOCUMENT_TYPE_HTML', 'html');\ndefine('DOCUMENT_TYPE_IMAGE', 'image');\ndefine('DOCUMENT_TYPE_PDF', 'pdf');\ndefine('DOCUMENT_TYPE_WORD', 'word');\ndefine('DOCUMENT_TYPE_EPUB', 'epub');\ndefine('DOCUMENT_TYPE_VIDEO', 'video');\ndefine('DOCUMENT_TYPE_ZIP', 'zip');\n\nclass FileManager {\n\t/**\n\t * Constructor\n\t */\n\tfunction __construct() {\n\t}\n\n\t/**\n\t * Return true if an uploaded file exists.\n\t * @param $fileName string the name of the file used in the POST form\n\t * @return boolean\n\t */\n\tfunction uploadedFileExists($fileName) {\n\t\tif (isset($_FILES[$fileName]) && isset($_FILES[$fileName]['tmp_name'])\n\t\t\t\t&& is_uploaded_file($_FILES[$fileName]['tmp_name'])) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Return true iff an error occurred when trying to upload a file.\n\t * @param $fileName string the name of the file used in the POST form\n\t * @return boolean\n\t */\n\tfunction uploadError($fileName) {\n\t\treturn (isset($_FILES[$fileName]) && $_FILES[$fileName]['error'] != UPLOAD_ERR_OK);\n\t}\n\n\t/**\n\t * Get the error code of a file upload\n\t * @see http://php.net/manual/en/features.file-upload.errors.php\n\t * @param $fileName string the name of the file used in the POST form\n\t * @return integer\n\t */\n\tfunction getUploadErrorCode($fileName) {\n\t\treturn $_FILES[$fileName]['error'];\n\t}\n\n\t/**\n\t * Get the filename of the first uploaded file in the $_FILES array. The\n\t * returned filename is the value used in the form that submitted the request.\n\t * @return string\n\t */\n\tfunction getFirstUploadedPostName() {\n\t\treturn key($_FILES);\n\t}\n\n\t/**\n\t * Return the (temporary) path to an uploaded file.\n\t * @param $fileName string the name of the file used in the POST form\n\t * @return string (boolean false if no such file)\n\t */\n\tfunction getUploadedFilePath($fileName) {\n\t\tif (isset($_FILES[$fileName]['tmp_name']) && is_uploaded_file($_FILES[$fileName]['tmp_name'])) {\n\t\t\treturn $_FILES[$fileName]['tmp_name'];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Return the user-specific (not temporary) filename of an uploaded file.\n\t * @param $fileName string the name of the file used in the POST form\n\t * @return string (boolean false if no such file)\n\t */\n\tfunction getUploadedFileName($fileName) {\n\t\tif (isset($_FILES[$fileName]['name'])) {\n\t\t\treturn $_FILES[$fileName]['name'];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Return the type of an uploaded file.\n\t * @param $fileName string the name of the file used in the POST form\n\t * @return string\n\t */\n\tfunction getUploadedFileType($fileName) {\n\t\tif (isset($_FILES[$fileName])) {\n\t\t\t// The result of \"explode\" can't be passed directly to \"array_pop\" in PHP 7.\n\t\t\t$exploded = explode('.',$_FILES[$fileName]['name']);\n\n\t\t\t$type = PKPString::mime_content_type(\n\t\t\t\t$_FILES[$fileName]['tmp_name'], // Location on server\n\t\t\t\tarray_pop($exploded) // Extension on client machine\n\t\t\t);\n\n\t\t\tif (!empty($type)) return $type;\n\t\t\treturn $_FILES[$fileName]['type'];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Upload a file.\n\t * @param $fileName string the name of the file used in the POST form\n\t * @param $dest string the path where the file is to be saved\n\t * @return boolean returns true if successful\n\t */\n\tfunction uploadFile($fileName, $destFileName) {\n\t\t$destDir = dirname($destFileName);\n\t\tif (!$this->fileExists($destDir, 'dir')) {\n\t\t\t// Try to create the destination directory\n\t\t\t$this->mkdirtree($destDir);\n\t\t}\n\t\tif (!isset($_FILES[$fileName])) return false;\n\t\tif (move_uploaded_file($_FILES[$fileName]['tmp_name'], $destFileName))\n\t\t\treturn $this->setMode($destFileName, FILE_MODE_MASK);\n\t\treturn false;\n\t}\n\n\t/**\n\t * Write a file.\n\t * @param $dest string the path where the file is to be saved\n\t * @param $contents string the contents to write to the file\n\t * @return boolean returns true if successful\n\t */\n\tfunction writeFile($dest, &$contents) {\n\t\t$success = true;\n\t\t$destDir = dirname($dest);\n\t\tif (!$this->fileExists($destDir, 'dir')) {\n\t\t\t// Try to create the destination directory\n\t\t\t$this->mkdirtree($destDir);\n\t\t}\n\t\tif (($f = fopen($dest, 'wb'))===false) $success = false;\n\t\tif ($success && fwrite($f, $contents)===false) $success = false;\n\t\t@fclose($f);\n\n\t\tif ($success)\n\t\t\treturn $this->setMode($dest, FILE_MODE_MASK);\n\t\treturn false;\n\t}\n\n\t/**\n\t * Copy a file.\n\t * @param $source string the source URL for the file\n\t * @param $dest string the path where the file is to be saved\n\t * @return boolean returns true if successful\n\t */\n\tfunction copyFile($source, $dest) {\n\t\t$destDir = dirname($dest);\n\t\tif (!$this->fileExists($destDir, 'dir')) {\n\t\t\t// Try to create the destination directory\n\t\t\t$this->mkdirtree($destDir);\n\t\t}\n\t\tif (copy($source, $dest))\n\t\t\treturn $this->setMode($dest, FILE_MODE_MASK);\n\t\treturn false;\n\t}\n\n\t/**\n\t * Copy a directory.\n\t * Adapted from code by gimmicklessgpt at gmail dot com, at http://php.net/manual/en/function.copy.php\n\t * @param $source string the path to the source directory\n\t * @param $dest string the path where the directory is to be saved\n\t * @return boolean returns true if successful\n\t */\n\tfunction copyDir($source, $dest) {\n\t\tif (is_dir($source)) {\n\t\t\t$this->mkdir($dest);\n\t\t\t$destDir = dir($source);\n\n\t\t\twhile (($entry = $destDir->read()) !== false) {\n\t\t\t\tif ($entry == '.' || $entry == '..') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$Entry = $source . DIRECTORY_SEPARATOR . $entry;\n\t\t\t\tif (is_dir($Entry) ) {\n\t\t\t\t\t$this->copyDir($Entry, $dest . DIRECTORY_SEPARATOR . $entry );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$this->copyFile($Entry, $dest . DIRECTORY_SEPARATOR . $entry );\n\t\t\t}\n\n\t\t\t$destDir->close();\n\t\t} else {\n\t\t\t$this->copyFile($source, $dest);\n\t\t}\n\n\t\tif ($this->fileExists($dest, 'dir')) {\n\t\t\treturn true;\n\t\t} else return false;\n\t}\n\n\n\t/**\n\t * Read a file's contents.\n\t * @param $filePath string the location of the file to be read\n\t * @param $output boolean output the file's contents instead of returning a string\n\t * @return string|boolean\n\t */\n\tfunction readFileFromPath($filePath, $output = false) {\n\t\tif (is_readable($filePath)) {\n\t\t\t$f = fopen($filePath, 'rb');\n\t\t\tif (!$f) return false;\n\t\t\t$data = '';\n\t\t\twhile (!feof($f)) {\n\t\t\t\t$data .= fread($f, 4096);\n\t\t\t\tif ($output) {\n\t\t\t\t\techo $data;\n\t\t\t\t\t$data = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tfclose($f);\n\n\t\t\tif ($output) return true;\n\t\t\treturn $data;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Download a file.\n\t * Outputs HTTP headers and file content for download\n\t * @param $filePath string the location of the file to be sent\n\t * @param $mediaType string the MIME type of the file, optional\n\t * @param $inline boolean print file as inline instead of attachment, optional\n\t * @param $fileName string Optional filename to use on the client side\n\t * @return boolean\n\t */\n\tfunction downloadByPath($filePath, $mediaType = null, $inline = false, $fileName = null) {\n\t\t$result = null;\n\t\tif (HookRegistry::call('FileManager::downloadFile', array(&$filePath, &$mediaType, &$inline, &$result, &$fileName))) return $result;\n\t\tif (is_readable($filePath)) {\n\t\t\tif ($mediaType === null) {\n\t\t\t\t// If the media type wasn't specified, try to detect.\n\t\t\t\t$mediaType = PKPString::mime_content_type($filePath);\n\t\t\t\tif (empty($mediaType)) $mediaType = 'application/octet-stream';\n\t\t\t}\n\t\t\tif ($fileName === null) {\n\t\t\t\t// If the filename wasn't specified, use the server-side.\n\t\t\t\t$fileName = basename($filePath);\n\t\t\t}\n\n\t\t\t// Stream the file to the end user.\n\t\t\theader(\"Content-Type: $mediaType\");\n\t\t\theader('Content-Length: ' . filesize($filePath));\n\t\t\theader('Accept-Ranges: none');\n\t\t\theader('Content-Disposition: ' . ($inline ? 'inline' : 'attachment') . \"; filename=\\\"$fileName\\\"\");\n\t\t\theader('Cache-Control: private'); // Workarounds for IE weirdness\n\t\t\theader('Pragma: public');\n\t\t\t$this->readFileFromPath($filePath, true);\n\t\t\t$returner = true;\n\t\t} else {\n\t\t\t$returner = false;\n\t\t}\n\t\tHookRegistry::call('FileManager::downloadFileFinished', array(&$returner));\n\t\treturn $returner;\n\t}\n\n\t/**\n\t * Delete a file.\n\t * @param $filePath string the location of the file to be deleted\n\t * @return boolean returns true if successful\n\t */\n\tfunction deleteByPath($filePath) {\n\t\tif ($this->fileExists($filePath)) {\n\t\t\t$result = null;\n\t\t\tif (HookRegistry::call('FileManager::deleteFile', array($filePath, &$result))) return $result;\n\t\t\treturn unlink($filePath);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Create a new directory.\n\t * @param $dirPath string the full path of the directory to be created\n\t * @param $perms string the permissions level of the directory (optional)\n\t * @return boolean returns true if successful\n\t */\n\tfunction mkdir($dirPath, $perms = null) {\n\t\tif ($perms !== null) {\n\t\t\treturn mkdir($dirPath, $perms);\n\t\t} else {\n\t\t\tif (mkdir($dirPath))\n\t\t\t\treturn $this->setMode($dirPath, DIRECTORY_MODE_MASK);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Remove a directory.\n\t * @param $dirPath string the full path of the directory to be delete\n\t * @return boolean returns true if successful\n\t */\n\tfunction rmdir($dirPath) {\n\t\treturn rmdir($dirPath);\n\t}\n\n\t/**\n\t * Delete all contents including directory (equivalent to \"rm -r\")\n\t * @param $file string the full path of the directory to be removed\n\t * @return boolean true iff success, otherwise false\n\t */\n\tfunction rmtree($file) {\n\t\tif (file_exists($file)) {\n\t\t\tif (is_dir($file)) {\n\t\t\t\t$handle = opendir($file);\n\t\t\t\twhile (($filename = readdir($handle)) !== false) {\n\t\t\t\t\tif ($filename != '.' && $filename != '..') {\n\t\t\t\t\t\tif (!$this->rmtree($file . '/' . $filename)) return false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclosedir($handle);\n\t\t\t\tif (!rmdir($file)) return false;\n\n\t\t\t} else {\n\t\t\t\tif (!unlink($file)) return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Create a new directory, including all intermediate directories if required (equivalent to \"mkdir -p\")\n\t * @param $dirPath string the full path of the directory to be created\n\t * @param $perms string the permissions level of the directory (optional)\n\t * @return boolean returns true if successful\n\t */\n\tfunction mkdirtree($dirPath, $perms = null) {\n\t\tif (!file_exists($dirPath)) {\n\t\t\t//Avoid infinite recursion when file_exists reports false for root directory\n\t\t\tif ($dirPath == dirname($dirPath)) {\n\t\t\t\tfatalError('There are no readable files in this directory tree. Are safe mode or open_basedir active?');\n\t\t\t\treturn false;\n\t\t\t} else if ($this->mkdirtree(dirname($dirPath), $perms)) {\n\t\t\t\treturn $this->mkdir($dirPath, $perms);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Check if a file path is valid;\n\t * @param $filePath string the file/directory to check\n\t * @param $type string (file|dir) the type of path\n\t */\n\tfunction fileExists($filePath, $type = 'file') {\n\t\tswitch ($type) {\n\t\t\tcase 'file':\n\t\t\t\treturn file_exists($filePath);\n\t\t\tcase 'dir':\n\t\t\t\treturn file_exists($filePath) && is_dir($filePath);\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a file type, based on generic categories defined above\n\t * @param $type String\n\t * @return string (Enuemrated DOCUMENT_TYPEs)\n\t */\n\tfunction getDocumentType($type) {\n\t\tif ($this->getImageExtension($type))\n\t\t\treturn DOCUMENT_TYPE_IMAGE;\n\n\t\tswitch ($type) {\n\t\t\tcase 'application/pdf':\n\t\t\tcase 'application/x-pdf':\n\t\t\tcase 'text/pdf':\n\t\t\tcase 'text/x-pdf':\n\t\t\t\treturn DOCUMENT_TYPE_PDF;\n\t\t\tcase 'application/msword':\n\t\t\tcase 'application/word':\n\t\t\t\treturn DOCUMENT_TYPE_WORD;\n\t\t\tcase 'application/excel':\n\t\t\t\treturn DOCUMENT_TYPE_EXCEL;\n\t\t\tcase 'text/html':\n\t\t\t\treturn DOCUMENT_TYPE_HTML;\n\t\t\tcase 'application/zip':\n\t\t\tcase 'application/x-zip':\n\t\t\tcase 'application/x-zip-compressed':\n\t\t\tcase 'application/x-compress':\n\t\t\tcase 'application/x-compressed':\n\t\t\tcase 'multipart/x-zip':\n\t\t\t\treturn DOCUMENT_TYPE_ZIP;\n\t\t\tcase 'application/epub':\n\t\t\tcase 'application/epub+zip':\n\t\t\t\treturn DOCUMENT_TYPE_EPUB;\n\t\t\tdefault:\n\t\t\t\treturn DOCUMENT_TYPE_DEFAULT;\n\t\t}\n\t}\n\n\t/**\n\t * Returns file extension associated with the given document type,\n\t * or false if the type does not belong to a recognized document type.\n\t * @param $type string\n\t */\n\tfunction getDocumentExtension($type) {\n\t\tswitch ($type) {\n\t\t\tcase 'application/pdf':\n\t\t\t\treturn '.pdf';\n\t\t\tcase 'application/word':\n\t\t\t\treturn '.doc';\n\t\t\tcase 'text/css':\n\t\t\t\treturn '.css';\n\t\t\tcase 'text/html':\n\t\t\t\treturn '.html';\n\t\t\tcase 'application/epub+zip':\n\t\t\t\treturn '.epub';\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns file extension associated with the given image type,\n\t * or false if the type does not belong to a recognized image type.\n\t * @param $type string\n\t */\n\tfunction getImageExtension($type) {\n\t\tswitch ($type) {\n\t\t\tcase 'image/gif':\n\t\t\t\treturn '.gif';\n\t\t\tcase 'image/jpeg':\n\t\t\tcase 'image/pjpeg':\n\t\t\t\treturn '.jpg';\n\t\t\tcase 'image/png':\n\t\t\tcase 'image/x-png':\n\t\t\t\treturn '.png';\n\t\t\tcase 'image/vnd.microsoft.icon':\n\t\t\tcase 'image/x-icon':\n\t\t\tcase 'image/x-ico':\n\t\t\tcase 'image/ico':\n\t\t\t\treturn '.ico';\n\t\t\tcase 'image/svg+xml':\n\t\t\tcase 'image/svg':\n\t\t\t\treturn '.svg';\n\t\t\tcase 'application/x-shockwave-flash':\n\t\t\t\treturn '.swf';\n\t\t\tcase 'video/x-flv':\n\t\t\tcase 'application/x-flash-video':\n\t\t\tcase 'flv-application/octet-stream':\n\t\t\t\treturn '.flv';\n\t\t\tcase 'audio/mpeg':\n\t\t\t\treturn '.mp3';\n\t\t\tcase 'audio/x-aiff':\n\t\t\t\treturn '.aiff';\n\t\t\tcase 'audio/x-wav':\n\t\t\t\treturn '.wav';\n\t\t\tcase 'video/mpeg':\n\t\t\t\treturn '.mpg';\n\t\t\tcase 'video/quicktime':\n\t\t\t\treturn '.mov';\n\t\t\tcase 'video/mp4':\n\t\t\t\treturn '.mp4';\n\t\t\tcase 'text/javascript':\n\t\t\t\treturn '.js';\n\t\t\tcase 'image/webp':\n\t\t\t\treturn '.webp';\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Parse file extension from file name.\n\t * @param string a valid file name\n\t * @return string extension\n\t */\n\tfunction getExtension($fileName) {\n\t\t$extension = '';\n\t\t$fileParts = explode('.', $fileName);\n\t\tif (is_array($fileParts)) {\n\t\t\t$extension = $fileParts[count($fileParts) - 1];\n\t\t}\n\t\treturn $extension;\n\t}\n\n\t/**\n\t * Truncate a filename to fit in the specified length.\n\t */\n\tfunction truncateFileName($fileName, $length = 127) {\n\t\tif (PKPString::strlen($fileName) <= $length) return $fileName;\n\t\t$ext = $this->getExtension($fileName);\n\t\t$truncated = PKPString::substr($fileName, 0, $length - 1 - PKPString::strlen($ext)) . '.' . $ext;\n\t\treturn PKPString::substr($truncated, 0, $length);\n\t}\n\n\t/**\n\t * Return pretty file size string (in B, KB, MB, or GB units).\n\t * @param $size int file size in bytes\n\t * @return string\n\t */\n\tfunction getNiceFileSize($size) {\n\t\t$niceFileSizeUnits = array('B', 'KB', 'MB', 'GB');\n\t\tfor($i = 0; $i < 4 && $size > 1024; $i++) {\n\t\t\t$size >>= 10;\n\t\t}\n\t\treturn $size . $niceFileSizeUnits[$i];\n\t}\n\n\t/**\n\t * Set file/directory mode based on the 'umask' config setting.\n\t * @param $path string\n\t * @param $mask int\n\t * @return boolean\n\t */\n\tfunction setMode($path, $mask) {\n\t\t$umask = Config::getVar('files', 'umask');\n\t\tif (!$umask)\n\t\t\treturn true;\n\t\treturn chmod($path, $mask & ~$umask);\n\t}\n\n\t/**\n\t * Parse the file extension from a filename/path.\n\t * @param $fileName string\n\t * @return string\n\t */\n\tfunction parseFileExtension($fileName) {\n\t\t$fileParts = explode('.', $fileName);\n\t\tif (is_array($fileParts) && count($fileParts) > 1) {\n\t\t\t$fileExtension = $fileParts[count($fileParts) - 1];\n\t\t}\n\n\t\t// FIXME Check for evil\n\t\tif (!isset($fileExtension) || stristr($fileExtension, 'php') || strlen($fileExtension) > 6 || !preg_match('/^\\w+$/', $fileExtension)) {\n\t\t\t$fileExtension = 'txt';\n\t\t}\n\n\t\t// consider .tar.gz extension\n\t\tif (strtolower(substr($fileName, -7)) == '.tar.gz') {\n\t\t\t$fileExtension = substr($fileName, -6);\n\t\t}\n\n\t\treturn $fileExtension;\n\t}\n\n\t/**\n\t * Decompress passed gziped file.\n\t * @param $filePath string\n\t * @return string The file path that was created.\n\t */\n\tfunction decompressFile($filePath) {\n\t\treturn $this->_executeGzip($filePath, true);\n\t}\n\n\t/**\n\t * Compress passed file.\n\t * @param $filePath string The file to be compressed.\n\t * @return string The file path that was created.\n\t */\n\tfunction compressFile($filePath) {\n\t\treturn $this->_executeGzip($filePath, false);\n\t}\n\n\n\t//\n\t// Private helper methods.\n\t//\n\t/**\n\t * Execute gzip to compress or extract files.\n\t * @param $filePath string file to be compressed or uncompressed.\n\t * @param $decompress boolean optional Set true if the passed file\n\t * needs to be decompressed.\n\t * @return string The file path that was created with the operation\n\t */\n\tprivate function _executeGzip($filePath, $decompress = false) {\n\t\tPKPLocale::requireComponents(LOCALE_COMPONENT_PKP_ADMIN);\n\t\t$gzipPath = Config::getVar('cli', 'gzip');\n\t\tif (!is_executable($gzipPath)) {\n\t\t\tthrow new Exception(__('admin.error.executingUtil', array('utilPath' => $gzipPath, 'utilVar' => 'gzip')));\n\t\t}\n\t\t$gzipCmd = escapeshellarg($gzipPath);\n\t\tif ($decompress) $gzipCmd .= ' -d';\n\t\t// Make sure any output message will mention the file path.\n\t\t$output = array($filePath);\n\t\t$returnValue = 0;\n\t\t$gzipCmd .= ' ' . escapeshellarg($filePath);\n\t\tif (!Core::isWindows()) {\n\t\t\t// Get the output, redirecting stderr to stdout.\n\t\t\t$gzipCmd .= ' 2>&1';\n\t\t}\n\t\texec($gzipCmd, $output, $returnValue);\n\t\tif ($returnValue > 0) {\n\t\t\tthrow new Exception(__('admin.error.utilExecutionProblem', array('utilPath' => $gzipPath, 'output' => implode(PHP_EOL, $output))));\n\t\t}\n\t\tif ($decompress) {\n\t\t\treturn substr($filePath, 0, -3);\n\t\t} else {\n\t\t\treturn $filePath . '.gz';\n\t\t}\n\t}\n}\n</Code>\n\nFile: classes/services/PKPFileService.inc.php\nContent: \n<Code>\n<?php\n/**\n * @file classes/services/PKPFileService.php\n *\n * Copyright (c) 2014-2021 Simon Fraser University\n * Copyright (c) 2000-2021 John Willinsky\n * Distributed under the GNU GPL v3. For full terms see the file docs/COPYING.\n *\n * @class PKPFileService\n * @ingroup services\n *\n * @brief Helper class that encapsulates business logic for publications\n */\n\nnamespace PKP\\Services;\n\nuse \\Application;\nuse \\Config;\nuse \\Exception;\nuse \\HookRegistry;\nuse League\\Flysystem\\Adapter\\Local;\nuse League\\Flysystem\\Filesystem;\nuse Illuminate\\Database\\Capsule\\Manager as Capsule;\n\nclass PKPFileService {\n\n\t/** @var Filesystem */\n\tpublic $fs;\n\n\t/**\n\t * Initialize and configure flysystem\n\t */\n\tpublic function __construct() {\n\t\t$umask = Config::getVar('files', 'umask', 0022);\n\t\t$adapter = new Local(\n\t\t\tConfig::getVar('files', 'files_dir'),\n\t\t\tLOCK_EX,\n\t\t\tLocal::DISALLOW_LINKS,\n\t\t\t[\n\t\t\t\t'file' => [\n\t\t\t\t\t'public' => FILE_MODE_MASK & ~$umask,\n\t\t\t\t\t'private' => FILE_MODE_MASK  & ~$umask,\n\t\t\t\t],\n\t\t\t\t'dir' => [\n\t\t\t\t\t'public' => DIRECTORY_MODE_MASK & ~$umask,\n\t\t\t\t\t'private' => DIRECTORY_MODE_MASK & ~$umask,\n\t\t\t\t]\n\t\t\t]\n\t\t);\n\n\t\tHookRegistry::call('File::adapter', [&$adapter, $this]);\n\n\t\t$this->fs = new Filesystem($adapter);\n\t}\n\n\t/**\n\t * Get a file by its id\n\t *\n\t * @param int $id\n\t * @return stdObject\n\t */\n\tpublic function get($id) {\n\t\t$file = Capsule::table('files')\n\t\t\t->where('file_id', '=', $id)\n\t\t\t->select(['file_id as id', 'path', 'mimetype'])\n\t\t\t->first();\n\t\treturn $file;\n\t}\n\n\t/**\n\t * Add a file\n\t *\n\t * @param string $from absolute path to file\n\t * @param string $to relative path in file dir\n\t * @return int file id\n\t */\n\tpublic function add($from, $to) {\n\t\t$stream = fopen($from, 'r+');\n\t\tif (!$stream) {\n\t\t\tthrow new Exception(\"Unable to copy $from to $to.\");\n\t\t}\n\t\tif (!$this->fs->writeStream($to, $stream)) {\n\t\t\tthrow new Exception(\"Unable to write file at $to.\");\n\t\t}\n\t\tif (is_resource($stream)) {\n\t\t\tfclose($stream);\n\t\t}\n\t\t$mimetype = $this->fs->getMimetype($to);\n\n\t\t// Check and override ambiguous mime types based on file extension\n\t\tif ($extension = pathinfo($to, PATHINFO_EXTENSION)) {\n\t\t\t$checkAmbiguous = strtolower($extension . ':' . $mimetype);\n\t\t\tif (array_key_exists($checkAmbiguous, $extensionsMap = \\PKPString::getAmbiguousExtensionsMap())) {\n\t\t\t\t$mimetype = $extensionsMap[$checkAmbiguous];\n\t\t\t}\n\t\t}\n\n\t\treturn Capsule::table('files')->insertGetId([\n\t\t\t'path' => $to,\n\t\t\t'mimetype' => $mimetype,\n\t\t], 'file_id');\n\t}\n\n\t/**\n\t * Delete an uploaded file\n\t *\n\t * @param int $id\n\t * @return File\n\t */\n\tpublic function delete($id) {\n\t\t$file = $this->get($id);\n\t\tif (!$file) {\n\t\t\tthrow new Exception(\"Unable to locate file $id.\");\n\t\t}\n\t\t$path = $file->path;\n\t\tif ($this->fs->has($path) && !$this->fs->delete($path)) {\n\t\t\tthrow new Exception(\"Unable to delete file $id at $path.\");\n\t\t}\n\t\tCapsule::table('files')\n\t\t\t->where('file_id', '=', $file->id)\n\t\t\t->delete();\n\t}\n\n\t/**\n\t * Download a file\n\t *\n\t * This method sends a HTTP response and ends the request handling.\n\t * No code will run after this method is called.\n\t *\n\t * @param string|int $pathOrFileId The path to the file or file ID\n\t * @param string $filename Filename to give to the downloaded file\n\t * @param boolean $inline Whether to stream the file to the browser\n\t */\n\tpublic function download($pathOrFileId, $filename, $inline = false) {\n\n\t\t$dispatcher = Application::get()->getRequest()->getDispatcher();\n\n\t\tif (is_int($pathOrFileId)) {\n\t\t\t// Is the file ID\n\t\t\t$fileId = $pathOrFileId;\n\t\t\t$file = $this->get($fileId);\n\t\t\tif (!$file) $dispatcher->handle404();\n\t\t\t$path = $file->path;\n\t\t} else {\n\t\t\t// Is the path to the file; compatibility fix, see pkp/pkp-lib#6663\n\t\t\t$path = $pathOrFileId;\n\t\t}\n\n\t\tif (!$this->fs->has($path)) {\n\t\t\t$dispatcher->handle404();\n\t\t}\n\n\t\tif (HookRegistry::call('File::download', [$path, &$filename, $inline])) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Stream the file to the end user.\n\t\t$mimetype = $file->mimetype ?? $this->fs->getMimetype($path) ?? 'application/octet-stream';\n\t\t$filesize = $this->fs->getSize($path);\n\t\t$encodedFilename = urlencode($filename);\n\t\theader(\"Content-Type: $mimetype\");\n\t\theader(\"Content-Length: $filesize\");\n\t\theader('Accept-Ranges: none');\n\t\theader('Content-Disposition: ' . ($inline ? 'inline' : 'attachment') . \";filename=\\\"$encodedFilename\\\";filename*=UTF-8''$encodedFilename\");\n\t\theader('Cache-Control: private'); // Workarounds for IE weirdness\n\t\theader('Pragma: public');\n\n\t\tfpassthru($this->fs->readStream($path));\n\t\texit();\n\t}\n\n\t/**\n\t * Convert a filename into a consistent format with the correct extension\n\t *\n\t * @param string $path Path to the file\n\t * @param string $filename Source filename to sanitize\n\t * @return string\n\t */\n\tpublic function formatFilename($path, $filename) {\n\t\t$extension = strtolower(pathinfo($path, PATHINFO_EXTENSION));\n\t\t$newFilename = $filename;\n\t\tif (!empty($extension) && substr($newFilename, (strlen($extension) * -1)) != $extension) {\n\t\t\t$newFilename .= '.' . $extension;\n\t\t}\n\n\t\tHookRegistry::call('File::formatFilename', [&$newFilename, $path, $filename]);\n\n\t\treturn $newFilename;\n\t}\n\n\t/**\n\t * Get document type based on the mimetype\n\t *\n\t * @param string $mimetype\n\t * @return string One of the DOCUMENT_TYPE_ constants\n\t */\n\tpublic function getDocumentType($mimetype) {\n\t\tswitch ($mimetype) {\n\t\t\tcase 'application/pdf':\n\t\t\tcase 'application/x-pdf':\n\t\t\tcase 'text/pdf':\n\t\t\tcase 'text/x-pdf':\n\t\t\t\treturn DOCUMENT_TYPE_PDF;\n\t\t\tcase 'application/msword':\n\t\t\tcase 'application/word':\n\t\t\tcase 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n\t\t\t\treturn DOCUMENT_TYPE_WORD;\n\t\t\tcase 'application/excel':\n\t\t\tcase 'application/vnd.ms-excel':\n\t\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':\n\t\t\t\treturn DOCUMENT_TYPE_EXCEL;\n\t\t\tcase 'text/html':\n\t\t\t\treturn DOCUMENT_TYPE_HTML;\n\t\t\tcase 'application/zip':\n\t\t\tcase 'application/x-zip':\n\t\t\tcase 'application/x-zip-compressed':\n\t\t\tcase 'application/x-compress':\n\t\t\tcase 'application/x-compressed':\n\t\t\tcase 'multipart/x-zip':\n\t\t\t\treturn DOCUMENT_TYPE_ZIP;\n\t\t\tcase 'application/epub':\n\t\t\tcase 'application/epub+zip':\n\t\t\t\treturn DOCUMENT_TYPE_EPUB;\n\t\t\tcase 'image/gif':\n\t\t\tcase 'image/jpeg':\n\t\t\tcase 'image/pjpeg':\n\t\t\tcase 'image/png':\n\t\t\tcase 'image/x-png':\n\t\t\tcase 'image/vnd.microsoft.icon':\n\t\t\tcase 'image/x-icon':\n\t\t\tcase 'image/x-ico':\n\t\t\tcase 'image/ico':\n\t\t\tcase 'image/svg+xml':\n\t\t\tcase 'image/svg':\n\t\t\t\treturn DOCUMENT_TYPE_IMAGE;\n\t\t\tcase 'application/x-shockwave-flash':\n\t\t\tcase 'video/x-flv':\n\t\t\tcase 'application/x-flash-video':\n\t\t\tcase 'flv-application/octet-stream':\n\t\t\tcase 'video/mpeg':\n\t\t\tcase 'video/quicktime':\n\t\t\tcase 'video/mp4':\n\t\t\t\treturn DOCUMENT_TYPE_VIDEO;\n\t\t\tcase 'audio/mpeg':\n\t\t\tcase 'audio/x-aiff':\n\t\t\tcase 'audio/x-wav':\n\t\t\t\treturn DOCUMENT_TYPE_AUDIO;\n\t\t\tdefault:\n\t\t\t\treturn DOCUMENT_TYPE_DEFAULT;\n\t\t}\n\t}\n\n\t/**\n\t * Get a pretty file size string\n\t *\n\t * Examples: 82B, 12KB, 2MB, 2GB\n\t *\n\t * @param integer $size File size in bytes\n\t * @return string\n\t */\n\tfunction getNiceFileSize($size) {\n\t\t$niceFileSizeUnits = array('B', 'KB', 'MB', 'GB');\n\t\tfor($i = 0; $i < 4 && $size > 1024; $i++) {\n\t\t\t$size >>= 10;\n\t\t}\n\t\treturn $size . $niceFileSizeUnits[$i];\n\t}\n}\n</Code>"
                }
            ],
            "url": "https://github.com/pkp/pkp-lib/commit/44d8bde60eb2575fd4087b76540aec9b49389e23",
            "description": "Cross-site Scripting in GitHub repository pkp/pkp-lib prior to 3.3.0-16.\n\n",
            "date": "2023-11-07",
            "github_description": "Describe the bug\nSVGs are hard to make safe (https://www.slideshare.net/x00mario/the-image-that-called-me). Disallow them in core; if there is sufficient demand, they might be allowed via a plugin that includes a sanitization dependency, but I don't trust that approach enough for core.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "llm_raw_output": "{\n  \"CWE_IDS\": [],\n  \"severity\": null\n}",
            "llm_output": {
                "CWE_IDS": [],
                "severity": null
            },
            "ground_truth_CVE": "CVE-2023-5901",
            "ground_truth_CWEs": [
                "CWE-79"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": false,
            "cwe_evaluation": "EMPTY_PR"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Avo is an open source ruby on rails admin panel creation framework. The polymorphic field type stores the classes to operate on when updating a record with user input, and does not validate them in the back end. This can lead to unexpected behavior, remote code execution, or application crashes when viewing a manipulated record. This issue has been addressed in commit `ec117882d` which is expected to be included in subsequent releases. Users are advised to limit access to untrusted users until a new release is made.\nFile: lib/avo/fields/belongs_to_field.rb\nContent: \n<Code>\nmodule Avo\n  module Fields\n    # The field can be in multiple scenarios where it needs different types of data and displays the state differently.\n    # For example the non-polymorphic, non-searchable variant is the easiest to support. You only need to populate a simple select with the ID of the associated record and the list of records.\n    # For the searchable polymorphic variant you need to provide the type of the association (Post, Project, Team), the label of the associated record (\"Cool post title\") and the ID of that record.\n    # Furthermore, the way Avo works, it needs to do some queries on the back-end to fetch the required information.\n    #\n    # Field scenarios:\n    # 1. Create new record\n    #   List of records\n    # 2. Create new record as association\n    #   List of records, the ID\n    # 3. Create new searchable record\n    #   Nothing really. The records will be fetched from the search API\n    # 4. Create new searchable record as association\n    #   The associated record label and ID. The records will be fetched from the search API\n    # 5. Create new polymorphic record\n    #   Type & ID\n    # 6. Create new polymorphic record as association\n    #   Type, list of records, and ID\n    # 7. Create new polymorphic searchable record\n    #   Type, Label and ID\n    # 8. Create new polymorphic searchable record as association\n    #   Type, Label and ID\n    # 9. Edit a record\n    #   List of records & ID\n    # 10. Edit a record as searchable\n    #   Label and ID\n    # 11. Edit a record as an association\n    #   List and ID\n    # 12. Edit a record as an searchable association\n    #   Label and ID\n    # 13. Edit a polymorphic record\n    #   Type, List of records & ID\n    # 14. Edit a polymorphic record as searchable\n    #   Type, Label and ID\n    # 15. Edit a polymorphic record as an association\n    #   Type, List and ID\n    # 16. Edit a polymorphic record as an searchable association\n    #   Type, Label and ID\n    # Also all of the above with a namespaced model `Course/Link`\n\n    # Variants\n    # 1. Select belongs to\n    # 2. Searchable belongs to\n    # 3. Select Polymorphic belongs to\n    # 4. Searchable Polymorphic belongs to\n\n    # Requirements\n    # - list\n    # - ID\n    # - label\n    # - Type\n    # - foreign_key\n    # - foreign_key for poly type\n    # - foreign_key for poly id\n    # - is_disabled?\n\n    class BelongsToField < BaseField\n      include Avo::Fields::Concerns::UseResource\n\n      attr_accessor :target\n\n      attr_reader :polymorphic_as\n      attr_reader :relation_method\n      attr_reader :types # for Polymorphic associations\n      attr_reader :allow_via_detaching\n      attr_reader :attach_scope\n      attr_reader :polymorphic_help\n\n      def initialize(id, **args, &block)\n        args[:placeholder] ||= I18n.t(\"avo.choose_an_option\")\n\n        super(id, **args, &block)\n\n        @searchable = args[:searchable] == true\n        @polymorphic_as = args[:polymorphic_as]\n        @types = args[:types]\n        @relation_method = id.to_s.parameterize.underscore\n        @allow_via_detaching = args[:allow_via_detaching] == true\n        @attach_scope = args[:attach_scope]\n        @polymorphic_help = args[:polymorphic_help]\n        @target = args[:target]\n        @use_resource = args[:use_resource] || nil\n      end\n\n      def searchable\n        @searchable && ::Avo::App.license.has_with_trial(:searchable_associations)\n      end\n\n      def value\n        if is_polymorphic?\n          # Get the value from the pre-filled assoociation record\n          super(polymorphic_as)\n        else\n          # Get the value from the pre-filled assoociation record\n          super(relation_method)\n        end\n      end\n\n      # The value\n      def field_value\n        value.send(database_value)\n      rescue\n        nil\n      end\n\n      # What the user sees in the text field\n      def field_label\n        value.send(target_resource.class.title)\n      rescue\n        nil\n      end\n\n      def options\n        values_for_type\n      end\n\n      def values_for_type(model = nil)\n        resource = target_resource\n        resource = App.get_resource_by_model_name model if model.present?\n\n        query = resource.class.query_scope\n\n        if attach_scope.present?\n          query = Avo::Hosts::AssociationScopeHost.new(block: attach_scope, query: query, parent: get_model).handle\n        end\n\n        query.all.map do |model|\n          [model.send(resource.class.title), model.id]\n        end\n      end\n\n      def database_value\n        target_resource.id\n      rescue\n        nil\n      end\n\n      def type_input_foreign_key\n        if is_polymorphic?\n          \"#{foreign_key}_type\"\n        end\n      end\n\n      def id_input_foreign_key\n        if is_polymorphic?\n          \"#{foreign_key}_id\"\n        else\n          foreign_key\n        end\n      end\n\n      def is_polymorphic?\n        polymorphic_as.present?\n      rescue\n        false\n      end\n\n      def foreign_key\n        return polymorphic_as if polymorphic_as.present?\n\n        if @model.present?\n          get_model_class(@model).reflections[@relation_method].foreign_key\n        elsif @resource.present? && @resource.model_class.reflections[@relation_method].present?\n          @resource.model_class.reflections[@relation_method].foreign_key\n        end\n      end\n\n      def reflection_for_key(key)\n        get_model_class(get_model).reflections[key.to_s]\n      rescue\n        nil\n      end\n\n      # Get the model reflection instance\n      def reflection\n        reflection_for_key(id)\n      rescue\n        nil\n      end\n\n      def relation_model_class\n        @resource.model_class\n      end\n\n      def label\n        value.send(target_resource.class.title)\n      end\n\n      def to_permitted_param\n        if polymorphic_as.present?\n          return [\"#{polymorphic_as}_type\".to_sym, \"#{polymorphic_as}_id\".to_sym]\n        end\n\n        foreign_key.to_sym\n      end\n\n      def fill_field(model, key, value, params)\n        return model unless model.methods.include? key.to_sym\n\n        if polymorphic_as.present?\n          model.send(\"#{polymorphic_as}_type=\", params[\"#{polymorphic_as}_type\"])\n\n          # If the type is blank, reset the id too.\n          if params[\"#{polymorphic_as}_type\"].blank?\n            model.send(\"#{polymorphic_as}_id=\", nil)\n          else\n            model.send(\"#{polymorphic_as}_id=\", params[\"#{polymorphic_as}_id\"])\n          end\n        else\n          model.send(\"#{key}=\", value)\n        end\n\n        model\n      end\n\n      def database_id\n        # If the field is a polymorphic value, return the polymorphic_type as key and pre-fill the _id in fill_field.\n        return \"#{polymorphic_as}_type\" if polymorphic_as.present?\n\n        foreign_key\n      rescue\n        id\n      end\n\n      def target_resource\n        return use_resource if use_resource.present?\n\n        if is_polymorphic?\n          if value.present?\n            return App.get_resource_by_model_name(value.class)\n          else\n            return nil\n          end\n        end\n\n        reflection_key = polymorphic_as || id\n\n        if @model._reflections[reflection_key.to_s].klass.present?\n          App.get_resource_by_model_name @model._reflections[reflection_key.to_s].klass.to_s\n        elsif @model._reflections[reflection_key.to_s].options[:class_name].present?\n          App.get_resource_by_model_name @model._reflections[reflection_key.to_s].options[:class_name]\n        else\n          App.get_resource_by_name reflection_key.to_s\n        end\n      end\n\n      def get_model\n        return @model if @model.present?\n\n        @resource.model\n      rescue\n        nil\n      end\n\n      def name\n        return polymorphic_as.to_s.humanize if polymorphic_as.present? && view == :index\n\n        super\n      end\n\n      private\n\n      def get_model_class(model)\n        if model.instance_of?(Class)\n          model\n        else\n          model.class\n        end\n      end\n    end\n  end\nend\n</Code>"
                }
            ],
            "url": "https://github.com/avo-hq/avo/commit/ec117882ddb1b519481bdd046dc3cfa4474e6e17",
            "description": "Avo is an open source ruby on rails admin panel creation framework. The polymorphic field type stores the classes to operate on when updating a record with user input, and does not validate them in the back end. This can lead to unexpected behavior, remote code execution, or application crashes when viewing a manipulated record. This issue has been addressed in commit `ec117882d` which is expected to be included in subsequent releases. Users are advised to limit access to untrusted users until a new release is made.",
            "date": "2023-06-05",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n    \"CWE_IDS\": [\"CWE-470\"],\n    \"severity\": \"high\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-470"
                ],
                "severity": "HIGH"
            },
            "ground_truth_CVE": "CVE-2023-34102",
            "ground_truth_CWEs": [
                "CWE-470"
            ],
            "ground_truth_severities": {
                "V3.1": "HIGH"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": true,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: A vulnerability, which was classified as critical, has been found in ATM Consulting dolibarr_module_quicksupplierprice up to 1.1.6. Affected by this issue is the function upatePrice of the file script/interface.php. The manipulation leads to sql injection. The attack may be launched remotely. Upgrading to version 1.1.7 is able to address this issue. The patch is identified as ccad1e4282b0e393a32fcc852e82ec0e0af5446f. It is recommended to upgrade the affected component. VDB-223382 is the identifier assigned to this vulnerability.\nFile: core/modules/modquicksupplierprice.class.php\nContent: \n<Code>\n<?php\n/* Copyright (C) 2003      Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2012 Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2012 Regis Houssin        <regis.houssin@capnetworks.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * \t\\defgroup   quicksupplierprice     Module quicksupplierprice\n *  \\brief      Example of a module descriptor.\n *\t\t\t\tSuch a file must be copied into htdocs/quicksupplierprice/core/modules directory.\n *  \\file       htdocs/quicksupplierprice/core/modules/modquicksupplierprice.class.php\n *  \\ingroup    quicksupplierprice\n *  \\brief      Description and activation file for module quicksupplierprice\n */\ninclude_once DOL_DOCUMENT_ROOT .'/core/modules/DolibarrModules.class.php';\n\n\n/**\n *  Description and activation class for module quicksupplierprice\n */\nclass modquicksupplierprice extends DolibarrModules\n{\n\t/**\n\t *   Constructor. Define names, constants, directories, boxes, permissions\n\t *\n\t *   @param      DoliDB\t\t$db      Database handler\n\t */\n\tfunction __construct($db)\n\t{\n        global $langs,$conf;\n\n        $this->db = $db;\n\n\t\t// Id for module (must be unique).\n\t\t// Use here a free id (See in Home -> System information -> Dolibarr for list of used modules id).\n\t\t$this->numero = 104750; // 104000 to 104999 for ATM CONSULTING\n\t\t// Key text used to identify module (for permissions, menus, etc...)\n\t\t$this->rights_class = 'quicksupplierprice';\n\n\t\t// Family can be 'crm','financial','hr','projects','products','ecm','technic','other'\n\t\t// It is used to group modules in module setup page\n\t\t$this->family = \"crm\";\n\t\t// Module label (no space allowed), used if translation string 'ModuleXXXName' not found (where XXX is value of numeric property 'numero' of module)\n\t\t$this->name = preg_replace('/^mod/i','',get_class($this));\n\t\t// Module description, used if translation string 'ModuleXXXDesc' not found (where XXX is value of numeric property 'numero' of module)\n\t\t$this->description = \"Description of module quicksupplierprice\";\n\t\t// Possible values for version are: 'development', 'experimental', 'dolibarr' or version\n\t\t$this->version = '1.1.6';\n\t\t// Key used in llx_const table to save module status enabled/disabled (where MYMODULE is value of property name of module in uppercase)\n\t\t$this->const_name = 'MAIN_MODULE_'.strtoupper($this->name);\n\t\t// Where to store the module in setup page (0=common,1=interface,2=others,3=very specific)\n\t\t$this->special = 0;\n\t\t// Name of image file used for this module.\n\t\t// If file is in theme/yourtheme/img directory under name object_pictovalue.png, use this->picto='pictovalue'\n\t\t// If file is in module/img directory under name object_pictovalue.png, use this->picto='pictovalue@module'\n\t\t$this->picto='quicksupplierprice@quicksupplierprice';\n\n\t\t// Defined all module parts (triggers, login, substitutions, menus, css, etc...)\n\t\t// for default path (eg: /quicksupplierprice/core/xxxxx) (0=disable, 1=enable)\n\t\t// for specific path of parts (eg: /quicksupplierprice/core/modules/barcode)\n\t\t// for specific css file (eg: /quicksupplierprice/css/quicksupplierprice.css.php)\n\t\t//$this->module_parts = array(\n\t\t//                        \t'triggers' => 0,                                 \t// Set this to 1 if module has its own trigger directory (core/triggers)\n\t\t//\t\t\t\t\t\t\t'login' => 0,                                    \t// Set this to 1 if module has its own login method directory (core/login)\n\t\t//\t\t\t\t\t\t\t'substitutions' => 0,                            \t// Set this to 1 if module has its own substitution function file (core/substitutions)\n\t\t//\t\t\t\t\t\t\t'menus' => 0,                                    \t// Set this to 1 if module has its own menus handler directory (core/menus)\n\t\t//\t\t\t\t\t\t\t'theme' => 0,                                    \t// Set this to 1 if module has its own theme directory (theme)\n\t\t//                        \t'tpl' => 0,                                      \t// Set this to 1 if module overwrite template dir (core/tpl)\n\t\t//\t\t\t\t\t\t\t'barcode' => 0,                                  \t// Set this to 1 if module has its own barcode directory (core/modules/barcode)\n\t\t//\t\t\t\t\t\t\t'models' => 0,                                   \t// Set this to 1 if module has its own models directory (core/modules/xxx)\n\t\t//\t\t\t\t\t\t\t'css' => array('/quicksupplierprice/css/quicksupplierprice.css.php'),\t// Set this to relative path of css file if module has its own css file\n\t \t//\t\t\t\t\t\t\t'js' => array('/quicksupplierprice/js/quicksupplierprice.js'),          // Set this to relative path of js file if module must load a js on all pages\n\t\t//\t\t\t\t\t\t\t'hooks' => array('hookcontext1','hookcontext2')  \t// Set here all hooks context managed by module\n\t\t//\t\t\t\t\t\t\t'dir' => array('output' => 'othermodulename'),      // To force the default directories names\n\t\t//\t\t\t\t\t\t\t'workflow' => array('WORKFLOW_MODULE1_YOURACTIONTYPE_MODULE2'=>array('enabled'=>'! empty($conf->module1->enabled) && ! empty($conf->module2->enabled)', 'picto'=>'yourpicto@quicksupplierprice')) // Set here all workflow context managed by module\n\t\t//                        );\n\t\t$this->module_parts = array(\n            'hooks'=>array('ordersuppliercard','invoicesuppliercard')\n        );\n\n\t\t// Data directories to create when module is enabled.\n\t\t// Example: this->dirs = array(\"/quicksupplierprice/temp\");\n\t\t$this->dirs = array();\n\n\t\t// Config pages. Put here list of php page, stored into quicksupplierprice/admin directory, to use to setup module.\n\t\t$this->config_page_url = array(\"quicksupplierprice_setup.php@quicksupplierprice\");\n\n\t\t// Dependencies\n\t\t$this->hidden = false;\t\t\t// A condition to hide module\n\t\t$this->depends = array();\t\t// List of modules id that must be enabled if this module is enabled\n\t\t$this->requiredby = array();\t// List of modules id to disable if this one is disabled\n\t\t$this->conflictwith = array();\t// List of modules id this module is in conflict with\n\t\t$this->phpmin = array(5,0);\t\t\t\t\t// Minimum version of PHP required by module\n\t\t$this->need_dolibarr_version = array(3,0);\t// Minimum version of Dolibarr required by module\n\t\t$this->langfiles = array(\"quicksupplierprice@quicksupplierprice\");\n\n\t\t// Constants\n\t\t// List of particular constants to add when module is enabled (key, 'chaine', value, desc, visible, 'current' or 'allentities', deleteonunactive)\n\t\t// Example: $this->const=array(0=>array('MYMODULE_MYNEWCONST1','chaine','myvalue','This is a constant to add',1),\n\t\t//                             1=>array('MYMODULE_MYNEWCONST2','chaine','myvalue','This is another constant to add',0, 'current', 1)\n\t\t// );\n\t\t$this->const = array(\n\t\t    0=>array('QSPBESTPRICE','chaine',1,'search for lower price',1, 'current', 1)\n\t\t);\n\n\t\t// Array to add new pages in new tabs\n\t\t// Example: $this->tabs = array('objecttype:+tabname1:Title1:mylangfile@quicksupplierprice:$user->rights->quicksupplierprice->read:/quicksupplierprice/mynewtab1.php?id=__ID__',  \t// To add a new tab identified by code tabname1\n        //                              'objecttype:+tabname2:Title2:mylangfile@quicksupplierprice:$user->rights->othermodule->read:/quicksupplierprice/mynewtab2.php?id=__ID__',  \t// To add another new tab identified by code tabname2\n        //                              'objecttype:-tabname:NU:conditiontoremove');                                                     \t\t\t\t\t\t// To remove an existing tab identified by code tabname\n\t\t// where objecttype can be\n\t\t// 'categories_x'\t  to add a tab in category view (replace 'x' by type of category (0=product, 1=supplier, 2=customer, 3=member)\n\t\t// 'contact'          to add a tab in contact view\n\t\t// 'contract'         to add a tab in contract view\n\t\t// 'group'            to add a tab in group view\n\t\t// 'intervention'     to add a tab in intervention view\n\t\t// 'invoice'          to add a tab in customer invoice view\n\t\t// 'invoice_supplier' to add a tab in supplier invoice view\n\t\t// 'member'           to add a tab in fundation member view\n\t\t// 'opensurveypoll'\t  to add a tab in opensurvey poll view\n\t\t// 'order'            to add a tab in customer order view\n\t\t// 'order_supplier'   to add a tab in supplier order view\n\t\t// 'payment'\t\t  to add a tab in payment view\n\t\t// 'payment_supplier' to add a tab in supplier payment view\n\t\t// 'product'          to add a tab in product view\n\t\t// 'propal'           to add a tab in propal view\n\t\t// 'project'          to add a tab in project view\n\t\t// 'stock'            to add a tab in stock view\n\t\t// 'thirdparty'       to add a tab in third party view\n\t\t// 'user'             to add a tab in user view\n        $this->tabs = array();\n\n        // Dictionaries\n\t    if (! isset($conf->quicksupplierprice->enabled))\n        {\n        \t$conf->quicksupplierprice=new stdClass();\n        \t$conf->quicksupplierprice->enabled=0;\n        }\n\t\t$this->dictionaries=array();\n        /* Example:\n        if (! isset($conf->quicksupplierprice->enabled)) $conf->quicksupplierprice->enabled=0;\t// This is to avoid warnings\n        $this->dictionaries=array(\n            'langs'=>'mylangfile@quicksupplierprice',\n            'tabname'=>array(MAIN_DB_PREFIX.\"table1\",MAIN_DB_PREFIX.\"table2\",MAIN_DB_PREFIX.\"table3\"),\t\t// List of tables we want to see into dictonnary editor\n            'tablib'=>array(\"Table1\",\"Table2\",\"Table3\"),\t\t\t\t\t\t\t\t\t\t\t\t\t// Label of tables\n            'tabsql'=>array('SELECT f.rowid as rowid, f.code, f.label, f.active FROM '.MAIN_DB_PREFIX.'table1 as f','SELECT f.rowid as rowid, f.code, f.label, f.active FROM '.MAIN_DB_PREFIX.'table2 as f','SELECT f.rowid as rowid, f.code, f.label, f.active FROM '.MAIN_DB_PREFIX.'table3 as f'),\t// Request to select fields\n            'tabsqlsort'=>array(\"label ASC\",\"label ASC\",\"label ASC\"),\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Sort order\n            'tabfield'=>array(\"code,label\",\"code,label\",\"code,label\"),\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// List of fields (result of select to show dictionary)\n            'tabfieldvalue'=>array(\"code,label\",\"code,label\",\"code,label\"),\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// List of fields (list of fields to edit a record)\n            'tabfieldinsert'=>array(\"code,label\",\"code,label\",\"code,label\"),\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// List of fields (list of fields for insert)\n            'tabrowid'=>array(\"rowid\",\"rowid\",\"rowid\"),\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Name of columns with primary key (try to always name it 'rowid')\n            'tabcond'=>array($conf->quicksupplierprice->enabled,$conf->quicksupplierprice->enabled,$conf->quicksupplierprice->enabled)\t\t\t\t\t\t\t\t\t\t\t\t// Condition to show each dictionary\n        );\n        */\n\n        // Boxes\n\t\t// Add here list of php file(s) stored in core/boxes that contains class to show a box.\n        $this->boxes = array();\t\t\t// List of boxes\n\t\t// Example:\n\t\t//$this->boxes=array(array(0=>array('file'=>'myboxa.php','note'=>'','enabledbydefaulton'=>'Home'),1=>array('file'=>'myboxb.php','note'=>''),2=>array('file'=>'myboxc.php','note'=>'')););\n\n\t\t// Permissions\n\t\t$this->rights = array();\t\t// Permission array used by this module\n\t\t$r=0;\n\n\t\t// Add here list of permission defined by an id, a label, a boolean and two constant strings.\n\t\t// Example:\n\t\t// $this->rights[$r][0] = $this->numero + $r;\t// Permission id (must not be already used)\n\t\t// $this->rights[$r][1] = 'Permision label';\t// Permission label\n\t\t// $this->rights[$r][3] = 1; \t\t\t\t\t// Permission by default for new user (0/1)\n\t\t// $this->rights[$r][4] = 'level1';\t\t\t\t// In php code, permission will be checked by test if ($user->rights->permkey->level1->level2)\n\t\t// $this->rights[$r][5] = 'level2';\t\t\t\t// In php code, permission will be checked by test if ($user->rights->permkey->level1->level2)\n\t\t// $r++;\n\n\n\t\t// Main menu entries\n\t\t$this->menu = array();\t\t\t// List of menus to add\n\t\t$r=0;\n\n\t\t// Add here entries to declare new menus\n\t\t//\n\t\t// Example to declare a new Top Menu entry and its Left menu entry:\n\t\t// $this->menu[$r]=array(\t'fk_menu'=>0,\t\t\t                // Put 0 if this is a top menu\n\t\t//\t\t\t\t\t\t\t'type'=>'top',\t\t\t                // This is a Top menu entry\n\t\t//\t\t\t\t\t\t\t'titre'=>'quicksupplierprice top menu',\n\t\t//\t\t\t\t\t\t\t'mainmenu'=>'quicksupplierprice',\n\t\t//\t\t\t\t\t\t\t'leftmenu'=>'quicksupplierprice',\n\t\t//\t\t\t\t\t\t\t'url'=>'/quicksupplierprice/pagetop.php',\n\t\t//\t\t\t\t\t\t\t'langs'=>'mylangfile@quicksupplierprice',\t        // Lang file to use (without .lang) by module. File must be in langs/code_CODE/ directory.\n\t\t//\t\t\t\t\t\t\t'position'=>100,\n\t\t//\t\t\t\t\t\t\t'enabled'=>'$conf->quicksupplierprice->enabled',\t// Define condition to show or hide menu entry. Use '$conf->quicksupplierprice->enabled' if entry must be visible if module is enabled.\n\t\t//\t\t\t\t\t\t\t'perms'=>'1',\t\t\t                // Use 'perms'=>'$user->rights->quicksupplierprice->level1->level2' if you want your menu with a permission rules\n\t\t//\t\t\t\t\t\t\t'target'=>'',\n\t\t//\t\t\t\t\t\t\t'user'=>2);\t\t\t\t                // 0=Menu for internal users, 1=external users, 2=both\n\t\t// $r++;\n\t\t//\n\t\t// Example to declare a Left Menu entry into an existing Top menu entry:\n\t\t// $this->menu[$r]=array(\t'fk_menu'=>'fk_mainmenu=xxx',\t\t    // Use 'fk_mainmenu=xxx' or 'fk_mainmenu=xxx,fk_leftmenu=yyy' where xxx is mainmenucode and yyy is a leftmenucode\n\t\t//\t\t\t\t\t\t\t'type'=>'left',\t\t\t                // This is a Left menu entry\n\t\t//\t\t\t\t\t\t\t'titre'=>'quicksupplierprice left menu',\n\t\t//\t\t\t\t\t\t\t'mainmenu'=>'xxx',\n\t\t//\t\t\t\t\t\t\t'leftmenu'=>'quicksupplierprice',\n\t\t//\t\t\t\t\t\t\t'url'=>'/quicksupplierprice/pagelevel2.php',\n\t\t//\t\t\t\t\t\t\t'langs'=>'mylangfile@quicksupplierprice',\t        // Lang file to use (without .lang) by module. File must be in langs/code_CODE/ directory.\n\t\t//\t\t\t\t\t\t\t'position'=>100,\n\t\t//\t\t\t\t\t\t\t'enabled'=>'$conf->quicksupplierprice->enabled',  // Define condition to show or hide menu entry. Use '$conf->quicksupplierprice->enabled' if entry must be visible if module is enabled. Use '$leftmenu==\\'system\\'' to show if leftmenu system is selected.\n\t\t//\t\t\t\t\t\t\t'perms'=>'1',\t\t\t                // Use 'perms'=>'$user->rights->quicksupplierprice->level1->level2' if you want your menu with a permission rules\n\t\t//\t\t\t\t\t\t\t'target'=>'',\n\t\t//\t\t\t\t\t\t\t'user'=>2);\t\t\t\t                // 0=Menu for internal users, 1=external users, 2=both\n\t\t// $r++;\n\n\n\t\t// Exports\n\t\t$r=1;\n\n\t\t// Example:\n\t\t// $this->export_code[$r]=$this->rights_class.'_'.$r;\n\t\t// $this->export_label[$r]='CustomersInvoicesAndInvoiceLines';\t// Translation key (used only if key ExportDataset_xxx_z not found)\n        // $this->export_enabled[$r]='1';                               // Condition to show export in list (ie: '$user->id==3'). Set to 1 to always show when module is enabled.\n\t\t// $this->export_permission[$r]=array(array(\"facture\",\"facture\",\"export\"));\n\t\t// $this->export_fields_array[$r]=array('s.rowid'=>\"IdCompany\",'s.nom'=>'CompanyName','s.address'=>'Address','s.zip'=>'Zip','s.town'=>'Town','s.fk_pays'=>'Country','s.phone'=>'Phone','s.siren'=>'ProfId1','s.siret'=>'ProfId2','s.ape'=>'ProfId3','s.idprof4'=>'ProfId4','s.code_compta'=>'CustomerAccountancyCode','s.code_compta_fournisseur'=>'SupplierAccountancyCode','f.rowid'=>\"InvoiceId\",'f.facnumber'=>\"InvoiceRef\",'f.datec'=>\"InvoiceDateCreation\",'f.datef'=>\"DateInvoice\",'f.total'=>\"TotalHT\",'f.total_ttc'=>\"TotalTTC\",'f.tva'=>\"TotalVAT\",'f.paye'=>\"InvoicePaid\",'f.fk_statut'=>'InvoiceStatus','f.note'=>\"InvoiceNote\",'fd.rowid'=>'LineId','fd.description'=>\"LineDescription\",'fd.price'=>\"LineUnitPrice\",'fd.tva_tx'=>\"LineVATRate\",'fd.qty'=>\"LineQty\",'fd.total_ht'=>\"LineTotalHT\",'fd.total_tva'=>\"LineTotalTVA\",'fd.total_ttc'=>\"LineTotalTTC\",'fd.date_start'=>\"DateStart\",'fd.date_end'=>\"DateEnd\",'fd.fk_product'=>'ProductId','p.ref'=>'ProductRef');\n\t\t// $this->export_entities_array[$r]=array('s.rowid'=>\"company\",'s.nom'=>'company','s.address'=>'company','s.zip'=>'company','s.town'=>'company','s.fk_pays'=>'company','s.phone'=>'company','s.siren'=>'company','s.siret'=>'company','s.ape'=>'company','s.idprof4'=>'company','s.code_compta'=>'company','s.code_compta_fournisseur'=>'company','f.rowid'=>\"invoice\",'f.facnumber'=>\"invoice\",'f.datec'=>\"invoice\",'f.datef'=>\"invoice\",'f.total'=>\"invoice\",'f.total_ttc'=>\"invoice\",'f.tva'=>\"invoice\",'f.paye'=>\"invoice\",'f.fk_statut'=>'invoice','f.note'=>\"invoice\",'fd.rowid'=>'invoice_line','fd.description'=>\"invoice_line\",'fd.price'=>\"invoice_line\",'fd.total_ht'=>\"invoice_line\",'fd.total_tva'=>\"invoice_line\",'fd.total_ttc'=>\"invoice_line\",'fd.tva_tx'=>\"invoice_line\",'fd.qty'=>\"invoice_line\",'fd.date_start'=>\"invoice_line\",'fd.date_end'=>\"invoice_line\",'fd.fk_product'=>'product','p.ref'=>'product');\n\t\t// $this->export_sql_start[$r]='SELECT DISTINCT ';\n\t\t// $this->export_sql_end[$r]  =' FROM ('.MAIN_DB_PREFIX.'facture as f, '.MAIN_DB_PREFIX.'facturedet as fd, '.MAIN_DB_PREFIX.'societe as s)';\n\t\t// $this->export_sql_end[$r] .=' LEFT JOIN '.MAIN_DB_PREFIX.'product as p on (fd.fk_product = p.rowid)';\n\t\t// $this->export_sql_end[$r] .=' WHERE f.fk_soc = s.rowid AND f.rowid = fd.fk_facture';\n\t\t// $this->export_sql_order[$r] .=' ORDER BY s.nom';\n\t\t// $r++;\n\t}\n\n\t/**\n\t *\t\tFunction called when module is enabled.\n\t *\t\tThe init function add constants, boxes, permissions and menus (defined in constructor) into Dolibarr database.\n\t *\t\tIt also creates data directories\n\t *\n     *      @param      string\t$options    Options when enabling module ('', 'noboxes')\n\t *      @return     int             \t1 if OK, 0 if KO\n\t */\n\tfunction init($options='')\n\t{\n\t\t$sql = array();\n\n\t\tdefine('INC_FROM_DOLIBARR',true);\n\n\t\tdol_include_once('/quicksupplierprice/config.php');\n\t\tdol_include_once('/quicksupplierprice/script/create-maj-base.php');\n\n\t\t$result=$this->_load_tables('/quicksupplierprice/sql/');\n\n\t\treturn $this->_init($sql, $options);\n\t}\n\n\t/**\n\t *\t\tFunction called when module is disabled.\n\t *      Remove from database constants, boxes and permissions from Dolibarr database.\n\t *\t\tData directories are not deleted\n\t *\n     *      @param      string\t$options    Options when enabling module ('', 'noboxes')\n\t *      @return     int             \t1 if OK, 0 if KO\n\t */\n\tfunction remove($options='')\n\t{\n\t\t$sql = array();\n\n\t\treturn $this->_remove($sql, $options);\n\t}\n\n}\n</Code>\n\nFile: script/interface.php\nContent: \n<Code>\n<?php\n\n\tif (! defined('NOTOKENRENEWAL')) define('NOTOKENRENEWAL','1'); // Disables token renewal\n\n    require(\"../config.php\");\n    dol_include_once('/product/class/product.class.php');\n    dol_include_once('/fourn/class/fournisseur.product.class.php');\n\n    $get = GETPOST('get');\n    $put = GETPOST('put');\n\n    $id_prod = (int)GETPOST('idprod','int');                  // id du produit demand\u00e9\n    $ref_search= GETPOST('ref_search', 'alpha');        // ref du produit demand\u00e9\n    $ref = GETPOST('ref', 'alpha');                     // ref entr\u00e9e par l'utilisateur\n    $fk_soc = GETPOST('fk_supplier', 'int');            // id du fournisseur\n    $price = price2num(GETPOST('price','int') );                   // prix entr\u00e9 par l'utilisateur\n    $qte = (int)GETPOST('qty','int');                         // quantit\u00e9 demand\u00e9e\n    $unitprice = ($qte > 1) ? $price/$qte : $price;     // prix unitaire\n    $tvatx = GETPOST('tvatx', 'alpha');                     \t\t// taux de tva saisi\n    $fk_order = (int)GETPOST('fk_order','int');               // id de la commande en cours de modification\n\n    // si la ref est laiss\u00e9e vide je rempli la ref (ne pas utiliser pour l'instant)\n    // if($ref == '') $ref = 'FP-'.$fk_soc.'-'.$id_prod.'-'.$price;\n\n    switch($put){\n        case 'updateprice': // renvoie l'id d'une ligne produit\n        \tupatePrice($id_prod, $fk_soc, $unitprice, $qte, $ref_search, $price, $ref, $tvatx);\n            break;\n\n        case 'checkprice': // v\u00e9rifie s'il y a des prix unitaire strictement inf\u00e9rieurs et on en renvoie le nombre\n        \tcheckprice($id_prod, $unitprice, $fk_order, $qte, $price, $fk_soc, $tvatx);\n            break;\n\n        Default:\n            break;\n\n    }\n\n    /**\n     * V\u00e9rifie s'il existe des prix plus bas que celui saisi et en renvoie le nombre et la liste\n     *\n     * @param $id_prod        id du produit\n     * @param $unitprice      prix unitaire\n     * @param $fk_order       id de la commande en cours\n     * @param $qte            quantit\u00e9 command\u00e9e\n     * @param $price          total HT\n     * @param $fk_soc         id du fournisseur courant\n     * @param $tvatx          tva tx supplier\n     *\n     */\n    function checkprice($id_prod, $unitprice, $fk_order, $qte, $price, $fk_soc, $tvatx){\n        global $db, $langs;\n        $langs->load('quicksupplierprice@quicksupplierprice');\n\n        ob_start();\n        $sql = 'SELECT pfp.rowid as product_fourn_price_id, pfp.unitprice as fourn_unitprice, pfp.quantity as fourn_qty, pfp.price as fourn_price, s.nom as fourn_name, s.rowid as fourn_id';\n        $sql .= ' FROM ' . MAIN_DB_PREFIX .'product_fournisseur_price as pfp , ' . MAIN_DB_PREFIX .'societe as s';\n        $sql .= ' WHERE pfp.entity = 1';\n        $sql .= ' AND pfp.fk_soc = s.rowid';\n        $sql .= ' AND s.status=1';\n        $sql .= ' AND pfp.fk_product = '.$id_prod.' AND pfp.unitprice < '.$unitprice;\n\n        $res = $db->query($sql);\n        $nb = $db->num_rows($res);\n\n        $liste = '';\n        if($nb > 0){ // s'il existe des prix plus bas\n            // on g\u00e9n\u00e8re la liste des prix inf\u00e9rieurs au prix demand\u00e9\n            $liste = '<form action=\"'.dol_buildpath('/fourn/commande/card.php', 1).'?id='. $fk_order .'\" method=\"POST\">'.\"\\n\";\n            $liste .= '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n            $liste .= '<input type=\"hidden\" name=\"action\" value=\"selectpriceQSP\">';\n            $liste .= '<input type=\"hidden\" name=\"qty\" value=\"'.$qte.'\">';\n            $liste .= '<input type=\"hidden\" name=\"tvatx\" value=\"'.$tvatx.'\">';\n            $liste .= '<div><p>Plusieurs prix sont disponibles pour ce produit veuillez valider le prix saisie ou choisir le produit dans la liste</p></div>';\n            $liste .= '<div class=\"div-table-responsive\"><table class=\"noborder noshadow\" width=\"100%\"><thead>';\n            $liste .= '<tr class=\"liste_titre\"><td>Fournisseur</td><td align=\"right\">P.U. HT</td><td align=\"right\">Quantit\u00e9 minimum</td><td align=\"right\">Total HT</td><td width=\"20%\" align=\"right\" style=\"padding-right: 20px;\">Choix</td></tr>';\n            $liste .= '</thead><tbody>';\n\n            $liste .= '<tr><td><label for=\"saisie\">'.$langs->trans('validPrice').' '.$langs->trans('AddedToThis').'</label></td>';\n            $liste .= '<td align=\"right\"><label for=\"saisie\">' . number_format($unitprice, 2) . '</label></td>';\n            $liste .= '<td align=\"right\"><label for=\"saisie\">' . $qte . '</label></td>';\n            $liste .= '<td align=\"right\"><label for=\"saisie\">' . number_format($price, 2) . '</label></td>';\n            $liste .= '<td align=\"right\" style=\"padding-right: 20px;\"><input id=\"saisie\" type=\"radio\" name=\"prix\" value=\"saisie\" checked></td></tr>';\n\n            while($obj = $db->fetch_object($res)){\n                $tooltip = ($fk_soc == $obj->fourn_id) ? $langs->trans('AddedToThis') : $langs->trans('NewCommand');\n                $liste .= '<tr><td><label for=\"sel_'.$obj->product_fourn_price_id.'\">'. $obj->fourn_name .' '.$tooltip.'</label></td>';\n                $liste .= '<td align=\"right\"><label for=\"sel_'.$obj->product_fourn_price_id.'\">' . number_format($obj->fourn_unitprice, 2) . '</label></td>';\n                $liste .= '<td align=\"right\"><label for=\"sel_'.$obj->product_fourn_price_id.'\">' . $obj->fourn_qty . '</label></td>';\n                $liste .= '<td align=\"right\"><label for=\"sel_'.$obj->product_fourn_price_id.'\">' . number_format($obj->fourn_price, 2) . '</label></td>';\n                $liste .= '<td align=\"right\" style=\"padding-right: 20px;\"><input id=\"sel_'.$obj->product_fourn_price_id.'\" type=\"radio\" name=\"prix\" value=\"'.$obj->product_fourn_price_id.'\"></td></tr>';\n            }\n\n            $liste .= '</tbody></table></div>';\n\n            $liste .= '<div class=\"center\">';\n            $liste .= '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Validate\").'\">';\n            $liste .= '</div>';\n            $liste .= '</form>';\n        }\n\n        ob_clean();\n        print json_encode( array('nb' => $nb, 'liste' => $liste));\n\n    }\n\n    /**\n     *\n     * @param unknown $id_prod\n     * @param unknown $fk_soc\n     * @param unknown $unitprice\n     * @param unknown $qte\n     * @param unknown $ref_search\n     * @param unknown $price\n     * @param unknown $ref\n     * @param unknown $tvatx\n     */\n    function upatePrice($id_prod, $fk_soc, $unitprice, $qte, $ref_search, $price, $ref, $tvatx){\n        global $db, $user;\n\n        ob_start();\n\n        // Clean vat code\n        $vat_src_code = '';\n        if (preg_match('/\\((.*)\\)/', $tvatx, $reg)) {\n        \t$vat_src_code = $reg[1];\n        \t$tvatx = preg_replace('/\\s*\\(.*\\)/', '', $tvatx); // Remove code into vatrate.\n        }\n\n        // On v\u00e9rifie si la ligne de tarif n'existe pas d\u00e9j\u00e0 pour ce fournisseur\n        $sql = \"SELECT rowid FROM \".MAIN_DB_PREFIX.\"product_fournisseur_price WHERE fk_product=\" . $id_prod;\n        $sql .= \" AND fk_soc=\" . $fk_soc;\n        $sql .= \" AND unitprice=\" . $unitprice;\n        $sql .= \" AND quantity=\" . $qte;\n        if (!empty($vat_src_code)) {\n        \t$sql .= \" AND default_vat_code='\" . $vat_src_code.\"'\";\n        }\n\n\n        $resq = $db->query($sql);\n\n        if($resq->num_rows !== 0){ // s'il existe, on renvoie l'id de cet ligne prix\n            $obj = $db->fetch_object($resq);\n            $ret = $obj->rowid;\n        } else { // si on ne trouve rien, cr\u00e9ation du prix fournisseur\n            $product = new ProductFournisseur($db);\n            $product->fetch($id_prod, $ref_search);\n\n            $fourn = new Fournisseur($db);\n            $fourn->fetch($fk_soc);\n\n             $product->product_fourn_id = $fourn->id;\n\n            // La methode update_buyprice() renvoie -1 ou -2 en cas d'erreur ou l'id de l'objet modifi\u00e9 ou cr\u00e9\u00e9 en cas de r\u00e9ussite\n             $ret=$product->update_buyprice($qte , $price, $user, 'HT', $fourn, 1, $ref, $tvatx, 0, 0, 0, 0, 0, '', array(), $vat_src_code, $price);\n        }\n\n        ob_clean();\n\n        if($ret<0) print json_encode( array('retour'=>$ret,'error'=> $product->error) );\n        else {\n            print json_encode(  array('retour'=> $ret, 'error'=>'', 'dp_desc'=>$product->description ) );\n        }\n    }\n</Code>"
                }
            ],
            "url": "https://github.com/ATM-Consulting/dolibarr_module_quicksupplierprice/commit/ccad1e4282b0e393a32fcc852e82ec0e0af5446f",
            "description": "A vulnerability, which was classified as critical, has been found in ATM Consulting dolibarr_module_quicksupplierprice up to 1.1.6. Affected by this issue is the function upatePrice of the file script/interface.php. The manipulation leads to sql injection. The attack may be launched remotely. Upgrading to version 1.1.7 is able to address this issue. The patch is identified as ccad1e4282b0e393a32fcc852e82ec0e0af5446f. It is recommended to upgrade the affected component. VDB-223382 is the identifier assigned to this vulnerability.",
            "date": "2023-03-20",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\n    \"CWE-89\",\n    \"CWE-918\"\n  ],\n  \"severity\": \"critical\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-918",
                    "CWE-89"
                ],
                "severity": "CRITICAL"
            },
            "ground_truth_CVE": "CVE-2022-4933",
            "ground_truth_CWEs": [
                "CWE-89"
            ],
            "ground_truth_severities": {
                "V3.1": "CRITICAL"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": false,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "GT_SUBSET_OF_PR"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: Describe the bug\nWhen context names are presented in form fields (e.g. the Site Administrator's bulk emails checkboxes), special characters (&, <, >) are not correctly escaped.\nWhat application are you using?\nOJS, OMP or OPS version 3.3.0-16 or older, or 3.4.0-3 or older\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions\nFile: classes/components/forms/context/PKPRestrictBulkEmailsForm.inc.php\nContent: \n<Code>\n<?php\n/**\n * @file classes/components/form/site/PKPRestrictBulkEmailsForm.inc.php\n *\n * Copyright (c) 2014-2021 Simon Fraser University\n * Copyright (c) 2000-2021 John Willinsky\n * Distributed under the GNU GPL v3. For full terms see the file docs/COPYING.\n *\n * @class PKPRestrictBulkEmailsForm\n * @ingroup classes_controllers_form\n *\n * @brief A form for setting restrictions on the sending of bulk emails in a context.\n */\nnamespace PKP\\components\\forms\\context;\nuse \\PKP\\components\\forms\\FormComponent;\nuse \\PKP\\components\\forms\\FieldOptions;\n\ndefine('FORM_RESTRICT_BULK_EMAILS', 'restrictBulkEmails');\n\nclass PKPRestrictBulkEmailsForm extends FormComponent {\n\t/** @copydoc FormComponent::$id */\n\tpublic $id = FORM_RESTRICT_BULK_EMAILS;\n\n\t/** @copydoc FormComponent::$method */\n\tpublic $method = 'PUT';\n\n\t/**\n\t * Constructor\n\t *\n\t * @param string $action URL to submit the form to\n\t * @param Context $site Journal, press or preprint server\n\t * @param DAOResultFactory $userGroups\n\t */\n\tpublic function __construct($action, $context, $userGroups) {\n\t\t$this->action = $action;\n\n\t\t$userGroupOptions = [];\n\t\twhile ($userGroup = $userGroups->next()) {\n\t\t\t$userGroupOptions[] = [\n\t\t\t\t'value' => $userGroup->getId(),\n\t\t\t\t'label' => $userGroup->getLocalizedData('name'),\n\t\t\t];\n\t\t}\n\n\t\t$request = \\Application::get()->getRequest();\n\t\t$siteSettingsUrl = $request->getDispatcher()->url($request, ROUTE_PAGE, null, 'admin', 'settings', null, null, 'setup/bulkEmails');\n\n\t\t$this->addField(new FieldOptions('disableBulkEmailUserGroups', [\n\t\t\t'label' => __('admin.settings.disableBulkEmailRoles.label'),\n\t\t\t'description' => __('admin.settings.disableBulkEmailRoles.description', ['siteSettingsUrl' => $siteSettingsUrl]),\n\t\t\t'value' => (array) $context->getData('disableBulkEmailUserGroups'),\n\t\t\t'options' => $userGroupOptions,\n\t\t]));\n\t}\n}\n</Code>\n\nFile: classes/components/forms/site/PKPSiteBulkEmailsForm.inc.php\nContent: \n<Code>\n<?php\n/**\n * @file classes/components/form/site/PKPSiteBulkEmailsForm.inc.php\n *\n * Copyright (c) 2014-2021 Simon Fraser University\n * Copyright (c) 2000-2021 John Willinsky\n * Distributed under the GNU GPL v3. For full terms see the file docs/COPYING.\n *\n * @class PKPSiteBulkEmailsForm\n * @ingroup classes_controllers_form\n *\n * @brief A form for enabling the bulk email features.\n */\nnamespace PKP\\components\\forms\\site;\nuse \\PKP\\components\\forms\\FormComponent;\nuse \\PKP\\components\\forms\\FieldOptions;\n\ndefine('FORM_SITE_BULK_EMAILS', 'bulkEmails');\n\nclass PKPSiteBulkEmailsForm extends FormComponent {\n\t/** @copydoc FormComponent::$id */\n\tpublic $id = FORM_SITE_BULK_EMAILS;\n\n\t/** @copydoc FormComponent::$method */\n\tpublic $method = 'PUT';\n\n\t/**\n\t * Constructor\n\t *\n\t * @param string $action URL to submit the form to\n\t * @param Site $site\n\t * @param Array $contexts List of context summary objects. See PKPContextQueryBuilder::getManySummary()\n\t */\n\tpublic function __construct($action, $site, $contexts) {\n\t\t$this->action = $action;\n\n\t\t$request = \\Application::get()->getRequest();\n\t\t$hostedContextsUrl = $request->getDispatcher()->url($request, ROUTE_PAGE, null, 'admin', 'contexts');\n\n\t\t$options = [];\n\t\tforeach ($contexts as $context) {\n\t\t\t$options[] = [\n\t\t\t\t'value' => $context->id,\n\t\t\t\t'label' => $context->name,\n\t\t\t];\n\t\t}\n\n\t\t$this->addField(new FieldOptions('enableBulkEmails', [\n\t\t\t'label' => __('admin.settings.enableBulkEmails.label'),\n\t\t\t'description' => __('admin.settings.enableBulkEmails.description', ['hostedContextsUrl' => $hostedContextsUrl]),\n\t\t\t'value' => (array) $site->getData('enableBulkEmails'),\n\t\t\t'options' => $options,\n\t\t]));\n\t}\n}\n</Code>\n\nFile: classes/components/forms/site/PKPSiteConfigForm.inc.php\nContent: \n<Code>\n<?php\n/**\n * @file classes/components/form/site/PKPSiteConfigForm.inc.php\n *\n * Copyright (c) 2014-2021 Simon Fraser University\n * Copyright (c) 2000-2021 John Willinsky\n * Distributed under the GNU GPL v3. For full terms see the file docs/COPYING.\n *\n * @class PKPSiteConfigForm\n * @ingroup classes_controllers_form\n *\n * @brief A preset form for the site config settings.\n */\nnamespace PKP\\components\\forms\\site;\nuse \\PKP\\components\\forms\\FormComponent;\nuse \\PKP\\components\\forms\\FieldSelect;\nuse \\PKP\\components\\forms\\FieldText;\n\ndefine('FORM_SITE_CONFIG', 'siteConfig');\n\nclass PKPSiteConfigForm extends FormComponent {\n\t/** @copydoc FormComponent::$id */\n\tpublic $id = FORM_SITE_CONFIG;\n\n\t/** @copydoc FormComponent::$method */\n\tpublic $method = 'PUT';\n\n\t/**\n\t * Constructor\n\t *\n\t * @param $action string URL to submit the form to\n\t * @param $locales array Supported locales\n\t * @param $site Site\n\t */\n\tpublic function __construct($action, $locales, $site) {\n\t\t$this->action = $action;\n\t\t$this->locales = $locales;\n\n\t\t$contextsIterator = \\Services::get('context')->getMany(['isEnabled' => true]);\n\n\t\t$this->addField(new FieldText('title', [\n\t\t\t'label' => __('admin.settings.siteTitle'),\n\t\t\t'isRequired' => true,\n\t\t\t'isMultilingual' => true,\n\t\t\t'value' => $site->getData('title'),\n\t\t]));\n\n\t\t$options = [['value' => '', 'label' => '']];\n\t\tforeach ($contextsIterator as $context) {\n\t\t\t$options[] = [\n\t\t\t\t'value' => $context->getId(),\n\t\t\t\t'label' => $context->getLocalizedData('name'),\n\t\t\t];\n\t\t}\n\t\tif (count($options) > 1) $this->addField(new FieldSelect('redirect', [\n\t\t\t'label' => __('admin.settings.redirect'),\n\t\t\t'description' => __('admin.settings.redirectInstructions'),\n\t\t\t'options' => $options,\n\t\t\t'value' => $site->getData('redirect'),\n\t\t]));\n\n\t\t$this->addField(new FieldText('minPasswordLength', [\n\t\t\t'label' => __('admin.settings.minPasswordLength'),\n\t\t\t'isRequired' => true,\n\t\t\t'size' => 'small',\n\t\t\t'value' => $site->getData('minPasswordLength'),\n\t\t]));\n\t}\n}\n</Code>"
                }
            ],
            "url": "https://github.com/pkp/pkp-lib/commit/d4111c4d0eef783f1ed2e55654a5b83d9d527d97",
            "description": "Cross-site Scripting (XSS) - Reflected in GitHub repository pkp/pkp-lib prior to 3.3.0-16.",
            "date": "2023-11-01",
            "github_description": "Describe the bug\nWhen context names are presented in form fields (e.g. the Site Administrator's bulk emails checkboxes), special characters (&, <, >) are not correctly escaped.\nWhat application are you using?\nOJS, OMP or OPS version 3.3.0-16 or older, or 3.4.0-3 or older\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "llm_raw_output": "{\n  \"CWE_IDS\": [\"CWE-79\"],\n  \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-79"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2023-5891",
            "ground_truth_CWEs": [
                "CWE-79"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": true,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "IDENTICAL"
        },
        {
            "llm_input": [
                {
                    "role": "system",
                    "content": "You are an expert in identifying Common Weakness Enumerations (CWEs) and assessing the severity of vulnerabilities based on both the buggy code(s) and bug description.\n\nInstructions:\n1. * Input: You will receive one or more sections of buggy files enclosed within <Code> and </Code>, and a description of the buggy code. If there are multiple buggy files, they will be related to the same bug. You may receive multiple file names and their contents provided as:\n   Description: description of the bug\n   File: file_name\n   Content: \n        <Code> content </Code>\n2. * Output: Generate a JSON object with the following structure:\n   {\n     \"CWE_IDS\": [], \n     \"severity\": null\n   }\n\nOutput Details:\n- CWE_IDS: If you identify any CWE IDs from the provided buggy code(s) or its description, list them here (e.g., [\"CWE-123\"]). If no CWEs are found, leave this as an empty array [].\n- severity: If the provided information indicates a security vulnerability (CVE), provide its severity level (e.g., \"high\") based on CVSS V3.1 . If there are no vulnerabilities, set this field to null.\n\nExample Outputs:\n1. If CWEs are found and severity is identified:\n   {\n     \"CWE_IDS\": [\"CWE-123\", \"CWE-456\"],\n     \"severity\": \"high\"\n   }\n\n2. If no CWEs or severity are identified:\n   {\n     \"CWE_IDS\": [],\n     \"severity\": null\n   }\n\nImportant: Your output must strictly follow the described JSON structure. Do not include any additional fields, descriptions, or text.\n\nCVSS v3.1 Guide:\n\nBase Metrics:\n1.\tAttack Vector (AV): How the vulnerability is exploited (Network (N), Adjacent Network (A), Local (L), Physical (P))\n2.\tAttack Complexity (AC): Difficulty of exploitation (Low (L), High (H))\n3.\tPrivileges Required (PR): Level of required privileges an attacker needs to exploit the vulnerability (None (N), Low (L), High (H))\n4.\tUser Interaction (UI): Need for user interaction (None (N), Required (R))\n5.\tScope (S): Impact on other components (Unchanged (U), Changed (C))\n6.\tConfidentiality (C), Integrity (I), Availability (A): Impact on security properties (None (N), Low (L), High (H))\n\nSeverity Levels and Example Combinations:\n1. None (0.0): This vulnerability is extremely difficult to exploit and has minimal impact. For example, \u201cAV:P/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:N\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:N\u201d\n2. Low (0.1 - 3.9): These vulnerabilities are somewhat difficult to exploit or have limited impact. For example, \u201cAV:L/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L\u201d and \u201cAV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N\u201d\n3. Medium (4.0 - 6.9): Involves vulnerabilities that are exploitable and could cause moderate damage. For example, \u201cAV:N/AC:H/PR:H/UI:R/S:C/C:L/I:L/A:N\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\u201d\n4. High (7.0 - 8.9): Represents vulnerabilities that are easier to exploit and have significant consequences. For example, \u201cAV:L/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:L\u201d and \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L\u201d\n5. Critical (9.0 - 10.0): These vulnerabilities are both easy to exploit and have a devastating impact. For example, \u201cAV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\u201d and \u201cAV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H\u201d\n\nNote: The severity level may change based on specific characteristics of the vulnerability. For example, if the attack vector is physical but the impact on availability is high, the severity might increase."
                },
                {
                    "role": "user",
                    "content": "Description: showdoc is vulnerable to Cross-Site Request Forgery (CSRF)\nFile: server/Application/Api/Controller/UserController.class.php\nContent: \n<Code>\n<?php\nnamespace Api\\Controller;\nuse Think\\Controller;\nclass UserController extends BaseController {\n\n\n    //\u6ce8\u518c\n    public function register(){\n        $username = trim(I(\"username\"));\n        $password = I(\"password\");\n        $confirm_password = I(\"confirm_password\");\n        $v_code = I(\"v_code\");\n        $register_open = D(\"Options\")->get(\"register_open\" ) ;\n        if ($register_open === '0') {\n           $this->sendError(10101,\"\u7ba1\u7406\u5458\u5df2\u5173\u95ed\u6ce8\u518c\");\n           return ;\n        }\n        if (C('CloseVerify') || $v_code && $v_code == session('v_code') ) {\n        session('v_code',null) ;\n        if ( $password != '' && $password == $confirm_password) {\n\n            if(!D(\"User\")->checkDbOk()){\n                $this->sendError(100100,\"\u6570\u636e\u5e93\u8fde\u63a5\u4e0d\u4e0a\u3002\u8bf7\u786e\u4fdd\u5b89\u88c5\u4e86php-sqlite\u6269\u5c55\u4ee5\u53ca\u6570\u636e\u5e93\u6587\u4ef6Sqlite/showdoc.db.php\u53ef\u7528\");\n                return;\n            }\n\n            if ( ! D(\"User\")->isExist($username) ) {\n                $new_uid = D(\"User\")->register($username,$password);\n                if ($new_uid) {\n\n                    $create_sample = D(\"Options\")->get(\"create_sample\") ;\n                    //\u83b7\u53d6\u540e\u53f0\u7684\u8bed\u8a00\u8bbe\u7f6e\n                    //\u8fd9\u662f\u4e2a\u5386\u53f2\u5305\u88b1\u3002\u56e0\u4e3a\u5b89\u88c5\u7684\u65f6\u5019\u8bed\u8a00\u8bbe\u7f6e\u6ca1\u6709\u5199\u5230API\u6a21\u5757\u7684\u914d\u7f6e\u4e0b\uff0c\u6240\u4ee5\u53ea\u80fd\u8bfb\u6587\u4ef6\u8bfb\u53d6Home\u6a21\u5feb\u7684\u914d\u7f6e\u6587\u4ef6\n                    $config = file_get_contents(\"./Application/Home/Conf/config.php\");\n                    if ($create_sample !== '0' && strstr($config, \"'zh-cn',\") ) {\n                        //\u5bfc\u5165\u793a\u4f8b\u9879\u76ee\n                        $this->_importSample($new_uid);\n                    }\n\n                    //\u8bbe\u7f6e\u81ea\u52a8\u767b\u5f55\n                    $ret = D(\"User\")->where(\"uid = '$new_uid' \")->find() ;\n                    unset($ret['password']);\n                    session(\"login_user\" , $ret );\n                    $token = D(\"UserToken\")->createToken($ret['uid']);\n                    cookie('cookie_token',$token,array('expire'=>60*60*24*90,'httponly'=>'httponly'));//\u6b64\u5904\u7531\u670d\u52a1\u7aef\u63a7\u5236token\u662f\u5426\u8fc7\u671f\uff0c\u6240\u4ee5cookies\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u591a\u4e45\u90fd\u65e0\u6240\u8c13\n                  $this->sendResult(array(\n                    \"uid\" => $ret['uid'] ,\n                    \"username\" => $ret['username'] ,\n                    \"name\" => $ret['name'] ,\n                    \"groupid\" => $ret['groupid'] ,\n                    \"avatar\" => $ret['avatar'] ,\n                    \"avatar_small\" => $ret['avatar_small'] ,\n                    \"email\" => $ret['email'] ,\n                    \"email_verify\" => $ret['email_verify'] ,\n                    \"user_token\" => $token ,\n                )); \n\n                }else{\n                    $this->sendError(10101,'register fail');\n                }\n            }else{\n                $this->sendError(10101,L('username_exists'));\n            }\n\n        }else{\n            $this->sendError(10101,L('code_much_the_same'));\n        }\n        }else{\n            $this->sendError(10206,L('verification_code_are_incorrect'));\n        }\n    }\n\n    //\u5bfc\u5165\u793a\u4f8b\u9879\u76ee\n    private function _importSample($uid){\n        $this->_importZip(\"../Public/SampleZip/apidoc.zip\" , $uid);\n        $this->_importZip(\"../Public/SampleZip/databasedoc.zip\" , $uid);\n        $this->_importZip(\"../Public/SampleZip/teamdoc.zip\" , $uid);\n        $this->_importZip(\"../Public/SampleZip/spreadsheet.zip\" , $uid);\n    }\n\n    private function _importZip($file , $uid){\n        $zipArc = new \\ZipArchive();\n        $ret = $zipArc->open($file, \\ZipArchive::CREATE);\n        $info = $zipArc->getFromName(\"prefix_info.json\") ;\n        if ($info) {\n            $info_array = json_decode($info ,1 );\n            if ($info_array) {\n                D(\"Item\")->import( json_encode($info_array) , $uid );\n                return true;\n            }\n        }\n        return false ;\n    }\n\n    //\u767b\u5f55\n    public function login(){\n        $username = trim(I(\"username\"));\n        $password = I(\"password\");\n        $v_code = I(\"v_code\");\n        if (!$password) {\n                $this->sendError(10206,\"no empty password\");\n                return;\n        }\n        //\u68c0\u67e5\u7528\u6237\u8f93\u9519\u5bc6\u7801\u7684\u6b21\u6570\u3002\u5982\u679c\u8d85\u8fc7\u4e00\u5b9a\u6b21\u6570\uff0c\u5219\u9700\u8981\u9a8c\u8bc1 \u9a8c\u8bc1\u7801\n        $key= 'login_fail_times_'.$username;\n        if(!D(\"VerifyCode\")->_check_times($key)){\n            if (!$v_code || $v_code != session('v_code')) {\n                $this->sendError(10206,L('verification_code_are_incorrect'));\n                return;\n            }\n        }\n        session('v_code',null) ;\n\n        if(!D(\"User\")->checkDbOk()){\n            $this->sendError(100100,\"\u6570\u636e\u5e93\u8fde\u63a5\u4e0d\u4e0a\u3002\u8bf7\u786e\u4fdd\u5b89\u88c5\u4e86php-sqlite\u6269\u5c55\u4ee5\u53ca\u6570\u636e\u5e93\u6587\u4ef6Sqlite/showdoc.db.php\u53ef\u7528\");\n            return;\n        }\n\n        $ret = D(\"User\")->checkLogin($username,$password);\n        //\u5982\u679c\u5931\u8d25\u5219\u5c1d\u8bd5ldap\u767b\u5f55\n        if (!$ret) {\n            $ret = D(\"User\")->checkLdapLogin($username,$password);\n        }\n        if ($ret) {\n            //\u83b7\u53d6\u540e\u53f0\u7684\u8bed\u8a00\u8bbe\u7f6e\n            //\u8fd9\u662f\u4e2a\u5386\u53f2\u5305\u88b1\u3002\u56e0\u4e3a\u5b89\u88c5\u7684\u65f6\u5019\u8bed\u8a00\u8bbe\u7f6e\u6ca1\u6709\u5199\u5230API\u6a21\u5757\u7684\u914d\u7f6e\u4e0b\uff0c\u6240\u4ee5\u53ea\u80fd\u8bfb\u6587\u4ef6\u8bfb\u53d6Home\u6a21\u5feb\u7684\u914d\u7f6e\u6587\u4ef6\n            $config = file_get_contents(\"./Application/Home/Conf/config.php\");\n\n            if (D(\"Item\")->count() < 1 && strstr($config, \"'zh-cn',\") ) {\n                //\u5982\u679c\u9879\u76ee\u8868\u662f\u7a7a\u7684\uff0c\u5219\u751f\u6210\u7cfb\u7edf\u793a\u4f8b\u9879\u76ee\n                $this->_importSample(1);\n            }\n          unset($ret['password']);\n          session(\"login_user\" , $ret );\n          D(\"User\")->setLastTime($ret['uid']);\n          $token = D(\"UserToken\")->createToken($ret['uid'],60*60*24*180);\n          cookie('cookie_token',$token,array('expire'=>60*60*24*180,'httponly'=>'httponly'));//\u6b64\u5904\u7531\u670d\u52a1\u7aef\u63a7\u5236token\u662f\u5426\u8fc7\u671f\uff0c\u6240\u4ee5cookies\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u591a\u4e45\u90fd\u65e0\u6240\u8c13\n          $this->sendResult(array(\n            \"uid\" => $ret['uid'] ,\n            \"username\" => $ret['username'] ,\n            \"name\" => $ret['name'] ,\n            \"groupid\" => $ret['groupid'] ,\n            \"avatar\" => $ret['avatar'] ,\n            \"avatar_small\" => $ret['avatar_small'] ,\n            \"email\" => $ret['email'] ,\n            \"email_verify\" => $ret['email_verify'] ,\n            \"user_token\" => $token ,\n        ));              \n        }else{\n            D(\"VerifyCode\")->_ins_times($key);//\u8f93\u9519\u5bc6\u7801\u5219\u8bbe\u7f6e\u8f93\u9519\u6b21\u6570\n            \n            if(D(\"VerifyCode\")->_check_times($key)){\n                $error_code = 10204 ;\n            }else{\n                $error_code = 10210 ;\n            }\n            $this->sendError($error_code,L('username_or_password_incorrect'));\n            return;\n        }\n        \n    }\n    \n    //\u767b\u5f552\n    public function loginByVerify(){\n        $username = I(\"username\");\n        $password = I(\"password\");\n        $captcha_id = I(\"captcha_id\");\n        $captcha = I(\"captcha\");\n        \n        if ( !D(\"Captcha\")->check($captcha_id , $captcha) ) {\n            $this->sendError(10206,L('verification_code_are_incorrect'));\n            return;\n        }\n        $ret = D(\"User\")->checkLogin($username,$password);\n        //\u5982\u679c\u5931\u8d25\u5219\u5c1d\u8bd5ldap\u767b\u5f55\n        if (!$ret) {\n            $ret = D(\"User\")->checkLdapLogin($username,$password);\n        }\n        \n        if ($ret) {\n            \n            //\u83b7\u53d6\u540e\u53f0\u7684\u8bed\u8a00\u8bbe\u7f6e\n            //\u8fd9\u662f\u4e2a\u5386\u53f2\u5305\u88b1\u3002\u56e0\u4e3a\u5b89\u88c5\u7684\u65f6\u5019\u8bed\u8a00\u8bbe\u7f6e\u6ca1\u6709\u5199\u5230API\u6a21\u5757\u7684\u914d\u7f6e\u4e0b\uff0c\u6240\u4ee5\u53ea\u80fd\u8bfb\u6587\u4ef6\u8bfb\u53d6Home\u6a21\u5feb\u7684\u914d\u7f6e\u6587\u4ef6\n            $config = file_get_contents(\"./Application/Home/Conf/config.php\");\n\n            if (D(\"Item\")->count() < 1 && strstr($config, \"'zh-cn',\") ) {\n                //\u5982\u679c\u9879\u76ee\u8868\u662f\u7a7a\u7684\uff0c\u5219\u751f\u6210\u7cfb\u7edf\u793a\u4f8b\u9879\u76ee\n                $this->_importSample(1);\n            }\n\n          unset($ret['password']);\n          session(\"login_user\" , $ret );\n          D(\"User\")->setLastTime($ret['uid']);\n          $token = D(\"UserToken\")->createToken($ret['uid'], 60*60*24*180);\n          $this->sendResult(array(\n            \"uid\" => $ret['uid'] ,\n            \"username\" => $ret['username'] ,\n            \"name\" => $ret['name'] ,\n            \"groupid\" => $ret['groupid'] ,\n            \"avatar\" => $ret['avatar'] ,\n            \"avatar_small\" => $ret['avatar_small'] ,\n            \"email\" => $ret['email'] ,\n            \"email_verify\" => $ret['email_verify'] ,\n            \"user_token\" => $token ,\n            )); \n\n        }else{\n            $this->sendError(10204,L('username_or_password_incorrect'));\n            return;\n        }\n        \n    }\n\n    //\u6ce8\u518c2\n    public function registerByVerify(){\n        $username = trim(I(\"username\"));\n        $password = I(\"password\");\n        $confirm_password = I(\"confirm_password\");\n        $captcha_id = I(\"captcha_id\");\n        $captcha = I(\"captcha\");\n        $register_open = D(\"Options\")->get(\"register_open\" ) ;\n        if ($register_open === '0') {\n           $this->sendError(10101,\"\u7ba1\u7406\u5458\u5df2\u5173\u95ed\u6ce8\u518c\");\n           return ;\n        }\n        if ( !D(\"Captcha\")->check($captcha_id , $captcha) ) {\n            $this->sendError(10206,L('verification_code_are_incorrect'));\n            return;\n        }\n        if ( $password != '' && $password == $confirm_password) {\n\n            if ( ! D(\"User\")->isExist($username) ) {\n                $new_uid = D(\"User\")->register($username,$password);\n                if ($new_uid) {\n\n                    $create_sample = D(\"Options\")->get(\"create_sample\") ;\n                    //\u83b7\u53d6\u540e\u53f0\u7684\u8bed\u8a00\u8bbe\u7f6e\n                    //\u8fd9\u662f\u4e2a\u5386\u53f2\u5305\u88b1\u3002\u56e0\u4e3a\u5b89\u88c5\u7684\u65f6\u5019\u8bed\u8a00\u8bbe\u7f6e\u6ca1\u6709\u5199\u5230API\u6a21\u5757\u7684\u914d\u7f6e\u4e0b\uff0c\u6240\u4ee5\u53ea\u80fd\u8bfb\u6587\u4ef6\u8bfb\u53d6Home\u6a21\u5feb\u7684\u914d\u7f6e\u6587\u4ef6\n                    $config = file_get_contents(\"./Application/Home/Conf/config.php\");\n                    if ($create_sample !== '0' && strstr($config, \"'zh-cn',\") ) {\n                        //\u5bfc\u5165\u793a\u4f8b\u9879\u76ee\n                        $this->_importSample($new_uid);\n                    }\n\n                    //\u8bbe\u7f6e\u81ea\u52a8\u767b\u5f55\n                    $ret = D(\"User\")->where(\"uid = '$new_uid' \")->find() ;\n                    unset($ret['password']);\n                    session(\"login_user\" , $ret );\n                    $token = D(\"UserToken\")->createToken($ret['uid']);\n                    cookie('cookie_token',$token,array('expire'=>60*60*24*90,'httponly'=>'httponly'));//\u6b64\u5904\u7531\u670d\u52a1\u7aef\u63a7\u5236token\u662f\u5426\u8fc7\u671f\uff0c\u6240\u4ee5cookies\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u591a\u4e45\u90fd\u65e0\u6240\u8c13\n                    \n                    $this->sendResult(array(\n                        \"uid\" => $ret['uid'] ,\n                        \"username\" => $ret['username'] ,\n                        \"name\" => $ret['name'] ,\n                        \"groupid\" => $ret['groupid'] ,\n                        \"avatar\" => $ret['avatar'] ,\n                        \"avatar_small\" => $ret['avatar_small'] ,\n                        \"email\" => $ret['email'] ,\n                        \"user_token\" => $token ,\n                    ));\n\n                }else{\n                    $this->sendError(10101,'register fail');\n                }\n            }else{\n                $this->sendError(10101,L('username_exists'));\n            }\n\n        }else{\n            $this->sendError(10101,L('code_much_the_same'));\n        }\n\n    }\n\n    //\u83b7\u53d6\u7528\u6237\u4fe1\u606f\n    public function info(){\n        $login_user = $this->checkLogin();\n        $uid = $login_user['uid'] ;\n        $field = \"uid,username,email,name,avatar,avatar_small,groupid\" ;\n        $info = D(\"User\")->where(\" uid = '$uid' \")->field($field)->find();\n        $this->sendResult($info); \n    }\n\n    //\u83b7\u53d6\u6240\u6709\u7528\u6237\u540d\n    public function allUser(){\n        $login_user = $this->checkLogin();\n        $uid = $login_user['uid'] ;\n        $username = I(\"username\");\n        $field = \"username , uid , name\" ;\n        if ($username) {\n            $username = \\SQLite3::escapeString($username) ;\n            $where = \" username like '%{$username}%'\" ;\n        }else{\n            $where = ' 1 = 1 ';\n        }\n        $info = D(\"User\")->where($where)->field($field)->select();\n        $this->sendResult($info); \n    }\n\n    //\u901a\u8fc7\u65e7\u5bc6\u7801\u9a8c\u8bc1\u6765\u66f4\u65b0\u7528\u6237\u5bc6\u7801\n    public function resetPassword(){\n        $login_user = $this->checkLogin();\n        $username = $login_user['username'];\n        $password = I(\"password\");\n        $new_password = I(\"new_password\");\n        $ret = D(\"User\")->checkLogin($username,$password);\n        if ($ret) {\n                $ret = D(\"User\")->updatePwd($login_user['uid'],$new_password);\n                if ($ret) {\n                    D(\"UserToken\")->where(\"  uid = '%d' \" ,array($login_user['uid']) )->delete();\n                    $this->sendResult(array());\n                }else{\n                    $this->sendError(10101,L('modify_faild'));\n                }\n\n        }else{  \n            $this->sendError(10101,L('old_password_incorrect'));\n        }\n    }\n    \n    //\u9000\u51fa\u767b\u5f55\n    public function logout(){\n        $login_user = $this->checkLogin();\n        D(\"UserToken\")->where(\" uid = '$login_user[uid]' \")->save(array(\"token_expire\"=>0));\n        session(\"login_user\" , NULL);\n        cookie('cookie_token',NULL);\n        session(null);\n        $this->sendResult(array());\n    }\n\n\n    public function updateInfo(){\n        $user = $this->checkLogin();\n        $uid = $user['uid'];\n        $name = I(\"name\");\n\n        D(\"User\")->where(\" uid = '$uid' \")->save(array(\"name\"=>$name));\n        $this->sendResult(array());\n\n    }\n\n    public function oauthInfo(){\n        $oauth2_open = D(\"Options\")->get(\"oauth2_open\" ) ;\n        $oauth2_form = D(\"Options\")->get(\"oauth2_form\" ) ;\n        $oauth2_entrance_tips = '';\n        if($oauth2_form){\n            $oauth2_form = json_decode($oauth2_form,1);\n            if($oauth2_form && $oauth2_form['entrance_tips']){\n                $oauth2_entrance_tips = $oauth2_form['entrance_tips'] ;\n            }\n        }\n        $this->sendResult(array(\n            \"oauth2_open\" => $oauth2_open ,\n            \"oauth2_entrance_tips\" => $oauth2_entrance_tips ,\n        ));\n\n    }\n\n\n\n\n}\n</Code>"
                }
            ],
            "url": "https://github.com/star7th/showdoc/commit/67093c879a6563aa6ee08003177777d1975e2351",
            "description": "showdoc is vulnerable to Cross-Site Request Forgery (CSRF)",
            "date": "2021-11-13",
            "github_description": "No descriptions found.",
            "llm_raw_output": "{\n    \"CWE_IDS\": [\"CWE-352\"],\n    \"severity\": \"medium\"\n}",
            "llm_output": {
                "CWE_IDS": [
                    "CWE-352"
                ],
                "severity": "MEDIUM"
            },
            "ground_truth_CVE": "CVE-2021-3775",
            "ground_truth_CWEs": [
                "CWE-352"
            ],
            "ground_truth_severities": {
                "V3.1": "MEDIUM"
            },
            "ground_truth_CVSS_version": [
                "V3.1"
            ],
            "is_equal": true,
            "error_msg": null,
            "equal_severity": true,
            "cwe_evaluation": "IDENTICAL"
        }
    ]
}